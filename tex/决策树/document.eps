%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: document.pdf
%%Creator: Adobe Acrobat 17.12.0
%%For: 16053
%%CreationDate: 2018/8/12, 0:00:54
%%BoundingBox: -1 0 390 279
%%HiResBoundingBox: 0 0 389.2803 278.1131
%%CropBox: 0 0 389.2803 278.1131
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 990 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 84.159810, 2016/09/10-02:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2018-08-11T23:59:14+08:00"
   xmp:CreatorTool="TeX"
   xmp:ModifyDate="2018-08-12T00:00:36+08:00"
   xmp:MetadataDate="2018-08-12T00:00:36+08:00"
   pdfx:PTEX.Fullbanner="This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017/W32TeX) kpathsea version 6.2.3"
   pdf:Producer="pdfTeX-1.40.18"
   pdf:Trapped="False"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:8cec6380-2b7b-44d1-8392-e6945b5e46af"
   xmpMM:InstanceID="uuid:00e466b6-79c7-402a-be5d-73f0c9d0407a"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -278.113 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-1.52588e-5 0 mo
-1.52588e-5 278.113 li
389.28 278.113 li
389.28 0 li
cp
clp
false sop
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: EBAAAA+CMR10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /EBAAAA+CMR10 def
/FontInfo 7 dict dup begin
/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMR10.) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
def
/FontBBox {-40 -250 1009 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 431 448 666 677 683 705] def
/OtherBlues [-206 -194] def
/BlueScale 0.04379 def
/StdHW [31] def
/StdVW [69] def
/StemSnapH [22 31] def
/StemSnapV [69 89] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/one <1C60D8A8C9B7A73DC579B9CE13A4EA8C203AFC890ABD6F58341B006CF1
BDD8FED3A7238E01F751FEAC75885229C293891E5636AD630D9C884528B6FEF0
25DDA723DD68103C537890571B4B95BCC242A78DD7EA0DA80E91751ED6DEA668
D97ECF27E58978E82B8932F2635747B0D240AA> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/TXGBYT+CMR10 /EBAAAA+CMR10 findfont ct_VMDictPut
/TXGBYT+CMR10*1 
[49{/.notdef}rp /one 206{/.notdef}rp]
TXGBYT+CMR10 nf
TXGBYT+CMR10*1 [10.5 0 0 -10.5 0 0 ]msf
321.276 -21.8038 mo
(1)sh
gsave
37.0283 143.009 mo
7.99884 143.009 li
5.7979 143.009 4.01373 144.794 4.01373 146.995 cv
4.01373 159.524 li
4.01373 161.725 5.7979 163.509 7.99884 163.509 cv
37.0283 163.509 li
39.2293 163.509 41.0134 161.725 41.0134 159.524 cv
41.0134 146.995 li
41.0134 144.794 39.2293 143.009 37.0283 143.009 cv
cp
clp
-14.4904 173.761 mo
59.5176 173.761 li
59.5176 132.758 li
-14.4904 132.758 li
cp
level3{
gsave
clp
[.74008 0 0 -.41003 -14.4904 173.761 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 100.001 ]
/Domain [0 100.001 ]
/Extend[ false false]
/Function
<<
/Domain[0 100.001 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f
!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f
!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f
!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f!,4.f
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!,4.f!#Z+Dzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!&k_pzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [25.0003 50.0006 75.001 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.74008 0 0 -.41003 -14.4904 173.761 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~Bk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9q
BkV-kAS#C^@UW\Q?X@#D>[(B8=]ea+<`N*t;Gp@g:JX_[9M8#N8Ou?A7R]^46UF((5X.Fq4?P\d3B/uW
2`<NN1c.!E1,:R=0J>(3/hJY+/1W5#.Ocbo-RU5f,paf^,9e<T+WqmL+!)ID*?6";)B'J2(`4&*()7Pu
zzzzzzzzzzzzzzz!!!!!~>
<~0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;
0eb:70/"q1/M/P*/1`;%.Olns.4?Sm-RU8g-7'ra,U=TZ,9e<U+X%sN+<M[H*Zc=B*?6%<)]K\6)&X;/
(`*u)(D[c%()7Q!'bh>r'GD,n',(uk&eYcg&J5Qc&.f?_%hB0\%LrsX%1NaT$k*OP$O[=M$47+I#mgnE
zzzzzzzzzzzzzzz!!!!!~>
0 ]
>>
0 0 0 100.001 []false false []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
grestore
.3985 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
37.0283 143.009 mo
7.99884 143.009 li
5.7979 143.009 4.01373 144.794 4.01373 146.995 cv
4.01373 159.524 li
4.01373 161.725 5.7979 163.509 7.99884 163.509 cv
37.0283 163.509 li
39.2293 163.509 41.0134 161.725 41.0134 159.524 cv
41.0134 146.995 li
41.0134 144.794 39.2293 143.009 37.0283 143.009 cv
cp
@
%ADOBeginSubsetFont: FBAAAA+SimSun Initial
ct_T42Dict begin
-0.008 -0.141 1 0.859
 256 array 0 1 255 {1 index exch /.notdef put} for  /FBAAAA+SimSun
Type42DictBegin
[<00010000000c000c000c000c4f532f324fd9e4e2000000cc000000566376
742004ba01cd00000124000000ba6670676dc564b4f6000001e000000dee
676c7966cdf29cee00001d100000012a68656164eb87fd0d00000fd00000
003668686561020100d70000100800000024686d74780200000b0000102c
0000000c6c6f63610000009500001038000000086d61787002e404d00000
1040000000206e616d65bf2474190000106000000aaa7072657051510fe7
00001b0c0000020467646972000000000000000000000000000100800190
0005000800800080000000100080008000000080000c0041000002010600
030101010101000000031000000000000000000000005a59454300400000
f0ff00dcffdc002400dc00248000000000000000000000b7fff800af0002
00af000200740002000000020000000200000002ffdfffff00b100000000
00020000000f001000060006000e00060006000600100006001000080010
000e00070007000e00090011000700190007000d0009000e000d00170009
0015000200090006000e0010001300160006001000080010000c000e0010
00060008000c00060008000e0009001100130007000a000f00190007000a
00060009000d000f00120017000600090013001600020009000b000e0000
404687868584838281807f7e7d7c7b7a797877767574737271706f6e6d6c
6b6a696867666564636261605f5e5d5c5b5a5958575655545351504f4e4d
4c4b4a49484746281f100a092c01b10b0a432343650a2d2c00b10a0b4323
430b2d2c01b00643b00743650a2d2cb04f2b20b0405158214b525845441b
2121591b2321b040b0042545b004254561648a63525845441b212159592d
2c00b00743b006430b2d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c2320b000508a8a64b10003255458b0401bb1010325
5458b005438b59b04f2b5923b0622b2321235865592d2cb108000c215460
432d2cb10c000c215460432d2c012047b0024320b8100062b81000635723
b8010062b8100063575a58b020606659482d2cb1000225b00225b0022553
b800352378b00225b0022560b020632020b00625236250588a21b0016023
1b2020b00625236252582321b001611b8a212321205959b8ffc11c60b020
6323212d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b12601885158b940
00020063b80400885458b202400243604259b94000040063b80800885458
b2028002436042595959595959b10002435458400a0540084009400c020d
021bb10102435458b2054008ba010000090100b30c010d011bb180024352
58b2054008b80180b109401bb2054008ba01800009014059b94000008088
55b94000020063b8040088555a58b30c000d011bb30c000d015959594242
4242422d2c45b1024e2b23b04f2b20b0405158214b5158b0022545b1014e
2b60591b2321b003254520648a63b0405358b1024e2b601b215959442d2c
20b00050205823651b2359b114148a7045b04f2b23b1610626602b8a58b0
05438b592358655923103a2d2cb003254963234660b04f2b23b00425b004
2549b0032563562060b062602bb003252010468a4660b02063613a2d2cb0
0016b1020325b1010425013e003eb10102060cb00a236542b00b2342b102
0325b1010425013f003fb10102060cb006236542b0072342b00116b10002
4354584523452018698a6323622020b0405058671b665961b02063b04023
61b00423421bb104004221215918012d2c2045b1004e2b442d2c4b51b140
4f2b505b582045b1014e2b208a8a4420b1400426616361b1014e2b44211b
23218a45b1014e2b208a234444592d2c4b51b1404f2b505b5845208ab040
6163601b23214559b1014e2b442d2c2345208a4523612064b04051b00425
20b0005323b040515a5ab1404f2b545a588a0c642364235358b140408a61
2063611b2063591b8a5963b1024e2b60442d2c012d2c002d2c05b10b0a43
2343650a2d2cb10a0b4323430b022d2cb002256366b00225b82000626023
622d2cb0022563b0206066b00225b82000626023622d2cb002256367b002
25b82000626023622d2cb002256366b02060b00225b82000626023622d2c
234ab1024e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b0022561
64b00343525821206459b1024e2b23b000505865592d2c238a4a234564b0
022564b002256164b00343525821206459b1014e2b23b000505865592d2c
20b003254ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb003
25b003258ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb003
2546b003254660b004252eb00425b00425b0042620b000505821b06a1bb0
6c592bb0032546b00325466061b08062208a2010233a232010233a2d2cb0
032547b003254760b0052547b0806361b00225b00625496323b005254ab0
80632058621b2159b0042646608a468a4660b02063612d2cb00426b00425
b00425b00426b06e2b208a2010233a232010233a2d2c2320b001545821b0
0225b1024e2bb0805020605920606020b001515821211b20b00551582120
6661b0402361b100032550b00325b00325505a5820b00325618a535821b0
00591b21591bb00754582066616523211b2121b000595959b1024e2b2d2c
b00225b004254ab0005358b0001b8a8a238ab00159b004254620666120b0
0526b0062649b00526b00526b0702b236165b02060206661b02061652d2c
b0022546208a20b000505821b1024e2b1b452321596165b00225103b2d2c
b0042620b802006220b80200638a236120b05d602bb00525118a128a2039
8a58ba005d10000004266356602b23212010204620b1024e2b23611b2321
208a201049b1024e2b593b2d2cba005d10000009256356602bb00525b005
25b00526b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba00
5d10000008266356602b20b0005258b0502bb00525b00525b00725b00725
b00525b0712bb0021738b00052b00225b001525a58b00425b0062549b003
25b00525496020b0405258211bb000525820b0025458b00425b00425b007
25b0072549b00217381bb00425b00425b00425b0062549b0021738595959
595921212121212d2cba005d1000000b256356602bb00725b00725b00625
b00625b00c25b00c25b00925b00825b06e2bb0041738b00725b00725b007
26b06d2bb00425b00425b00426b06d2bb0502bb00625b00625b00325b071
2bb00525b00525b00325b002173820b00625b00625b00525b0712b60b006
25b00625b0042565b0021738b00225b002256020b040535821b0406123b0
4061231bb8ffc05058b0406023b04060235959b00825b00825b00426b002
1738b00525b005258ab002173820b0005258b00625b0082549b00325b005
25496020b0405258211bb0005258b00625b00625b00625b00625b00b25b0
0b2549b0041738b00625b00625b00625b00625b00a25b00a25b00725b071
2bb0041738b00425b00425b00525b00725b00525b0712bb00217381bb004
25b00425b9ffc00002173859595921212121212121212d2cb00425b00325
87b00325b003258a20b000505821b0651bb068592b64b00425b0042506b0
0425b0042549202063b00325206351b1000325545b5821212321071b2063
b0022520636120b0532b8a63b00525b0052587b00425b004264ab0005058
6559b00426200146230046b00526200146230046b0001600b000234801b0
0023480020b0012348b00223480120b0012348b002234823b20200010823
38b2020001092338b1020107b00116592d2c23100d0c8a63238a636064b9
40000400635058b000381b3c592d2cb00625b00925b00925b00726b0762b
23b0005458051b0459b00425b00626b0772bb00525b00526b00525b00526
b0762bb0005458051b0459b0772b2d2cb00725b00a25b00a25b00826b076
2b8ab0005458051b0459b00525b00726b0772bb00625b00626b00625b006
26b0762b08b0772b2d2cb00725b00a25b00a25b00826b0762b8a8a08b004
25b00626b0772bb00525b00526b00525b00526b0762bb0005458051b0459
b0772b2d2cb00825b00b25b00b25b00926b0762bb00426b0042608b00525
b00726b0772bb00625b00626b00625b00626b0762b08b0772b2d2c03b003
25b003254ab00425b003254a02b00525b005264ab00526b005264ab00426
638a8a63612d2cb15d0e25602bb00c2611b0052612b00a2539b0072539b0
0a25b00a25b00925b07c2bb00050b00b25b00825b00a25b07c2bb0005054
58b00725b00b2587b00425b004250bb00a2510b00925c1b00225b002250b
b0072510b00625c11bb00725b00b25b00b25b9ffff00762bb00425b00425
0bb00725b00a25b0772bb00a25b00825b00825b9ffff00762bb00225b002
250bb00a25b00725b0772b59b00a2546b00a254660b0082546b008254660
b00625b006250bb00c25b00c25b00c2620b000505821b06a1bb06c592bb0
0425b004250bb00925b00925b0092620b000505821b06a1bb06c592b23b0
0a2546b00a25466061b0206323b0082546b00825466061b02063b1010c25
5458041b0559b00a262010b003253ab00626b006260bb0072620108a3ab1
0107265458041b0559b005262010b002253a8a8a0b232010233a2d2c23b0
015458b9000040001bb940000000598ab0015458b9000040001bb9400000
0059b07d2b2d2c8a8a080d8ab0015458b9000040001bb94000000059b07d
2b2d2c08b0015458b9000040001bb940000000590db07d2b2d2cb00426b0
0426080db00426b00426080db07d2b2d2c200146230046b00a43b00b438a
632362612d2cb0092bb006252eb005257dc5b00625b00525b0042520b000
505821b06a1bb06c592bb00525b00425b0032520b000505821b06a1bb06c
592b18b00825b00725b00625b00a25b06f2bb00625b00525b0042620b000
505821b0661bb068592bb00525b00425b0042620b000505821b0661bb068
592b54587db0042510b00325c5b0022510b00125c5b0052621b00526211b
b00626b00425b00325b00826b06f2b59b100024354587db00225b0822bb0
0525b0822b20206961b00443012361b06060206961b0206120b00826b008
268ab00217388a8a6120696161b00217381b2121212159182d2c4b52b101
0243535a58231020013c003c1b2121592d2c23b00225b00225535820b004
25583c1b3959b00160b8ffe91c592121212d2cb0022547b0022547548a20
201011b001608a2012b00161b0852b2d2cb0042547b002254754232012b0
01612320b0062620201011b00160b00626b0852b8a8ab0852b2d00000001
000000052666a74cfbec5f0f3cf5000b010000000000b798428000000000
d3ce556efffeffdc010000dc0000000c00020000000000000001000000dc
ffdc00240100fffefff70100000100000000000000000000000000000003
01000000000000000100000b000000000000009500010000000301810031
0000000000020010002f008800000217031e000000000000002601ce0001
000000000000002700000001000000000001000d00270001000000000002
000700340001000000000003000d003b0001000000000004000d00480001
000000000005000c00550001000000000006000d00610001000000000007
002c006e0003000104090000004e009a0003000104090001001a00e80003
000104090002000e01020003000104090003001a01100003000104090004
001a012a0003000104090005001801440003000104090006001a015c0003
00010409000700580176000300010409000d038801ce000300010409000e
005205560003000108040000008205a800030001080400010012062a0003
0001080400020004063c0003000108040003001206400003000108040004
0012065200030001080400050018066400030001080400060012067c0003
0001080400070058068e0003000108040008003e06e60003000108040009
003e0724000300010804000b00380762000300010804000c0038079a0003
000110040000004e07d20003000110040001001208200003000110040002
000408320003000110040003001208360003000110040004001208480003
0001100400050018085a0003000110040006001208720003000110040007
00580884a920436f70797269676874205a484f4e47594920456c65637472
6f6e696320436f2e20323030314f474949464c2b53696d53756e52656775
6c61724f474949464c2b53696d53756e4f474949464c2b53696d53756e56
657273696f6e20352e31354f474949464c2b53696d53756e54726164656d
61726b206f66205a484f4e47594920456c656374726f6e696320436f2e2c
204265696a696e6700a900200043006f0070007900720069006700680074
0020005a0048004f004e00470059004900200045006c0065006300740072
006f006e0069006300200043006f002e00200032003000300031004f0047
004900490046004c002b00530069006d00530075006e0052006500670075
006c00610072004f0047004900490046004c002b00530069006d00530075
006e004f0047004900490046004c002b00530069006d00530075006e0056
0065007200730069006f006e00200035002e00310035004f004700490049
0046004c002b00530069006d00530075006e00540072006100640065006d
00610072006b0020006f00660020005a0048004f004e0047005900490020
0045006c0065006300740072006f006e0069006300200043006f002e002c
0020004200650069006a0069006e0067004d006900630072006f0073006f
0066007400200073007500700070006c00690065006400200066006f006e
0074002e00200059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e007400200074006f002000630072
0065006100740065002c00200064006900730070006c00610079002c0020
0061006e00640020007000720069006e007400200063006f006e00740065
006e00740020006100730020007000650072006d00690074007400650064
00200062007900200074006800650020006c006900630065006e00730065
0020007400650072006d00730020006f00720020007400650072006d0073
0020006f00660020007500730065002c0020006f00660020007400680065
0020004d006900630072006f0073006f00660074002000700072006f0064
007500630074002c00200073006500720076006900630065002c0020006f
007200200063006f006e00740065006e007400200069006e002000770068
0069006300680020007400680069007300200066006f006e007400200077
0061007300200069006e0063006c0075006400650064002e00200059006f
00750020006d006100790020006f006e006c007900200028006900290020
0065006d0062006500640020007400680069007300200066006f006e0074
00200069006e00200063006f006e00740065006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
006500200065006d00620065006400640069006e00670020007200650073
007400720069006300740069006f006e007300200069006e0063006c0075
00640065006400200069006e0020007400680069007300200066006f006e
0074003b00200061006e006400200028006900690029002000740065006d
0070006f0072006100720069006c007900200064006f0077006e006c006f
006100640020007400680069007300200066006f006e007400200074006f
002000610020007000720069006e0074006500720020006f00720020006f
00740068006500720020006f007500740070007500740020006400650076
00690063006500200074006f002000680065006c00700020007000720069
006e007400200063006f006e00740065006e0074002e00200041006e0079
0020006f0074006800650072002000750073006500200069007300200070
0072006f0068006900620069007400650064002e0068007400740070003a
002f002f007700770077002e006d006900630072006f0073006f00660074
002e0063006f006d002f007400790070006f006700720061007000680079
002f0066006f006e0074007300a900200043006f00700079007200690067
006800740020005a0048004f004e00470059004900200045006c00650063
00740072006f006e0069006300200043006f002e00200032003000300031
000d000a5b574f536570636e753153174eac4e2d66134e2d680775355b50
4fe1606f6280672f67099650516c53f863d04f9b3002004f004700490049
0046004c002b5b8b4f535e3889c4004f0047004900490046004c002b5b8b
4f53004f0047004900490046004c002b5b8b4f5300560065007200730069
006f006e00200035002e00310035004f0047004900490046004c002b5b8b
4f5300540072006100640065006d00610072006b0020006f00660020005a
0048004f004e00470059004900200045006c0065006300740072006f006e
0069006300200043006f002e002c0020004200650069006a0069006e0067
004200650069006a0069006e00670020005a0068006f006e006700590069
00200045006c0065006300740072006f006e00690063007300200043006f
002e004200650069006a0069006e00670020005a0068006f006e00670059
006900200045006c0065006300740072006f006e00690063007300200043
006f002e0068007400740070003a002f002f007700770077002e007a0068
006f006e006700790069006300740073002e0063006f006d002e0063006e
0068007400740070003a002f002f007700770077002e007a0068006f006e
006700790069006300740073002e0063006f006d002e0063006e00a90020
0043006f00700079007200690067006800740020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e00200032003000300031004f0047004900490046004c002b5b8b
4f535e3889c4004f0047004900490046004c002b5b8b4f53004f00470049
00490046004c002b5b8b4f5300560065007200730069006f006e00200035
002e00310035004f0047004900490046004c002b5b8b4f53005400720061
00640065006d00610072006b0020006f00660020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e002c0020004200650069006a0069006e0067000040ff5c331a1f
5b33401f5a33ff1f5932ff1f5831801f5731401f5630ff1f55302b1f542f
ff1f532d201f522e401f512eff1f502cff1f4f2c2b1f4e2a2b1f4d2aff1f
4c29ff1f4b28101f4a282b1f4928ff1f4827401f4727ff1f4626ff1f4525
ff1f4424801f4324801f42231a1f4123801f4023801f3f22401f3e22ff1f
3d22401f3c21ff1f3b20ff1f3a1fff1f391eff1f381d161f371d2b1f361d
ff1f351d401f341cff1f2e2d801f2d2b801f2c2b201f2519ff1f24081b19
5c23081a195c2219ff1f2116ff1f200c18165c1f170d1f1e17ff1f1d16ff
1f1c160d1f1b1b19005b181816005b1a1b19005b171816005b1519381638
5a0f1501ff1501134d1255404811ff1055125910590d4d0c55054d04550c
5904590f800e550b4d0a55074d0655011000550e590a5906590059094d08
55034d025508590259200250028002b002e002050340400501b901900054
2b4bb807ff524bb008505bb00188b02553b00188b040515ab00688b00055
5a5b58b101018e59858d8d001d424bb0905358b20300001d4259b1020243
5158b104038e5973002b002b2b2b002b002b002b002b2b2b2b2b002b002b
2b2b002b002b2b2b017374012b012b012b012b012b2b2b002b2b012b2b01
2b002b012b002b012b2b2b2b2b2b2b2b002b2b2b2b012b2b2b002b2b2b2b
2b2b012b2b2b002b2b2b2b2b2b012b2b2b2b2b2b002b2b2b2b2b2b2b2b18
00>
[299 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 0 2 <0008000bffeb00f200c9000f0013001b00250029004100450049004e4027
3b3227273e2c471c1429110e43460410423a36332c290e4610333310460e
292c062a063821182a002f33332f331217392f2f2f2f2f2f113333331133
113311331133333311333311333330313736342717333717071514170735
2315351533350717070607273636371e0206232227262707373523173635
060707273637352207273337172315371707151417271533350715333586
01010e3b071008010e3d3d3613092118020e1c2d20100108020403051e8d
262625011621060b0b0a050b09540d111919011a01342626264c194a1208
0b0c07420e0d060f0c6250506d0e05331103102f1220150f0b0c122f1d09
27691724070e071302029503090d138507040a230d08c42c2c322a2a>FBAAAA+SimSun AddT42Char 

1 0 0 <> FBAAAA+SimSun AddT42Char 
FBAAAA+SimSun /CharStrings get begin
/g2 2 def
end
FBAAAA+SimSun /Encoding get
dup 76 /g2 put
pop
end
%ADOEndSubsetFont
/TXGBYU+SimSun /FBAAAA+SimSun findfont ct_VMDictPut
/TXGBYU+SimSun*1 
[76{/.notdef}rp /g2 179{/.notdef}rp]
TXGBYU+SimSun nf
TXGBYU+SimSun*1 [15 0 0 -15 0 0 ]msf
7.51358 158.509 mo
(L)sh
%ADOBeginSubsetFont: GBAAAA+SimSun Initial
ct_T42Dict begin
-0.008 -0.141 1 0.859
 256 array 0 1 255 {1 index exch /.notdef put} for  /GBAAAA+SimSun
Type42DictBegin
[<00010000000c000c000c000c4f532f324fd9e4e2000000cc000000566376
742004ba01cd00000124000000ba6670676dc564b4f6000001e000000dee
676c79661b053ad500001d1c0000017a68656164eb87fd0d00000fd00000
003668686561020100d90000100800000024686d7478040000370000102c
000000146c6f636100910106000010400000000c6d61787002e604d00000
104c000000206e616d65cca089bb0000106c00000aaa7072657051510fe7
00001b180000020467646972000000000000000000000000000100800190
0005000800800080000000100080008000000080000c0041000002010600
030101010101000000031000000000000000000000005a59454300400000
f0ff00dcffdc002400dc00248000000000000000000000b7fff800af0002
00af000200740002000000020000000200000002ffdfffff00b100000000
00020000000f001000060006000e00060006000600100006001000080010
000e00070007000e00090011000700190007000d0009000e000d00170009
0015000200090006000e0010001300160006001000080010000c000e0010
00060008000c00060008000e0009001100130007000a000f00190007000a
00060009000d000f00120017000600090013001600020009000b000e0000
404687868584838281807f7e7d7c7b7a797877767574737271706f6e6d6c
6b6a696867666564636261605f5e5d5c5b5a5958575655545351504f4e4d
4c4b4a49484746281f100a092c01b10b0a432343650a2d2c00b10a0b4323
430b2d2c01b00643b00743650a2d2cb04f2b20b0405158214b525845441b
2121591b2321b040b0042545b004254561648a63525845441b212159592d
2c00b00743b006430b2d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c2320b000508a8a64b10003255458b0401bb1010325
5458b005438b59b04f2b5923b0622b2321235865592d2cb108000c215460
432d2cb10c000c215460432d2c012047b0024320b8100062b81000635723
b8010062b8100063575a58b020606659482d2cb1000225b00225b0022553
b800352378b00225b0022560b020632020b00625236250588a21b0016023
1b2020b00625236252582321b001611b8a212321205959b8ffc11c60b020
6323212d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b12601885158b940
00020063b80400885458b202400243604259b94000040063b80800885458
b2028002436042595959595959b10002435458400a0540084009400c020d
021bb10102435458b2054008ba010000090100b30c010d011bb180024352
58b2054008b80180b109401bb2054008ba01800009014059b94000008088
55b94000020063b8040088555a58b30c000d011bb30c000d015959594242
4242422d2c45b1024e2b23b04f2b20b0405158214b5158b0022545b1014e
2b60591b2321b003254520648a63b0405358b1024e2b601b215959442d2c
20b00050205823651b2359b114148a7045b04f2b23b1610626602b8a58b0
05438b592358655923103a2d2cb003254963234660b04f2b23b00425b004
2549b0032563562060b062602bb003252010468a4660b02063613a2d2cb0
0016b1020325b1010425013e003eb10102060cb00a236542b00b2342b102
0325b1010425013f003fb10102060cb006236542b0072342b00116b10002
4354584523452018698a6323622020b0405058671b665961b02063b04023
61b00423421bb104004221215918012d2c2045b1004e2b442d2c4b51b140
4f2b505b582045b1014e2b208a8a4420b1400426616361b1014e2b44211b
23218a45b1014e2b208a234444592d2c4b51b1404f2b505b5845208ab040
6163601b23214559b1014e2b442d2c2345208a4523612064b04051b00425
20b0005323b040515a5ab1404f2b545a588a0c642364235358b140408a61
2063611b2063591b8a5963b1024e2b60442d2c012d2c002d2c05b10b0a43
2343650a2d2cb10a0b4323430b022d2cb002256366b00225b82000626023
622d2cb0022563b0206066b00225b82000626023622d2cb002256367b002
25b82000626023622d2cb002256366b02060b00225b82000626023622d2c
234ab1024e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b0022561
64b00343525821206459b1024e2b23b000505865592d2c238a4a234564b0
022564b002256164b00343525821206459b1014e2b23b000505865592d2c
20b003254ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb003
25b003258ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb003
2546b003254660b004252eb00425b00425b0042620b000505821b06a1bb0
6c592bb0032546b00325466061b08062208a2010233a232010233a2d2cb0
032547b003254760b0052547b0806361b00225b00625496323b005254ab0
80632058621b2159b0042646608a468a4660b02063612d2cb00426b00425
b00425b00426b06e2b208a2010233a232010233a2d2c2320b001545821b0
0225b1024e2bb0805020605920606020b001515821211b20b00551582120
6661b0402361b100032550b00325b00325505a5820b00325618a535821b0
00591b21591bb00754582066616523211b2121b000595959b1024e2b2d2c
b00225b004254ab0005358b0001b8a8a238ab00159b004254620666120b0
0526b0062649b00526b00526b0702b236165b02060206661b02061652d2c
b0022546208a20b000505821b1024e2b1b452321596165b00225103b2d2c
b0042620b802006220b80200638a236120b05d602bb00525118a128a2039
8a58ba005d10000004266356602b23212010204620b1024e2b23611b2321
208a201049b1024e2b593b2d2cba005d10000009256356602bb00525b005
25b00526b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba00
5d10000008266356602b20b0005258b0502bb00525b00525b00725b00725
b00525b0712bb0021738b00052b00225b001525a58b00425b0062549b003
25b00525496020b0405258211bb000525820b0025458b00425b00425b007
25b0072549b00217381bb00425b00425b00425b0062549b0021738595959
595921212121212d2cba005d1000000b256356602bb00725b00725b00625
b00625b00c25b00c25b00925b00825b06e2bb0041738b00725b00725b007
26b06d2bb00425b00425b00426b06d2bb0502bb00625b00625b00325b071
2bb00525b00525b00325b002173820b00625b00625b00525b0712b60b006
25b00625b0042565b0021738b00225b002256020b040535821b0406123b0
4061231bb8ffc05058b0406023b04060235959b00825b00825b00426b002
1738b00525b005258ab002173820b0005258b00625b0082549b00325b005
25496020b0405258211bb0005258b00625b00625b00625b00625b00b25b0
0b2549b0041738b00625b00625b00625b00625b00a25b00a25b00725b071
2bb0041738b00425b00425b00525b00725b00525b0712bb00217381bb004
25b00425b9ffc00002173859595921212121212121212d2cb00425b00325
87b00325b003258a20b000505821b0651bb068592b64b00425b0042506b0
0425b0042549202063b00325206351b1000325545b5821212321071b2063
b0022520636120b0532b8a63b00525b0052587b00425b004264ab0005058
6559b00426200146230046b00526200146230046b0001600b000234801b0
0023480020b0012348b00223480120b0012348b002234823b20200010823
38b2020001092338b1020107b00116592d2c23100d0c8a63238a636064b9
40000400635058b000381b3c592d2cb00625b00925b00925b00726b0762b
23b0005458051b0459b00425b00626b0772bb00525b00526b00525b00526
b0762bb0005458051b0459b0772b2d2cb00725b00a25b00a25b00826b076
2b8ab0005458051b0459b00525b00726b0772bb00625b00626b00625b006
26b0762b08b0772b2d2cb00725b00a25b00a25b00826b0762b8a8a08b004
25b00626b0772bb00525b00526b00525b00526b0762bb0005458051b0459
b0772b2d2cb00825b00b25b00b25b00926b0762bb00426b0042608b00525
b00726b0772bb00625b00626b00625b00626b0762b08b0772b2d2c03b003
25b003254ab00425b003254a02b00525b005264ab00526b005264ab00426
638a8a63612d2cb15d0e25602bb00c2611b0052612b00a2539b0072539b0
0a25b00a25b00925b07c2bb00050b00b25b00825b00a25b07c2bb0005054
58b00725b00b2587b00425b004250bb00a2510b00925c1b00225b002250b
b0072510b00625c11bb00725b00b25b00b25b9ffff00762bb00425b00425
0bb00725b00a25b0772bb00a25b00825b00825b9ffff00762bb00225b002
250bb00a25b00725b0772b59b00a2546b00a254660b0082546b008254660
b00625b006250bb00c25b00c25b00c2620b000505821b06a1bb06c592bb0
0425b004250bb00925b00925b0092620b000505821b06a1bb06c592b23b0
0a2546b00a25466061b0206323b0082546b00825466061b02063b1010c25
5458041b0559b00a262010b003253ab00626b006260bb0072620108a3ab1
0107265458041b0559b005262010b002253a8a8a0b232010233a2d2c23b0
015458b9000040001bb940000000598ab0015458b9000040001bb9400000
0059b07d2b2d2c8a8a080d8ab0015458b9000040001bb94000000059b07d
2b2d2c08b0015458b9000040001bb940000000590db07d2b2d2cb00426b0
0426080db00426b00426080db07d2b2d2c200146230046b00a43b00b438a
632362612d2cb0092bb006252eb005257dc5b00625b00525b0042520b000
505821b06a1bb06c592bb00525b00425b0032520b000505821b06a1bb06c
592b18b00825b00725b00625b00a25b06f2bb00625b00525b0042620b000
505821b0661bb068592bb00525b00425b0042620b000505821b0661bb068
592b54587db0042510b00325c5b0022510b00125c5b0052621b00526211b
b00626b00425b00325b00826b06f2b59b100024354587db00225b0822bb0
0525b0822b20206961b00443012361b06060206961b0206120b00826b008
268ab00217388a8a6120696161b00217381b2121212159182d2c4b52b101
0243535a58231020013c003c1b2121592d2c23b00225b00225535820b004
25583c1b3959b00160b8ffe91c592121212d2cb0022547b0022547548a20
201011b001608a2012b00161b0852b2d2cb0042547b002254754232012b0
01612320b0062620201011b00160b00626b0852b8a8ab0852b2d00000001
000000052666e5069d225f0f3cf5000b010000000000b798428000000000
d3ce556efffeffdc010000dc0000000c00020000000000000001000000dc
ffdc00240100fffefff70100000100000000000000000000000000000005
010000000000000001000009010000220100000c00000000000000490091
00bd000100000005018100310000000000020010002f008800000217031e
000000000000002601ce0001000000000000002700000001000000000001
000d00270001000000000002000700340001000000000003000d003b0001
000000000004000d00480001000000000005000c00550001000000000006
000d00610001000000000007002c006e0003000104090000004e009a0003
000104090001001a00e80003000104090002000e01020003000104090003
001a01100003000104090004001a012a0003000104090005001801440003
000104090006001a015c000300010409000700580176000300010409000d
038801ce000300010409000e005205560003000108040000008205a80003
0001080400010012062a00030001080400020004063c0003000108040003
001206400003000108040004001206520003000108040005001806640003
0001080400060012067c00030001080400070058068e0003000108040008
003e06e60003000108040009003e0724000300010804000b003807620003
00010804000c0038079a0003000110040000004e07d20003000110040001
001208200003000110040002000408320003000110040003001208360003
0001100400040012084800030001100400050018085a0003000110040006
00120872000300011004000700580884a920436f70797269676874205a48
4f4e47594920456c656374726f6e696320436f2e20323030315251544445
4e2b53696d53756e526567756c617252515444454e2b53696d53756e5251
5444454e2b53696d53756e56657273696f6e20352e313552515444454e2b
53696d53756e54726164656d61726b206f66205a484f4e47594920456c65
6374726f6e696320436f2e2c204265696a696e6700a900200043006f0070
0079007200690067006800740020005a0048004f004e0047005900490020
0045006c0065006300740072006f006e0069006300200043006f002e0020
003200300030003100520051005400440045004e002b00530069006d0053
0075006e0052006500670075006c0061007200520051005400440045004e
002b00530069006d00530075006e00520051005400440045004e002b0053
0069006d00530075006e00560065007200730069006f006e00200035002e
0031003500520051005400440045004e002b00530069006d00530075006e
00540072006100640065006d00610072006b0020006f00660020005a0048
004f004e00470059004900200045006c0065006300740072006f006e0069
006300200043006f002e002c0020004200650069006a0069006e0067004d
006900630072006f0073006f0066007400200073007500700070006c0069
0065006400200066006f006e0074002e00200059006f00750020006d0061
007900200075007300650020007400680069007300200066006f006e0074
00200074006f0020006300720065006100740065002c0020006400690073
0070006c00610079002c00200061006e00640020007000720069006e0074
00200063006f006e00740065006e00740020006100730020007000650072
006d0069007400740065006400200062007900200074006800650020006c
006900630065006e007300650020007400650072006d00730020006f0072
0020007400650072006d00730020006f00660020007500730065002c0020
006f006600200074006800650020004d006900630072006f0073006f0066
0074002000700072006f0064007500630074002c00200073006500720076
006900630065002c0020006f007200200063006f006e00740065006e0074
00200069006e002000770068006900630068002000740068006900730020
0066006f006e0074002000770061007300200069006e0063006c00750064
00650064002e00200059006f00750020006d006100790020006f006e006c
0079002000280069002900200065006d0062006500640020007400680069
007300200066006f006e007400200069006e00200063006f006e00740065
006e00740020006100730020007000650072006d00690074007400650064
002000620079002000740068006500200065006d00620065006400640069
006e00670020007200650073007400720069006300740069006f006e0073
00200069006e0063006c007500640065006400200069006e002000740068
0069007300200066006f006e0074003b00200061006e0064002000280069
00690029002000740065006d0070006f0072006100720069006c00790020
0064006f0077006e006c006f006100640020007400680069007300200066
006f006e007400200074006f002000610020007000720069006e00740065
00720020006f00720020006f00740068006500720020006f007500740070
00750074002000640065007600690063006500200074006f002000680065
006c00700020007000720069006e007400200063006f006e00740065006e
0074002e00200041006e00790020006f0074006800650072002000750073
0065002000690073002000700072006f0068006900620069007400650064
002e0068007400740070003a002f002f007700770077002e006d00690063
0072006f0073006f00660074002e0063006f006d002f007400790070006f
006700720061007000680079002f0066006f006e0074007300a900200043
006f00700079007200690067006800740020005a0048004f004e00470059
004900200045006c0065006300740072006f006e0069006300200043006f
002e00200032003000300031000d000a5b574f536570636e753153174eac
4e2d66134e2d680775355b504fe1606f6280672f67099650516c53f863d0
4f9b300200520051005400440045004e002b5b8b4f535e3889c400520051
005400440045004e002b5b8b4f5300520051005400440045004e002b5b8b
4f5300560065007200730069006f006e00200035002e0031003500520051
005400440045004e002b5b8b4f5300540072006100640065006d00610072
006b0020006f00660020005a0048004f004e00470059004900200045006c
0065006300740072006f006e0069006300200043006f002e002c00200042
00650069006a0069006e0067004200650069006a0069006e00670020005a
0068006f006e00670059006900200045006c0065006300740072006f006e
00690063007300200043006f002e004200650069006a0069006e00670020
005a0068006f006e00670059006900200045006c0065006300740072006f
006e00690063007300200043006f002e0068007400740070003a002f002f
007700770077002e007a0068006f006e006700790069006300740073002e
0063006f006d002e0063006e0068007400740070003a002f002f00770077
0077002e007a0068006f006e006700790069006300740073002e0063006f
006d002e0063006e00a900200043006f0070007900720069006700680074
0020005a0048004f004e00470059004900200045006c0065006300740072
006f006e0069006300200043006f002e0020003200300030003100520051
005400440045004e002b5b8b4f535e3889c400520051005400440045004e
002b5b8b4f5300520051005400440045004e002b5b8b4f53005600650072
00730069006f006e00200035002e0031003500520051005400440045004e
002b5b8b4f5300540072006100640065006d00610072006b0020006f0066
0020005a0048004f004e00470059004900200045006c0065006300740072
006f006e0069006300200043006f002e002c0020004200650069006a0069
006e0067000040ff5c331a1f5b33401f5a33ff1f5932ff1f5831801f5731
401f5630ff1f55302b1f542fff1f532d201f522e401f512eff1f502cff1f
4f2c2b1f4e2a2b1f4d2aff1f4c29ff1f4b28101f4a282b1f4928ff1f4827
401f4727ff1f4626ff1f4525ff1f4424801f4324801f42231a1f4123801f
4023801f3f22401f3e22ff1f3d22401f3c21ff1f3b20ff1f3a1fff1f391e
ff1f381d161f371d2b1f361dff1f351d401f341cff1f2e2d801f2d2b801f
2c2b201f2519ff1f24081b195c23081a195c2219ff1f2116ff1f200c1816
5c1f170d1f1e17ff1f1d16ff1f1c160d1f1b1b19005b181816005b1a1b19
005b171816005b15193816385a0f1501ff1501134d1255404811ff105512
5910590d4d0c55054d04550c5904590f800e550b4d0a55074d0655011000
550e590a5906590059094d0855034d025508590259200250028002b002e0
02050340400501b9019000542b4bb807ff524bb008505bb00188b02553b0
0188b040515ab00688b000555a5b58b101018e59858d8d001d424bb09053
58b20300001d4259b10202435158b104038e5973002b002b2b2b002b002b
002b002b2b2b2b2b002b002b2b2b002b002b2b2b017374012b012b012b01
2b012b2b2b002b2b012b2b012b002b012b002b012b2b2b2b2b2b2b2b002b
2b2b2b012b2b2b002b2b2b2b2b2b012b2b2b002b2b2b2b2b2b012b2b2b2b
2b2b002b2b2b2b2b2b2b2b1800>
[379 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 0 2 <00020009fff700f700cc00080024001f400d120b0420000b1c0e2323200b
20002f2f1133113333113311331133303137161606232227262737342717
0715333534271707153637170706071533371723220727331a2e060c0205
02041e460118092901190a260e180b241d2f1016cd0d0b0954953f1f0e12
193f1410150c08b8a60e180c079039361105441d211016030900>GBAAAA+SimSun AddT42Char 

1 0 0 <> GBAAAA+SimSun AddT42Char 
GBAAAA+SimSun /CharStrings get begin
/g2 2 def
end
GBAAAA+SimSun /Encoding get
dup 26 /g2 put
pop
end
%ADOEndSubsetFont
/TXGBYV+SimSun /GBAAAA+SimSun findfont ct_VMDictPut
/TXGBYV+SimSun*1 
[26{/.notdef}rp /g2 229{/.notdef}rp]
TXGBYV+SimSun nf
TXGBYV+SimSun*1 [15 0 0 -15 0 0 ]msf
22.5136 158.509 mo
(\032)sh
148.818 238.3 mo
148.818 231.166 143.035 225.383 135.901 225.383 cv
128.767 225.383 122.984 231.166 122.984 238.3 cv
122.984 245.434 128.767 251.217 135.901 251.217 cv
143.035 251.217 148.818 245.434 148.818 238.3 cv
cp
@
%ADOBeginSubsetFont: HBAAAA+SimSun Initial
ct_T42Dict begin
-0.008 -0.141 1 0.859
 256 array 0 1 255 {1 index exch /.notdef put} for  /HBAAAA+SimSun
Type42DictBegin
[<00010000000c000c000c000c4f532f324fd9e4e2000000cc000000566376
742004ba01cd00000124000000ba6670676dc564b4f6000001e000000dee
676c7966c1eff89900001d10000000b868656164eb87fd0d00000fd00000
003668686561020100d70000100800000024686d74780200000b0000102c
0000000c6c6f63610000005c00001038000000086d61787002e404d00000
1040000000206e616d65d1dd7df50000106000000aaa7072657051510fe7
00001b0c0000020467646972000000000000000000000000000100800190
0005000800800080000000100080008000000080000c0041000002010600
030101010101000000031000000000000000000000005a59454300400000
f0ff00dcffdc002400dc00248000000000000000000000b7fff800af0002
00af000200740002000000020000000200000002ffdfffff00b100000000
00020000000f001000060006000e00060006000600100006001000080010
000e00070007000e00090011000700190007000d0009000e000d00170009
0015000200090006000e0010001300160006001000080010000c000e0010
00060008000c00060008000e0009001100130007000a000f00190007000a
00060009000d000f00120017000600090013001600020009000b000e0000
404687868584838281807f7e7d7c7b7a797877767574737271706f6e6d6c
6b6a696867666564636261605f5e5d5c5b5a5958575655545351504f4e4d
4c4b4a49484746281f100a092c01b10b0a432343650a2d2c00b10a0b4323
430b2d2c01b00643b00743650a2d2cb04f2b20b0405158214b525845441b
2121591b2321b040b0042545b004254561648a63525845441b212159592d
2c00b00743b006430b2d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c2320b000508a8a64b10003255458b0401bb1010325
5458b005438b59b04f2b5923b0622b2321235865592d2cb108000c215460
432d2cb10c000c215460432d2c012047b0024320b8100062b81000635723
b8010062b8100063575a58b020606659482d2cb1000225b00225b0022553
b800352378b00225b0022560b020632020b00625236250588a21b0016023
1b2020b00625236252582321b001611b8a212321205959b8ffc11c60b020
6323212d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b12601885158b940
00020063b80400885458b202400243604259b94000040063b80800885458
b2028002436042595959595959b10002435458400a0540084009400c020d
021bb10102435458b2054008ba010000090100b30c010d011bb180024352
58b2054008b80180b109401bb2054008ba01800009014059b94000008088
55b94000020063b8040088555a58b30c000d011bb30c000d015959594242
4242422d2c45b1024e2b23b04f2b20b0405158214b5158b0022545b1014e
2b60591b2321b003254520648a63b0405358b1024e2b601b215959442d2c
20b00050205823651b2359b114148a7045b04f2b23b1610626602b8a58b0
05438b592358655923103a2d2cb003254963234660b04f2b23b00425b004
2549b0032563562060b062602bb003252010468a4660b02063613a2d2cb0
0016b1020325b1010425013e003eb10102060cb00a236542b00b2342b102
0325b1010425013f003fb10102060cb006236542b0072342b00116b10002
4354584523452018698a6323622020b0405058671b665961b02063b04023
61b00423421bb104004221215918012d2c2045b1004e2b442d2c4b51b140
4f2b505b582045b1014e2b208a8a4420b1400426616361b1014e2b44211b
23218a45b1014e2b208a234444592d2c4b51b1404f2b505b5845208ab040
6163601b23214559b1014e2b442d2c2345208a4523612064b04051b00425
20b0005323b040515a5ab1404f2b545a588a0c642364235358b140408a61
2063611b2063591b8a5963b1024e2b60442d2c012d2c002d2c05b10b0a43
2343650a2d2cb10a0b4323430b022d2cb002256366b00225b82000626023
622d2cb0022563b0206066b00225b82000626023622d2cb002256367b002
25b82000626023622d2cb002256366b02060b00225b82000626023622d2c
234ab1024e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b0022561
64b00343525821206459b1024e2b23b000505865592d2c238a4a234564b0
022564b002256164b00343525821206459b1014e2b23b000505865592d2c
20b003254ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb003
25b003258ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb003
2546b003254660b004252eb00425b00425b0042620b000505821b06a1bb0
6c592bb0032546b00325466061b08062208a2010233a232010233a2d2cb0
032547b003254760b0052547b0806361b00225b00625496323b005254ab0
80632058621b2159b0042646608a468a4660b02063612d2cb00426b00425
b00425b00426b06e2b208a2010233a232010233a2d2c2320b001545821b0
0225b1024e2bb0805020605920606020b001515821211b20b00551582120
6661b0402361b100032550b00325b00325505a5820b00325618a535821b0
00591b21591bb00754582066616523211b2121b000595959b1024e2b2d2c
b00225b004254ab0005358b0001b8a8a238ab00159b004254620666120b0
0526b0062649b00526b00526b0702b236165b02060206661b02061652d2c
b0022546208a20b000505821b1024e2b1b452321596165b00225103b2d2c
b0042620b802006220b80200638a236120b05d602bb00525118a128a2039
8a58ba005d10000004266356602b23212010204620b1024e2b23611b2321
208a201049b1024e2b593b2d2cba005d10000009256356602bb00525b005
25b00526b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba00
5d10000008266356602b20b0005258b0502bb00525b00525b00725b00725
b00525b0712bb0021738b00052b00225b001525a58b00425b0062549b003
25b00525496020b0405258211bb000525820b0025458b00425b00425b007
25b0072549b00217381bb00425b00425b00425b0062549b0021738595959
595921212121212d2cba005d1000000b256356602bb00725b00725b00625
b00625b00c25b00c25b00925b00825b06e2bb0041738b00725b00725b007
26b06d2bb00425b00425b00426b06d2bb0502bb00625b00625b00325b071
2bb00525b00525b00325b002173820b00625b00625b00525b0712b60b006
25b00625b0042565b0021738b00225b002256020b040535821b0406123b0
4061231bb8ffc05058b0406023b04060235959b00825b00825b00426b002
1738b00525b005258ab002173820b0005258b00625b0082549b00325b005
25496020b0405258211bb0005258b00625b00625b00625b00625b00b25b0
0b2549b0041738b00625b00625b00625b00625b00a25b00a25b00725b071
2bb0041738b00425b00425b00525b00725b00525b0712bb00217381bb004
25b00425b9ffc00002173859595921212121212121212d2cb00425b00325
87b00325b003258a20b000505821b0651bb068592b64b00425b0042506b0
0425b0042549202063b00325206351b1000325545b5821212321071b2063
b0022520636120b0532b8a63b00525b0052587b00425b004264ab0005058
6559b00426200146230046b00526200146230046b0001600b000234801b0
0023480020b0012348b00223480120b0012348b002234823b20200010823
38b2020001092338b1020107b00116592d2c23100d0c8a63238a636064b9
40000400635058b000381b3c592d2cb00625b00925b00925b00726b0762b
23b0005458051b0459b00425b00626b0772bb00525b00526b00525b00526
b0762bb0005458051b0459b0772b2d2cb00725b00a25b00a25b00826b076
2b8ab0005458051b0459b00525b00726b0772bb00625b00626b00625b006
26b0762b08b0772b2d2cb00725b00a25b00a25b00826b0762b8a8a08b004
25b00626b0772bb00525b00526b00525b00526b0762bb0005458051b0459
b0772b2d2cb00825b00b25b00b25b00926b0762bb00426b0042608b00525
b00726b0772bb00625b00626b00625b00626b0762b08b0772b2d2c03b003
25b003254ab00425b003254a02b00525b005264ab00526b005264ab00426
638a8a63612d2cb15d0e25602bb00c2611b0052612b00a2539b0072539b0
0a25b00a25b00925b07c2bb00050b00b25b00825b00a25b07c2bb0005054
58b00725b00b2587b00425b004250bb00a2510b00925c1b00225b002250b
b0072510b00625c11bb00725b00b25b00b25b9ffff00762bb00425b00425
0bb00725b00a25b0772bb00a25b00825b00825b9ffff00762bb00225b002
250bb00a25b00725b0772b59b00a2546b00a254660b0082546b008254660
b00625b006250bb00c25b00c25b00c2620b000505821b06a1bb06c592bb0
0425b004250bb00925b00925b0092620b000505821b06a1bb06c592b23b0
0a2546b00a25466061b0206323b0082546b00825466061b02063b1010c25
5458041b0559b00a262010b003253ab00626b006260bb0072620108a3ab1
0107265458041b0559b005262010b002253a8a8a0b232010233a2d2c23b0
015458b9000040001bb940000000598ab0015458b9000040001bb9400000
0059b07d2b2d2c8a8a080d8ab0015458b9000040001bb94000000059b07d
2b2d2c08b0015458b9000040001bb940000000590db07d2b2d2cb00426b0
0426080db00426b00426080db07d2b2d2c200146230046b00a43b00b438a
632362612d2cb0092bb006252eb005257dc5b00625b00525b0042520b000
505821b06a1bb06c592bb00525b00425b0032520b000505821b06a1bb06c
592b18b00825b00725b00625b00a25b06f2bb00625b00525b0042620b000
505821b0661bb068592bb00525b00425b0042620b000505821b0661bb068
592b54587db0042510b00325c5b0022510b00125c5b0052621b00526211b
b00626b00425b00325b00826b06f2b59b100024354587db00225b0822bb0
0525b0822b20206961b00443012361b06060206961b0206120b00826b008
268ab00217388a8a6120696161b00217381b2121212159182d2c4b52b101
0243535a58231020013c003c1b2121592d2c23b00225b00225535820b004
25583c1b3959b00160b8ffe91c592121212d2cb0022547b0022547548a20
201011b001608a2012b00161b0852b2d2cb0042547b002254754232012b0
01612320b0062620201011b00160b00626b0852b8a8ab0852b2d00000001
00000005266698e035d65f0f3cf5000b010000000000b798428000000000
d3ce556efffeffdc010000dc0000000c00020000000000000001000000dc
ffdc00240100fffefff70100000100000000000000000000000000000003
01000000000000000100000b000000000000005c00010000000301810031
0000000000020010002f008800000217031e000000000000002601ce0001
000000000000002700000001000000000001000d00270001000000000002
000700340001000000000003000d003b0001000000000004000d00480001
000000000005000c00550001000000000006000d00610001000000000007
002c006e0003000104090000004e009a0003000104090001001a00e80003
000104090002000e01020003000104090003001a01100003000104090004
001a012a0003000104090005001801440003000104090006001a015c0003
00010409000700580176000300010409000d038801ce000300010409000e
005205560003000108040000008205a800030001080400010012062a0003
0001080400020004063c0003000108040003001206400003000108040004
0012065200030001080400050018066400030001080400060012067c0003
0001080400070058068e0003000108040008003e06e60003000108040009
003e0724000300010804000b00380762000300010804000c0038079a0003
000110040000004e07d20003000110040001001208200003000110040002
000408320003000110040003001208360003000110040004001208480003
0001100400050018085a0003000110040006001208720003000110040007
00580884a920436f70797269676874205a484f4e47594920456c65637472
6f6e696320436f2e20323030315446545051462b53696d53756e52656775
6c61725446545051462b53696d53756e5446545051462b53696d53756e56
657273696f6e20352e31355446545051462b53696d53756e54726164656d
61726b206f66205a484f4e47594920456c656374726f6e696320436f2e2c
204265696a696e6700a900200043006f0070007900720069006700680074
0020005a0048004f004e00470059004900200045006c0065006300740072
006f006e0069006300200043006f002e0020003200300030003100540046
0054005000510046002b00530069006d00530075006e0052006500670075
006c00610072005400460054005000510046002b00530069006d00530075
006e005400460054005000510046002b00530069006d00530075006e0056
0065007200730069006f006e00200035002e003100350054004600540050
00510046002b00530069006d00530075006e00540072006100640065006d
00610072006b0020006f00660020005a0048004f004e0047005900490020
0045006c0065006300740072006f006e0069006300200043006f002e002c
0020004200650069006a0069006e0067004d006900630072006f0073006f
0066007400200073007500700070006c00690065006400200066006f006e
0074002e00200059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e007400200074006f002000630072
0065006100740065002c00200064006900730070006c00610079002c0020
0061006e00640020007000720069006e007400200063006f006e00740065
006e00740020006100730020007000650072006d00690074007400650064
00200062007900200074006800650020006c006900630065006e00730065
0020007400650072006d00730020006f00720020007400650072006d0073
0020006f00660020007500730065002c0020006f00660020007400680065
0020004d006900630072006f0073006f00660074002000700072006f0064
007500630074002c00200073006500720076006900630065002c0020006f
007200200063006f006e00740065006e007400200069006e002000770068
0069006300680020007400680069007300200066006f006e007400200077
0061007300200069006e0063006c0075006400650064002e00200059006f
00750020006d006100790020006f006e006c007900200028006900290020
0065006d0062006500640020007400680069007300200066006f006e0074
00200069006e00200063006f006e00740065006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
006500200065006d00620065006400640069006e00670020007200650073
007400720069006300740069006f006e007300200069006e0063006c0075
00640065006400200069006e0020007400680069007300200066006f006e
0074003b00200061006e006400200028006900690029002000740065006d
0070006f0072006100720069006c007900200064006f0077006e006c006f
006100640020007400680069007300200066006f006e007400200074006f
002000610020007000720069006e0074006500720020006f00720020006f
00740068006500720020006f007500740070007500740020006400650076
00690063006500200074006f002000680065006c00700020007000720069
006e007400200063006f006e00740065006e0074002e00200041006e0079
0020006f0074006800650072002000750073006500200069007300200070
0072006f0068006900620069007400650064002e0068007400740070003a
002f002f007700770077002e006d006900630072006f0073006f00660074
002e0063006f006d002f007400790070006f006700720061007000680079
002f0066006f006e0074007300a900200043006f00700079007200690067
006800740020005a0048004f004e00470059004900200045006c00650063
00740072006f006e0069006300200043006f002e00200032003000300031
000d000a5b574f536570636e753153174eac4e2d66134e2d680775355b50
4fe1606f6280672f67099650516c53f863d04f9b30020054004600540050
00510046002b5b8b4f535e3889c4005400460054005000510046002b5b8b
4f53005400460054005000510046002b5b8b4f5300560065007200730069
006f006e00200035002e00310035005400460054005000510046002b5b8b
4f5300540072006100640065006d00610072006b0020006f00660020005a
0048004f004e00470059004900200045006c0065006300740072006f006e
0069006300200043006f002e002c0020004200650069006a0069006e0067
004200650069006a0069006e00670020005a0068006f006e006700590069
00200045006c0065006300740072006f006e00690063007300200043006f
002e004200650069006a0069006e00670020005a0068006f006e00670059
006900200045006c0065006300740072006f006e00690063007300200043
006f002e0068007400740070003a002f002f007700770077002e007a0068
006f006e006700790069006300740073002e0063006f006d002e0063006e
0068007400740070003a002f002f007700770077002e007a0068006f006e
006700790069006300740073002e0063006f006d002e0063006e00a90020
0043006f00700079007200690067006800740020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e00200032003000300031005400460054005000510046002b5b8b
4f535e3889c4005400460054005000510046002b5b8b4f53005400460054
005000510046002b5b8b4f5300560065007200730069006f006e00200035
002e00310035005400460054005000510046002b5b8b4f53005400720061
00640065006d00610072006b0020006f00660020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e002c0020004200650069006a0069006e0067000040ff5c331a1f
5b33401f5a33ff1f5932ff1f5831801f5731401f5630ff1f55302b1f542f
ff1f532d201f522e401f512eff1f502cff1f4f2c2b1f4e2a2b1f4d2aff1f
4c29ff1f4b28101f4a282b1f4928ff1f4827401f4727ff1f4626ff1f4525
ff1f4424801f4324801f42231a1f4123801f4023801f3f22401f3e22ff1f
3d22401f3c21ff1f3b20ff1f3a1fff1f391eff1f381d161f371d2b1f361d
ff1f351d401f341cff1f2e2d801f2d2b801f2c2b201f2519ff1f24081b19
5c23081a195c2219ff1f2116ff1f200c18165c1f170d1f1e17ff1f1d16ff
1f1c160d1f1b1b19005b181816005b1a1b19005b171816005b1519381638
5a0f1501ff1501134d1255404811ff1055125910590d4d0c55054d04550c
5904590f800e550b4d0a55074d0655011000550e590a5906590059094d08
55034d025508590259200250028002b002e002050340400501b901900054
2b4bb807ff524bb008505bb00188b02553b00188b040515ab00688b00055
5a5b58b101018e59858d8d001d424bb0905358b20300001d4259b1020243
5158b104038e5973002b002b2b2b002b002b002b002b2b2b2b2b002b002b
2b2b002b002b2b2b017374012b012b012b012b012b2b2b002b2b012b2b01
2b002b012b002b012b2b2b2b2b2b2b2b002b2b2b2b012b2b2b002b2b2b2b
2b2b012b2b2b002b2b2b2b2b2b012b2b2b2b2b2b002b2b2b2b2b2b2b2b18
00>
[185 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 0 2 <0002000bffe600f500d30003002e003140160121121e12161604250d000d
1111040c0828281a041a002f2f12392f333311392f3333113311392f3333
113333303137153335271707060733371723153337172315333717231514
17073635352322072733342717333523060607273636473a381609080882
0f155c290e144b410f1565011101550d0b092d01103a3e0a16130312206b
3434680e040c0c0f15320e14340f1526110d071f0e1e03092e1509320f19
0f021333>HBAAAA+SimSun AddT42Char 

1 0 0 <> HBAAAA+SimSun AddT42Char 
HBAAAA+SimSun /CharStrings get begin
/g2 2 def
end
HBAAAA+SimSun /Encoding get
dup 116 /g2 put
pop
end
%ADOEndSubsetFont
/TXGBYW+SimSun /HBAAAA+SimSun findfont ct_VMDictPut
/TXGBYW+SimSun*1 
[116{/.notdef}rp /g2 139{/.notdef}rp]
TXGBYW+SimSun nf
TXGBYW+SimSun*1 [7.5 0 0 -7.5 0 0 ]msf
128.4 240.923 mo
(t)sh
%ADOBeginSubsetFont: IBAAAA+SimSun Initial
ct_T42Dict begin
-0.008 -0.141 1 0.859
 256 array 0 1 255 {1 index exch /.notdef put} for  /IBAAAA+SimSun
Type42DictBegin
[<00010000000c000c000c000c4f532f324fd9e4e2000000cc000000566376
742004ba01cd00000124000000ba6670676dc564b4f6000001e000000dee
676c796656b49f0d00001d100000018468656164eb87fd0d00000fd00000
003668686561020100d70000100800000024686d7478020000090000102c
0000000c6c6f6361000000c200001038000000086d61787002e404d00000
1040000000206e616d65dbe5afb10000106000000aaa7072657051510fe7
00001b0c0000020467646972000000000000000000000000000100800190
0005000800800080000000100080008000000080000c0041000002010600
030101010101000000031000000000000000000000005a59454300400000
f0ff00dcffdc002400dc00248000000000000000000000b7fff800af0002
00af000200740002000000020000000200000002ffdfffff00b100000000
00020000000f001000060006000e00060006000600100006001000080010
000e00070007000e00090011000700190007000d0009000e000d00170009
0015000200090006000e0010001300160006001000080010000c000e0010
00060008000c00060008000e0009001100130007000a000f00190007000a
00060009000d000f00120017000600090013001600020009000b000e0000
404687868584838281807f7e7d7c7b7a797877767574737271706f6e6d6c
6b6a696867666564636261605f5e5d5c5b5a5958575655545351504f4e4d
4c4b4a49484746281f100a092c01b10b0a432343650a2d2c00b10a0b4323
430b2d2c01b00643b00743650a2d2cb04f2b20b0405158214b525845441b
2121591b2321b040b0042545b004254561648a63525845441b212159592d
2c00b00743b006430b2d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c2320b000508a8a64b10003255458b0401bb1010325
5458b005438b59b04f2b5923b0622b2321235865592d2cb108000c215460
432d2cb10c000c215460432d2c012047b0024320b8100062b81000635723
b8010062b8100063575a58b020606659482d2cb1000225b00225b0022553
b800352378b00225b0022560b020632020b00625236250588a21b0016023
1b2020b00625236252582321b001611b8a212321205959b8ffc11c60b020
6323212d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b12601885158b940
00020063b80400885458b202400243604259b94000040063b80800885458
b2028002436042595959595959b10002435458400a0540084009400c020d
021bb10102435458b2054008ba010000090100b30c010d011bb180024352
58b2054008b80180b109401bb2054008ba01800009014059b94000008088
55b94000020063b8040088555a58b30c000d011bb30c000d015959594242
4242422d2c45b1024e2b23b04f2b20b0405158214b5158b0022545b1014e
2b60591b2321b003254520648a63b0405358b1024e2b601b215959442d2c
20b00050205823651b2359b114148a7045b04f2b23b1610626602b8a58b0
05438b592358655923103a2d2cb003254963234660b04f2b23b00425b004
2549b0032563562060b062602bb003252010468a4660b02063613a2d2cb0
0016b1020325b1010425013e003eb10102060cb00a236542b00b2342b102
0325b1010425013f003fb10102060cb006236542b0072342b00116b10002
4354584523452018698a6323622020b0405058671b665961b02063b04023
61b00423421bb104004221215918012d2c2045b1004e2b442d2c4b51b140
4f2b505b582045b1014e2b208a8a4420b1400426616361b1014e2b44211b
23218a45b1014e2b208a234444592d2c4b51b1404f2b505b5845208ab040
6163601b23214559b1014e2b442d2c2345208a4523612064b04051b00425
20b0005323b040515a5ab1404f2b545a588a0c642364235358b140408a61
2063611b2063591b8a5963b1024e2b60442d2c012d2c002d2c05b10b0a43
2343650a2d2cb10a0b4323430b022d2cb002256366b00225b82000626023
622d2cb0022563b0206066b00225b82000626023622d2cb002256367b002
25b82000626023622d2cb002256366b02060b00225b82000626023622d2c
234ab1024e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b0022561
64b00343525821206459b1024e2b23b000505865592d2c238a4a234564b0
022564b002256164b00343525821206459b1014e2b23b000505865592d2c
20b003254ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb003
25b003258ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb003
2546b003254660b004252eb00425b00425b0042620b000505821b06a1bb0
6c592bb0032546b00325466061b08062208a2010233a232010233a2d2cb0
032547b003254760b0052547b0806361b00225b00625496323b005254ab0
80632058621b2159b0042646608a468a4660b02063612d2cb00426b00425
b00425b00426b06e2b208a2010233a232010233a2d2c2320b001545821b0
0225b1024e2bb0805020605920606020b001515821211b20b00551582120
6661b0402361b100032550b00325b00325505a5820b00325618a535821b0
00591b21591bb00754582066616523211b2121b000595959b1024e2b2d2c
b00225b004254ab0005358b0001b8a8a238ab00159b004254620666120b0
0526b0062649b00526b00526b0702b236165b02060206661b02061652d2c
b0022546208a20b000505821b1024e2b1b452321596165b00225103b2d2c
b0042620b802006220b80200638a236120b05d602bb00525118a128a2039
8a58ba005d10000004266356602b23212010204620b1024e2b23611b2321
208a201049b1024e2b593b2d2cba005d10000009256356602bb00525b005
25b00526b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba00
5d10000008266356602b20b0005258b0502bb00525b00525b00725b00725
b00525b0712bb0021738b00052b00225b001525a58b00425b0062549b003
25b00525496020b0405258211bb000525820b0025458b00425b00425b007
25b0072549b00217381bb00425b00425b00425b0062549b0021738595959
595921212121212d2cba005d1000000b256356602bb00725b00725b00625
b00625b00c25b00c25b00925b00825b06e2bb0041738b00725b00725b007
26b06d2bb00425b00425b00426b06d2bb0502bb00625b00625b00325b071
2bb00525b00525b00325b002173820b00625b00625b00525b0712b60b006
25b00625b0042565b0021738b00225b002256020b040535821b0406123b0
4061231bb8ffc05058b0406023b04060235959b00825b00825b00426b002
1738b00525b005258ab002173820b0005258b00625b0082549b00325b005
25496020b0405258211bb0005258b00625b00625b00625b00625b00b25b0
0b2549b0041738b00625b00625b00625b00625b00a25b00a25b00725b071
2bb0041738b00425b00425b00525b00725b00525b0712bb00217381bb004
25b00425b9ffc00002173859595921212121212121212d2cb00425b00325
87b00325b003258a20b000505821b0651bb068592b64b00425b0042506b0
0425b0042549202063b00325206351b1000325545b5821212321071b2063
b0022520636120b0532b8a63b00525b0052587b00425b004264ab0005058
6559b00426200146230046b00526200146230046b0001600b000234801b0
0023480020b0012348b00223480120b0012348b002234823b20200010823
38b2020001092338b1020107b00116592d2c23100d0c8a63238a636064b9
40000400635058b000381b3c592d2cb00625b00925b00925b00726b0762b
23b0005458051b0459b00425b00626b0772bb00525b00526b00525b00526
b0762bb0005458051b0459b0772b2d2cb00725b00a25b00a25b00826b076
2b8ab0005458051b0459b00525b00726b0772bb00625b00626b00625b006
26b0762b08b0772b2d2cb00725b00a25b00a25b00826b0762b8a8a08b004
25b00626b0772bb00525b00526b00525b00526b0762bb0005458051b0459
b0772b2d2cb00825b00b25b00b25b00926b0762bb00426b0042608b00525
b00726b0772bb00625b00626b00625b00626b0762b08b0772b2d2c03b003
25b003254ab00425b003254a02b00525b005264ab00526b005264ab00426
638a8a63612d2cb15d0e25602bb00c2611b0052612b00a2539b0072539b0
0a25b00a25b00925b07c2bb00050b00b25b00825b00a25b07c2bb0005054
58b00725b00b2587b00425b004250bb00a2510b00925c1b00225b002250b
b0072510b00625c11bb00725b00b25b00b25b9ffff00762bb00425b00425
0bb00725b00a25b0772bb00a25b00825b00825b9ffff00762bb00225b002
250bb00a25b00725b0772b59b00a2546b00a254660b0082546b008254660
b00625b006250bb00c25b00c25b00c2620b000505821b06a1bb06c592bb0
0425b004250bb00925b00925b0092620b000505821b06a1bb06c592b23b0
0a2546b00a25466061b0206323b0082546b00825466061b02063b1010c25
5458041b0559b00a262010b003253ab00626b006260bb0072620108a3ab1
0107265458041b0559b005262010b002253a8a8a0b232010233a2d2c23b0
015458b9000040001bb940000000598ab0015458b9000040001bb9400000
0059b07d2b2d2c8a8a080d8ab0015458b9000040001bb94000000059b07d
2b2d2c08b0015458b9000040001bb940000000590db07d2b2d2cb00426b0
0426080db00426b00426080db07d2b2d2c200146230046b00a43b00b438a
632362612d2cb0092bb006252eb005257dc5b00625b00525b0042520b000
505821b06a1bb06c592bb00525b00425b0032520b000505821b06a1bb06c
592b18b00825b00725b00625b00a25b06f2bb00625b00525b0042620b000
505821b0661bb068592bb00525b00425b0042620b000505821b0661bb068
592b54587db0042510b00325c5b0022510b00125c5b0052621b00526211b
b00626b00425b00325b00826b06f2b59b100024354587db00225b0822bb0
0525b0822b20206961b00443012361b06060206961b0206120b00826b008
268ab00217388a8a6120696161b00217381b2121212159182d2c4b52b101
0243535a58231020013c003c1b2121592d2c23b00225b00225535820b004
25583c1b3959b00160b8ffe91c592121212d2cb0022547b0022547548a20
201011b001608a2012b00161b0852b2d2cb0042547b002254754232012b0
01612320b0062620201011b00160b00626b0852b8a8ab0852b2d00000001
0000000526665c4780b65f0f3cf5000b010000000000b798428000000000
d3ce556efffeffdc010000dc0000000c00020000000000000001000000dc
ffdc00240100fffefff70100000100000000000000000000000000000003
01000000000000000100000900000000000000c200010000000301810031
0000000000020010002f008800000217031e000000000000002601ce0001
000000000000002700000001000000000001000d00270001000000000002
000700340001000000000003000d003b0001000000000004000d00480001
000000000005000c00550001000000000006000d00610001000000000007
002c006e0003000104090000004e009a0003000104090001001a00e80003
000104090002000e01020003000104090003001a01100003000104090004
001a012a0003000104090005001801440003000104090006001a015c0003
00010409000700580176000300010409000d038801ce000300010409000e
005205560003000108040000008205a800030001080400010012062a0003
0001080400020004063c0003000108040003001206400003000108040004
0012065200030001080400050018066400030001080400060012067c0003
0001080400070058068e0003000108040008003e06e60003000108040009
003e0724000300010804000b00380762000300010804000c0038079a0003
000110040000004e07d20003000110040001001208200003000110040002
000408320003000110040003001208360003000110040004001208480003
0001100400050018085a0003000110040006001208720003000110040007
00580884a920436f70797269676874205a484f4e47594920456c65637472
6f6e696320436f2e20323030314358464a52582b53696d53756e52656775
6c61724358464a52582b53696d53756e4358464a52582b53696d53756e56
657273696f6e20352e31354358464a52582b53696d53756e54726164656d
61726b206f66205a484f4e47594920456c656374726f6e696320436f2e2c
204265696a696e6700a900200043006f0070007900720069006700680074
0020005a0048004f004e00470059004900200045006c0065006300740072
006f006e0069006300200043006f002e0020003200300030003100430058
0046004a00520058002b00530069006d00530075006e0052006500670075
006c00610072004300580046004a00520058002b00530069006d00530075
006e004300580046004a00520058002b00530069006d00530075006e0056
0065007200730069006f006e00200035002e00310035004300580046004a
00520058002b00530069006d00530075006e00540072006100640065006d
00610072006b0020006f00660020005a0048004f004e0047005900490020
0045006c0065006300740072006f006e0069006300200043006f002e002c
0020004200650069006a0069006e0067004d006900630072006f0073006f
0066007400200073007500700070006c00690065006400200066006f006e
0074002e00200059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e007400200074006f002000630072
0065006100740065002c00200064006900730070006c00610079002c0020
0061006e00640020007000720069006e007400200063006f006e00740065
006e00740020006100730020007000650072006d00690074007400650064
00200062007900200074006800650020006c006900630065006e00730065
0020007400650072006d00730020006f00720020007400650072006d0073
0020006f00660020007500730065002c0020006f00660020007400680065
0020004d006900630072006f0073006f00660074002000700072006f0064
007500630074002c00200073006500720076006900630065002c0020006f
007200200063006f006e00740065006e007400200069006e002000770068
0069006300680020007400680069007300200066006f006e007400200077
0061007300200069006e0063006c0075006400650064002e00200059006f
00750020006d006100790020006f006e006c007900200028006900290020
0065006d0062006500640020007400680069007300200066006f006e0074
00200069006e00200063006f006e00740065006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
006500200065006d00620065006400640069006e00670020007200650073
007400720069006300740069006f006e007300200069006e0063006c0075
00640065006400200069006e0020007400680069007300200066006f006e
0074003b00200061006e006400200028006900690029002000740065006d
0070006f0072006100720069006c007900200064006f0077006e006c006f
006100640020007400680069007300200066006f006e007400200074006f
002000610020007000720069006e0074006500720020006f00720020006f
00740068006500720020006f007500740070007500740020006400650076
00690063006500200074006f002000680065006c00700020007000720069
006e007400200063006f006e00740065006e0074002e00200041006e0079
0020006f0074006800650072002000750073006500200069007300200070
0072006f0068006900620069007400650064002e0068007400740070003a
002f002f007700770077002e006d006900630072006f0073006f00660074
002e0063006f006d002f007400790070006f006700720061007000680079
002f0066006f006e0074007300a900200043006f00700079007200690067
006800740020005a0048004f004e00470059004900200045006c00650063
00740072006f006e0069006300200043006f002e00200032003000300031
000d000a5b574f536570636e753153174eac4e2d66134e2d680775355b50
4fe1606f6280672f67099650516c53f863d04f9b3002004300580046004a
00520058002b5b8b4f535e3889c4004300580046004a00520058002b5b8b
4f53004300580046004a00520058002b5b8b4f5300560065007200730069
006f006e00200035002e00310035004300580046004a00520058002b5b8b
4f5300540072006100640065006d00610072006b0020006f00660020005a
0048004f004e00470059004900200045006c0065006300740072006f006e
0069006300200043006f002e002c0020004200650069006a0069006e0067
004200650069006a0069006e00670020005a0068006f006e006700590069
00200045006c0065006300740072006f006e00690063007300200043006f
002e004200650069006a0069006e00670020005a0068006f006e00670059
006900200045006c0065006300740072006f006e00690063007300200043
006f002e0068007400740070003a002f002f007700770077002e007a0068
006f006e006700790069006300740073002e0063006f006d002e0063006e
0068007400740070003a002f002f007700770077002e007a0068006f006e
006700790069006300740073002e0063006f006d002e0063006e00a90020
0043006f00700079007200690067006800740020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e00200032003000300031004300580046004a00520058002b5b8b
4f535e3889c4004300580046004a00520058002b5b8b4f53004300580046
004a00520058002b5b8b4f5300560065007200730069006f006e00200035
002e00310035004300580046004a00520058002b5b8b4f53005400720061
00640065006d00610072006b0020006f00660020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e002c0020004200650069006a0069006e0067000040ff5c331a1f
5b33401f5a33ff1f5932ff1f5831801f5731401f5630ff1f55302b1f542f
ff1f532d201f522e401f512eff1f502cff1f4f2c2b1f4e2a2b1f4d2aff1f
4c29ff1f4b28101f4a282b1f4928ff1f4827401f4727ff1f4626ff1f4525
ff1f4424801f4324801f42231a1f4123801f4023801f3f22401f3e22ff1f
3d22401f3c21ff1f3b20ff1f3a1fff1f391eff1f381d161f371d2b1f361d
ff1f351d401f341cff1f2e2d801f2d2b801f2c2b201f2519ff1f24081b19
5c23081a195c2219ff1f2116ff1f200c18165c1f170d1f1e17ff1f1d16ff
1f1c160d1f1b1b19005b181816005b1a1b19005b171816005b1519381638
5a0f1501ff1501134d1255404811ff1055125910590d4d0c55054d04550c
5904590f800e550b4d0a55074d0655011000550e590a5906590059094d08
55034d025508590259200250028002b002e002050340400501b901900054
2b4bb807ff524bb008505bb00188b02553b00188b040515ab00688b00055
5a5b58b101018e59858d8d001d424bb0905358b20300001d4259b1020243
5158b104038e5973002b002b2b2b002b002b002b002b2b2b2b2b002b002b
2b2b002b002b2b2b017374012b012b012b012b012b2b2b002b2b012b2b01
2b002b012b002b012b2b2b2b2b2b2b2b002b2b2b2b012b2b2b002b2b2b2b
2b2b012b2b2b002b2b2b2b2b2b012b2b2b2b2b2b002b2b2b2b2b2b2b2b18
00>
[389 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 0 2 <00060009ffea00f600d20017002a003d004b0056006f003d401c083e5359
4d0f353a2629145c59593e1017050514143e0b0f0f683e68002f2f12392f
3311392f3311333311392f33113332333211331133113330313734271707
153334271707153337172315333717232207271706071616151406232227
262706072736371717342717071417073506072736273427170715371707
161715060726270607273617371616151406232227261537232207273337
1706060716161514062322272626273716210116091701170a110b102c19
0c105c0c0b09480204110606020301020a0d13021606150e011609010d40
080905010116098016081a280d06240e181f03200a02150708020301031d
270c0b09450a120a1612100604020304071b120216822b0e09062a400f09
08180b11200b1103091b0a0c0e0d050609090d15221202213a0a5d3e1509
073b1e07180d0c1005083f160a074bcb0c063f0d03010921334119022606
030e0b04050a090d5b3003090c120219180b0b04040a070c1c0e030b>IBAAAA+SimSun AddT42Char 

1 0 0 <> IBAAAA+SimSun AddT42Char 
IBAAAA+SimSun /CharStrings get begin
/g2 2 def
end
IBAAAA+SimSun /Encoding get
dup 132 /g2 put
pop
end
%ADOEndSubsetFont
/TXGBYX+SimSun /IBAAAA+SimSun findfont ct_VMDictPut
/TXGBYX+SimSun*1 
[132{/.notdef}rp /g2 123{/.notdef}rp]
TXGBYX+SimSun nf
TXGBYX+SimSun*1 [7.5 0 0 -7.5 0 0 ]msf
135.9 240.923 mo
(\204)sh
36.4442 163.708 mo
122.525 228.267 li
@
125.408 230.429 mo
124.674 229.629 123.646 228.107 123.105 226.826 cv
121.304 229.228 li
122.685 229.388 124.433 229.949 125.408 230.429 cv
f
gsave
264.553 258.422 mo
234.023 258.422 li
231.822 258.422 230.038 260.206 230.038 262.407 cv
230.038 270.886 li
230.038 273.087 231.822 274.871 234.023 274.871 cv
264.553 274.871 li
266.754 274.871 268.538 273.087 268.538 270.886 cv
268.538 262.407 li
268.538 260.206 266.754 258.422 264.553 258.422 cv
cp
clp
210.784 283.098 mo
287.792 283.098 li
287.792 250.195 li
210.784 250.195 li
cp
level3{
gsave
clp
[.77008 0 0 -.32903 210.784 283.098 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 100.001 ]
/Domain [0 100.001 ]
/Extend[ false false]
/Function
<<
/Domain[0 100.001 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~3\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[8
3\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[8
3\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[8
3\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[83\g[8
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~3\g[8$k!%8zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~*?"nXzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [25.0003 50.0006 75.001 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.77008 0 0 -.32903 210.784 283.098 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_
3]T2[3&`cS2Dm?L1c.!E1,:R=0JG160.nk//M&G'.k<)!.4HYn-RU5f-7'r`,U4NX+sJ0R+<VaJ*Zc=B
*?6%=)]K_8)B'M3)&X;/(`4&*(Ddi&()7Q!'bh>r',)#m&eYfh&J5Td&.f?_%hB-[%LijV%1EXR$O[=M
zzzzzzzzzzzzzzz!!!!!~>
<~1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?
1,1L;0JG.5/hSb./M/M).k<,".Oceq-n$Jk-RL/e,paf^,U4NY+sJ0R+WqmL+!2OF*ZZ7@*#on:)B'M3
)AsD1(`4),(Ddl(()@Z$'bqGu'GM5q',)#m&eYfi&J5Te&.fBa%hB0\%LrsX%1NaT$k*OP$O[=L$47+H
zzzzzzzzzzzzzzz!!!!!~>
0 0 ]
>>
0 0 0 100.001 []false false []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
grestore
264.553 258.422 mo
234.023 258.422 li
231.822 258.422 230.038 260.206 230.038 262.407 cv
230.038 270.886 li
230.038 273.087 231.822 274.871 234.023 274.871 cv
264.553 274.871 li
266.754 274.871 268.538 273.087 268.538 270.886 cv
268.538 262.407 li
268.538 260.206 266.754 258.422 264.553 258.422 cv
cp
@
%ADOBeginSubsetFont: JBAAAA+FangSong Initial
ct_T42Dict begin
-0.008 -0.164 1.004 0.859
 256 array 0 1 255 {1 index exch /.notdef put} for  /JBAAAA+FangSong
Type42DictBegin
[<00010000000c000c000c000c4f532f3252d9e4eb000000cc000000566376
7420072903f000000124000002be6670676d4aa192e8000003e40000000d
676c7966a84d815e00001168000000de68656164f01f66c7000003f40000
003668686561020200df0000042c00000024686d74780200002a00000450
0000000c6c6f6361001100800000045c000000086d61787001bf02840000
0464000000206e616d658af2ebcc0000048400000c2f7072657005dc4fcc
000010b4000000b267646972000000000000000000000000000100800190
0005000800800080000000100080008000000080000c0041000002010609
060101010101000000031000000000000000000000005a59454300400000
f0ff00dcffdc002400dc002480000000000000000000ffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff00ab00020070
00020004fffeffdfffff00060008000a000c000e00100012001400160018
001a001c001e000e0010ffff00060008000a000c000e0010001200140016
0018001a001a001cffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff001e001e00c90000001c001c0002ffea0055
0033003800c1000a00400037003d0032003c00dcffdd0057004d000b001f
000b001f00920037007a0070006c006f00200020001a0016000600080006
0008000f0000b0282c4b525845441b2121592d000000000100000005028f
a55896ae5f0f3cf5000b010000000000bc50bff100000000d3ac6594fffe
ffd6010100dc0000000c00020000000000000001000000dcffdc00240100
fffeffff01010001000000000000000000000000000000030100001c0000
00000100000e000000110011006f00010000000301a20031000000000001
0000002f00290000016100b20000000000000032025e0001000000000000
004100000001000000000001000f00410001000000000002000700500001
000000000003000f00570001000000000004000f00660001000000000005
000c00750001000000000006000f00810001000000000007003300900001
00000000000d01c400c30003000104030002000c02870003000104050002
001002930003000104060002000c02a30003000104070002001002af0003
000104080002001002bf0003000104090000008202cf0003000104090001
001e03510003000104090002000e036f0003000104090003001e037d0003
000104090004001e039b0003000104090005001803b90003000104090006
001e03d10003000104090007006603ef000300010409000d038804550003
0001040a0002000c07dd00030001040b0002001007e900030001040c0002
000c07f900030001040e0002000c08050003000104100002000e08110003
0001041300020012081f0003000104140002000c08310003000104150002
0010083d0003000104160002000c084d0003000104190002000e08590003
0001041b00020010086700030001041d0002000c087700030001041f0002
000c08830003000104240002000e088f00030001042d0002000e089d0003
000108040000003008ab0003000108040001001208db0003000108040002
000e08ed0003000108040003001208fb00030001080400040012090d0003
0001080400050018091f0003000108040006001209370003000108040007
0058094900030001080a0002000c09a10003000108160002000c09ad0003
00010c0a0002000c09b9000300010c0c0002000c09c5a9204265696a696e
67205a686f6e67596920456c656374726f6e69637320436f2e2c20313939
352d323030352c20416c6c207269676874732072657365727665644b5956
524d4a2b46616e67536f6e67526567756c61724b5956524d4a2b46616e67
536f6e674b5956524d4a2b46616e67536f6e6756657273696f6e20352e30
314b5956524d4a2b46616e67536f6e6754726164656d61726b206f662042
65696a696e67205a686f6e67596920456c656374726f6e69637320436f2e
2c204368696e614d6963726f736f667420737570706c69656420666f6e74
2e20596f75206d617920757365207468697320666f6e7420746f20637265
6174652c20646973706c61792c20616e64207072696e7420636f6e74656e
74206173207065726d697474656420627920746865206c6963656e736520
7465726d73206f72207465726d73206f66207573652c206f662074686520
4d6963726f736f66742070726f647563742c20736572766963652c206f72
20636f6e74656e7420696e207768696368207468697320666f6e74207761
7320696e636c756465642e20596f75206d6179206f6e6c79202869292065
6d626564207468697320666f6e7420696e20636f6e74656e742061732070
65726d69747465642062792074686520656d62656464696e672072657374
72696374696f6e7320696e636c7564656420696e207468697320666f6e74
3b20616e6420286969292074656d706f726172696c7920646f776e6c6f61
64207468697320666f6e7420746f2061207072696e746572206f72206f74
686572206f75747075742064657669636520746f2068656c70207072696e
7420636f6e74656e742e20416e79206f7468657220757365206973207072
6f686962697465642e004e006f0072006d0061006c006f00620079010d00
65006a006e00e9006e006f0072006d0061006c005300740061006e006400
6100720064039a03b103bd03bf03bd03b903ba03ac00a900200042006500
69006a0069006e00670020005a0068006f006e0067005900690020004500
6c0065006300740072006f006e00690063007300200043006f002e002c00
200031003900390035002d0032003000300035002c00200041006c006c00
200072006900670068007400730020007200650073006500720076006500
64004b005900560052004d004a002b00460061006e00670053006f006e00
670052006500670075006c00610072004b005900560052004d004a002b00
460061006e00670053006f006e0067004b005900560052004d004a002b00
460061006e00670053006f006e006700560065007200730069006f006e00
200035002e00300031004b005900560052004d004a002b00460061006e00
670053006f006e006700540072006100640065006d00610072006b002000
6f00660020004200650069006a0069006e00670020005a0068006f006e00
670059006900200045006c0065006300740072006f006e00690063007300
200043006f002e002c0020004300680069006e0061004d00690063007200
6f0073006f0066007400200073007500700070006c006900650064002000
66006f006e0074002e00200059006f00750020006d006100790020007500
7300650020007400680069007300200066006f006e007400200074006f00
20006300720065006100740065002c00200064006900730070006c006100
79002c00200061006e00640020007000720069006e007400200063006f00
6e00740065006e00740020006100730020007000650072006d0069007400
740065006400200062007900200074006800650020006c00690063006500
6e007300650020007400650072006d00730020006f007200200074006500
72006d00730020006f00660020007500730065002c0020006f0066002000
74006800650020004d006900630072006f0073006f006600740020007000
72006f0064007500630074002c0020007300650072007600690063006500
2c0020006f007200200063006f006e00740065006e007400200069006e00
20007700680069006300680020007400680069007300200066006f006e00
74002000770061007300200069006e0063006c0075006400650064002e00
200059006f00750020006d006100790020006f006e006c00790020002800
69002900200065006d006200650064002000740068006900730020006600
6f006e007400200069006e00200063006f006e00740065006e0074002000
6100730020007000650072006d0069007400740065006400200062007900
2000740068006500200065006d00620065006400640069006e0067002000
7200650073007400720069006300740069006f006e007300200069006e00
63006c007500640065006400200069006e00200074006800690073002000
66006f006e0074003b00200061006e006400200028006900690029002000
740065006d0070006f0072006100720069006c007900200064006f007700
6e006c006f006100640020007400680069007300200066006f006e007400
200074006f002000610020007000720069006e0074006500720020006f00
720020006f00740068006500720020006f00750074007000750074002000
640065007600690063006500200074006f002000680065006c0070002000
7000720069006e007400200063006f006e00740065006e0074002e002000
41006e00790020006f007400680065007200200075007300650020006900
73002000700072006f0068006900620069007400650064002e004e006f00
72006d0061006c004e006f0072006d00610061006c0069004e006f007200
6d0061006c004e006f0072006d00e1006c004e006f0072006d0061006c00
65005300740061006e00640061006100720064004e006f0072006d006100
6c004e006f0072006d0061006c006e0079004e006f0072006d0061006c04
1e0431044b0447043d044b0439004e006f0072006d00e1006c006e006500
4e006f0072006d0061006c004e006f0072006d0061006c004e0061007600
610064006e006f0041007200720075006e007400615b574f536570636e75
3153174eac4e2d66134e2d680775355b504fe1606f6280672f6709965051
6c53f863d04f9b3002004b005900560052004d004a002b4eff5b8b005200
6500670075006c00610072004b005900560052004d004a002b4eff5b8b00
4b005900560052004d004a002b4eff5b8b00560065007200730069006f00
6e00200035002e00300031004b005900560052004d004a002b4eff5b8b00
540072006100640065006d00610072006b0020006f00660020005a004800
4f004e00470059004900200045006c0065006300740072006f006e006900
6300200043006f002e002c0020004200650069006a0069006e0067004e00
6f0072006d0061006c004e006f0072006d0061006c004e006f0072006d00
61006c004e006f0072006d0061006c00411a01110110003200280110010e
00280028010f010e00280028010c010d00460028010d010e00280028010e
010d00180028010c010db346285001b801ff858d001db0324b5258b0801d
59b801064568b801062344b801044568b801042344b801054568b8010445
60b801052344b801024568b801044560b801022344b801034568b8010245
60b801032344b801004568b801044560b801002344b801014568b8010045
60b801012344012b2b2b2b2b2b2b000000>
[223 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 34 2 <0001000effe400e600d4003d000037363706072716373636273717260607
363717220706071737371707151407262737173635350715362717220715
363717060715142727362735342706070e332232060d16350d0903030c04
080a5b090d1364090b064a070b070809160318034939020b0d3533070b0e
3704090501031e2a39263304010b0104161d05011101141407030c070e0d
06060809086b110d0d1403100a0c5f061705030b061705030a01063c0905
11050b520a0e231d>JBAAAA+FangSong AddT42Char 
1 0 0 <0002001cfff300e000c10003000700001723353307231533e0c4c408b5b5
0dce07c0>JBAAAA+FangSong AddT42Char 
JBAAAA+FangSong /CharStrings get begin
/g2 2 def
end
JBAAAA+FangSong /Encoding get
dup 9 /g2 put
pop
end
%ADOEndSubsetFont
/TXGBYY+FangSong /JBAAAA+FangSong findfont ct_VMDictPut
/TXGBYY+FangSong*1 
[9{/.notdef}rp /g2 246{/.notdef}rp]
TXGBYY+FangSong nf
TXGBYY+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
233.536 270.32 mo
(\011)sh
%ADOBeginSubsetFont: KBAAAA+FangSong Initial
ct_T42Dict begin
-0.008 -0.164 1.004 0.859
 256 array 0 1 255 {1 index exch /.notdef put} for  /KBAAAA+FangSong
Type42DictBegin
[<00010000000c000c000c000c4f532f3252d9e4eb000000cc000000566376
7420072903f000000124000002be6670676d4aa192e8000003e40000000d
676c796629e967a5000011680000015468656164f01f66c7000003f40000
003668686561020200df0000042c00000024686d74780200003700000450
0000000c6c6f6361001100bb0000045c000000086d61787001bf02840000
0464000000206e616d6541cf9ae10000048400000c2f7072657005dc4fcc
000010b4000000b267646972000000000000000000000000000100800190
0005000800800080000000100080008000000080000c0041000002010609
060101010101000000031000000000000000000000005a59454300400000
f0ff00dcffdc002400dc002480000000000000000000ffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff00ab00020070
00020004fffeffdfffff00060008000a000c000e00100012001400160018
001a001c001e000e0010ffff00060008000a000c000e0010001200140016
0018001a001a001cffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff001e001e00c90000001c001c0002ffea0055
0033003800c1000a00400037003d0032003c00dcffdd0057004d000b001f
000b001f00920037007a0070006c006f00200020001a0016000600080006
0008000f0000b0282c4b525845441b2121592d000000000100000005028f
35636ae05f0f3cf5000b010000000000bc50bff100000000d3ac6594fffe
ffd6010100dc0000000c00020000000000000001000000dcffdc00240100
fffeffff01010001000000000000000000000000000000030100001c0000
00000100001b00000011001100aa00010000000301a20031000000000001
0000002f00290000016100b20000000000000032025e0001000000000000
004100000001000000000001000f00410001000000000002000700500001
000000000003000f00570001000000000004000f00660001000000000005
000c00750001000000000006000f00810001000000000007003300900001
00000000000d01c400c30003000104030002000c02870003000104050002
001002930003000104060002000c02a30003000104070002001002af0003
000104080002001002bf0003000104090000008202cf0003000104090001
001e03510003000104090002000e036f0003000104090003001e037d0003
000104090004001e039b0003000104090005001803b90003000104090006
001e03d10003000104090007006603ef000300010409000d038804550003
0001040a0002000c07dd00030001040b0002001007e900030001040c0002
000c07f900030001040e0002000c08050003000104100002000e08110003
0001041300020012081f0003000104140002000c08310003000104150002
0010083d0003000104160002000c084d0003000104190002000e08590003
0001041b00020010086700030001041d0002000c087700030001041f0002
000c08830003000104240002000e088f00030001042d0002000e089d0003
000108040000003008ab0003000108040001001208db0003000108040002
000e08ed0003000108040003001208fb00030001080400040012090d0003
0001080400050018091f0003000108040006001209370003000108040007
0058094900030001080a0002000c09a10003000108160002000c09ad0003
00010c0a0002000c09b9000300010c0c0002000c09c5a9204265696a696e
67205a686f6e67596920456c656374726f6e69637320436f2e2c20313939
352d323030352c20416c6c20726967687473207265736572766564574546
57514b2b46616e67536f6e67526567756c617257454657514b2b46616e67
536f6e6757454657514b2b46616e67536f6e6756657273696f6e20352e30
3157454657514b2b46616e67536f6e6754726164656d61726b206f662042
65696a696e67205a686f6e67596920456c656374726f6e69637320436f2e
2c204368696e614d6963726f736f667420737570706c69656420666f6e74
2e20596f75206d617920757365207468697320666f6e7420746f20637265
6174652c20646973706c61792c20616e64207072696e7420636f6e74656e
74206173207065726d697474656420627920746865206c6963656e736520
7465726d73206f72207465726d73206f66207573652c206f662074686520
4d6963726f736f66742070726f647563742c20736572766963652c206f72
20636f6e74656e7420696e207768696368207468697320666f6e74207761
7320696e636c756465642e20596f75206d6179206f6e6c79202869292065
6d626564207468697320666f6e7420696e20636f6e74656e742061732070
65726d69747465642062792074686520656d62656464696e672072657374
72696374696f6e7320696e636c7564656420696e207468697320666f6e74
3b20616e6420286969292074656d706f726172696c7920646f776e6c6f61
64207468697320666f6e7420746f2061207072696e746572206f72206f74
686572206f75747075742064657669636520746f2068656c70207072696e
7420636f6e74656e742e20416e79206f7468657220757365206973207072
6f686962697465642e004e006f0072006d0061006c006f00620079010d00
65006a006e00e9006e006f0072006d0061006c005300740061006e006400
6100720064039a03b103bd03bf03bd03b903ba03ac00a900200042006500
69006a0069006e00670020005a0068006f006e0067005900690020004500
6c0065006300740072006f006e00690063007300200043006f002e002c00
200031003900390035002d0032003000300035002c00200041006c006c00
200072006900670068007400730020007200650073006500720076006500
6400570045004600570051004b002b00460061006e00670053006f006e00
670052006500670075006c0061007200570045004600570051004b002b00
460061006e00670053006f006e006700570045004600570051004b002b00
460061006e00670053006f006e006700560065007200730069006f006e00
200035002e0030003100570045004600570051004b002b00460061006e00
670053006f006e006700540072006100640065006d00610072006b002000
6f00660020004200650069006a0069006e00670020005a0068006f006e00
670059006900200045006c0065006300740072006f006e00690063007300
200043006f002e002c0020004300680069006e0061004d00690063007200
6f0073006f0066007400200073007500700070006c006900650064002000
66006f006e0074002e00200059006f00750020006d006100790020007500
7300650020007400680069007300200066006f006e007400200074006f00
20006300720065006100740065002c00200064006900730070006c006100
79002c00200061006e00640020007000720069006e007400200063006f00
6e00740065006e00740020006100730020007000650072006d0069007400
740065006400200062007900200074006800650020006c00690063006500
6e007300650020007400650072006d00730020006f007200200074006500
72006d00730020006f00660020007500730065002c0020006f0066002000
74006800650020004d006900630072006f0073006f006600740020007000
72006f0064007500630074002c0020007300650072007600690063006500
2c0020006f007200200063006f006e00740065006e007400200069006e00
20007700680069006300680020007400680069007300200066006f006e00
74002000770061007300200069006e0063006c0075006400650064002e00
200059006f00750020006d006100790020006f006e006c00790020002800
69002900200065006d006200650064002000740068006900730020006600
6f006e007400200069006e00200063006f006e00740065006e0074002000
6100730020007000650072006d0069007400740065006400200062007900
2000740068006500200065006d00620065006400640069006e0067002000
7200650073007400720069006300740069006f006e007300200069006e00
63006c007500640065006400200069006e00200074006800690073002000
66006f006e0074003b00200061006e006400200028006900690029002000
740065006d0070006f0072006100720069006c007900200064006f007700
6e006c006f006100640020007400680069007300200066006f006e007400
200074006f002000610020007000720069006e0074006500720020006f00
720020006f00740068006500720020006f00750074007000750074002000
640065007600690063006500200074006f002000680065006c0070002000
7000720069006e007400200063006f006e00740065006e0074002e002000
41006e00790020006f007400680065007200200075007300650020006900
73002000700072006f0068006900620069007400650064002e004e006f00
72006d0061006c004e006f0072006d00610061006c0069004e006f007200
6d0061006c004e006f0072006d00e1006c004e006f0072006d0061006c00
65005300740061006e00640061006100720064004e006f0072006d006100
6c004e006f0072006d0061006c006e0079004e006f0072006d0061006c04
1e0431044b0447043d044b0439004e006f0072006d00e1006c006e006500
4e006f0072006d0061006c004e006f0072006d0061006c004e0061007600
610064006e006f0041007200720075006e007400615b574f536570636e75
3153174eac4e2d66134e2d680775355b504fe1606f6280672f6709965051
6c53f863d04f9b300200570045004600570051004b002b4eff5b8b005200
6500670075006c0061007200570045004600570051004b002b4eff5b8b00
570045004600570051004b002b4eff5b8b00560065007200730069006f00
6e00200035002e0030003100570045004600570051004b002b4eff5b8b00
540072006100640065006d00610072006b0020006f00660020005a004800
4f004e00470059004900200045006c0065006300740072006f006e006900
6300200043006f002e002c0020004200650069006a0069006e0067004e00
6f0072006d0061006c004e006f0072006d0061006c004e006f0072006d00
61006c004e006f0072006d0061006c00411a01110110003200280110010e
00280028010f010e00280028010c010d00460028010d010e00280028010e
010d00180028010c010db346285001b801ff858d001db0324b5258b0801d
59b801064568b801062344b801044568b801042344b801054568b8010445
60b801052344b801024568b801044560b801022344b801034568b8010245
60b801032344b801004568b801044560b801002344b801014568b8010045
60b801012344012b2b2b2b2b2b2b000000>
[341 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 34 2 <0008001bffe700e900d30010002e00380043004b00510058005f00003707
142327363535342737173737170707273637172607172207363717220607
271637262706072716372627371617073637172207153737071716163327
371617062627360737363707161707060727363716072627371617060726
27371617bc670409040204065a060b07052c38040d082d0b050c43040d0f
a90a0c133d060812090b133c060e02110939430808104354065a040a2c24
0b0511073235091c03210506380909300913040f0da00411150213154d02
0e0f030e0f3a06070d010c170c0c020b06080b06276e05030e01030c1104
030b0b020b01040e0e01020b01050c14020c076b040109050f0528063e14
1d2801290c0224196b060209150409086a2a101106241a0a1515030d0c08
081313020b0b>KBAAAA+FangSong AddT42Char 
1 0 0 <0002001cfff300e000c10003000700001723353307231533e0c4c408b5b5
0dce07c0>KBAAAA+FangSong AddT42Char 
KBAAAA+FangSong /CharStrings get begin
/g2 2 def
end
KBAAAA+FangSong /Encoding get
dup 15 /g2 put
pop
end
%ADOEndSubsetFont
/TXGBYZ+FangSong /KBAAAA+FangSong findfont ct_VMDictPut
/TXGBYZ+FangSong*1 
[15{/.notdef}rp /g2 240{/.notdef}rp]
TXGBYZ+FangSong nf
TXGBYZ+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
244.036 270.32 mo
(\017)sh
%ADOBeginSubsetFont: LBAAAA+FangSong Initial
ct_T42Dict begin
-0.008 -0.164 1.004 0.859
 256 array 0 1 255 {1 index exch /.notdef put} for  /LBAAAA+FangSong
Type42DictBegin
[<00010000000c000c000c000c4f532f3252d9e4eb000000cc000000566376
7420072903f000000124000002be6670676d4aa192e8000003e40000000d
676c7966102428de00001168000000d468656164f01f66c7000003f40000
003668686561020200df0000042c00000024686d74780200004e00000450
0000000c6c6f63610011007b0000045c000000086d61787001bf02840000
0464000000206e616d6584b2f3990000048400000c2f7072657005dc4fcc
000010b4000000b267646972000000000000000000000000000100800190
0005000800800080000000100080008000000080000c0041000002010609
060101010101000000031000000000000000000000005a59454300400000
f0ff00dcffdc002400dc002480000000000000000000ffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff00ab00020070
00020004fffeffdfffff00060008000a000c000e00100012001400160018
001a001c001e000e0010ffff00060008000a000c000e0010001200140016
0018001a001a001cffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff001e001e00c90000001c001c0002ffea0055
0033003800c1000a00400037003d0032003c00dcffdd0057004d000b001f
000b001f00920037007a0070006c006f00200020001a0016000600080006
0008000f0000b0282c4b525845441b2121592d000000000100000005028f
e42d3a4c5f0f3cf5000b010000000000bc50bff100000000d3ac6594fffe
ffd6010100dc0000000c00020000000000000001000000dcffdc00240100
fffeffff01010001000000000000000000000000000000030100001c0000
000001000032000000110011006a00010000000301a20031000000000001
0000002f00290000016100b20000000000000032025e0001000000000000
004100000001000000000001000f00410001000000000002000700500001
000000000003000f00570001000000000004000f00660001000000000005
000c00750001000000000006000f00810001000000000007003300900001
00000000000d01c400c30003000104030002000c02870003000104050002
001002930003000104060002000c02a30003000104070002001002af0003
000104080002001002bf0003000104090000008202cf0003000104090001
001e03510003000104090002000e036f0003000104090003001e037d0003
000104090004001e039b0003000104090005001803b90003000104090006
001e03d10003000104090007006603ef000300010409000d038804550003
0001040a0002000c07dd00030001040b0002001007e900030001040c0002
000c07f900030001040e0002000c08050003000104100002000e08110003
0001041300020012081f0003000104140002000c08310003000104150002
0010083d0003000104160002000c084d0003000104190002000e08590003
0001041b00020010086700030001041d0002000c087700030001041f0002
000c08830003000104240002000e088f00030001042d0002000e089d0003
000108040000003008ab0003000108040001001208db0003000108040002
000e08ed0003000108040003001208fb00030001080400040012090d0003
0001080400050018091f0003000108040006001209370003000108040007
0058094900030001080a0002000c09a10003000108160002000c09ad0003
00010c0a0002000c09b9000300010c0c0002000c09c5a9204265696a696e
67205a686f6e67596920456c656374726f6e69637320436f2e2c20313939
352d323030352c20416c6c20726967687473207265736572766564454847
4e434a2b46616e67536f6e67526567756c61724548474e434a2b46616e67
536f6e674548474e434a2b46616e67536f6e6756657273696f6e20352e30
314548474e434a2b46616e67536f6e6754726164656d61726b206f662042
65696a696e67205a686f6e67596920456c656374726f6e69637320436f2e
2c204368696e614d6963726f736f667420737570706c69656420666f6e74
2e20596f75206d617920757365207468697320666f6e7420746f20637265
6174652c20646973706c61792c20616e64207072696e7420636f6e74656e
74206173207065726d697474656420627920746865206c6963656e736520
7465726d73206f72207465726d73206f66207573652c206f662074686520
4d6963726f736f66742070726f647563742c20736572766963652c206f72
20636f6e74656e7420696e207768696368207468697320666f6e74207761
7320696e636c756465642e20596f75206d6179206f6e6c79202869292065
6d626564207468697320666f6e7420696e20636f6e74656e742061732070
65726d69747465642062792074686520656d62656464696e672072657374
72696374696f6e7320696e636c7564656420696e207468697320666f6e74
3b20616e6420286969292074656d706f726172696c7920646f776e6c6f61
64207468697320666f6e7420746f2061207072696e746572206f72206f74
686572206f75747075742064657669636520746f2068656c70207072696e
7420636f6e74656e742e20416e79206f7468657220757365206973207072
6f686962697465642e004e006f0072006d0061006c006f00620079010d00
65006a006e00e9006e006f0072006d0061006c005300740061006e006400
6100720064039a03b103bd03bf03bd03b903ba03ac00a900200042006500
69006a0069006e00670020005a0068006f006e0067005900690020004500
6c0065006300740072006f006e00690063007300200043006f002e002c00
200031003900390035002d0032003000300035002c00200041006c006c00
200072006900670068007400730020007200650073006500720076006500
64004500480047004e0043004a002b00460061006e00670053006f006e00
670052006500670075006c00610072004500480047004e0043004a002b00
460061006e00670053006f006e0067004500480047004e0043004a002b00
460061006e00670053006f006e006700560065007200730069006f006e00
200035002e00300031004500480047004e0043004a002b00460061006e00
670053006f006e006700540072006100640065006d00610072006b002000
6f00660020004200650069006a0069006e00670020005a0068006f006e00
670059006900200045006c0065006300740072006f006e00690063007300
200043006f002e002c0020004300680069006e0061004d00690063007200
6f0073006f0066007400200073007500700070006c006900650064002000
66006f006e0074002e00200059006f00750020006d006100790020007500
7300650020007400680069007300200066006f006e007400200074006f00
20006300720065006100740065002c00200064006900730070006c006100
79002c00200061006e00640020007000720069006e007400200063006f00
6e00740065006e00740020006100730020007000650072006d0069007400
740065006400200062007900200074006800650020006c00690063006500
6e007300650020007400650072006d00730020006f007200200074006500
72006d00730020006f00660020007500730065002c0020006f0066002000
74006800650020004d006900630072006f0073006f006600740020007000
72006f0064007500630074002c0020007300650072007600690063006500
2c0020006f007200200063006f006e00740065006e007400200069006e00
20007700680069006300680020007400680069007300200066006f006e00
74002000770061007300200069006e0063006c0075006400650064002e00
200059006f00750020006d006100790020006f006e006c00790020002800
69002900200065006d006200650064002000740068006900730020006600
6f006e007400200069006e00200063006f006e00740065006e0074002000
6100730020007000650072006d0069007400740065006400200062007900
2000740068006500200065006d00620065006400640069006e0067002000
7200650073007400720069006300740069006f006e007300200069006e00
63006c007500640065006400200069006e00200074006800690073002000
66006f006e0074003b00200061006e006400200028006900690029002000
740065006d0070006f0072006100720069006c007900200064006f007700
6e006c006f006100640020007400680069007300200066006f006e007400
200074006f002000610020007000720069006e0074006500720020006f00
720020006f00740068006500720020006f00750074007000750074002000
640065007600690063006500200074006f002000680065006c0070002000
7000720069006e007400200063006f006e00740065006e0074002e002000
41006e00790020006f007400680065007200200075007300650020006900
73002000700072006f0068006900620069007400650064002e004e006f00
72006d0061006c004e006f0072006d00610061006c0069004e006f007200
6d0061006c004e006f0072006d00e1006c004e006f0072006d0061006c00
65005300740061006e00640061006100720064004e006f0072006d006100
6c004e006f0072006d0061006c006e0079004e006f0072006d0061006c04
1e0431044b0447043d044b0439004e006f0072006d00e1006c006e006500
4e006f0072006d0061006c004e006f0072006d0061006c004e0061007600
610064006e006f0041007200720075006e007400615b574f536570636e75
3153174eac4e2d66134e2d680775355b504fe1606f6280672f6709965051
6c53f863d04f9b3002004500480047004e0043004a002b4eff5b8b005200
6500670075006c00610072004500480047004e0043004a002b4eff5b8b00
4500480047004e0043004a002b4eff5b8b00560065007200730069006f00
6e00200035002e00300031004500480047004e0043004a002b4eff5b8b00
540072006100640065006d00610072006b0020006f00660020005a004800
4f004e00470059004900200045006c0065006300740072006f006e006900
6300200043006f002e002c0020004200650069006a0069006e0067004e00
6f0072006d0061006c004e006f0072006d0061006c004e006f0072006d00
61006c004e006f0072006d0061006c00411a01110110003200280110010e
00280028010f010e00280028010c010d00460028010d010e00280028010e
010d00180028010c010db346285001b801ff858d001db0324b5258b0801d
59b801064568b801062344b801044568b801042344b801054568b8010445
60b801052344b801024568b801044560b801022344b801034568b8010245
60b801032344b801004568b801044560b801002344b801014568b8010045
60b801012344012b2b2b2b2b2b2b000000>
[213 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 34 2 <00030032ffe900dd00ce0020003100350000371707060726273717363707
171627273627272627371737363627371726060737062727362735342737
173737170707170727173737d30a06050c0c1b012108048e0101030c0702
010103030921110e03030c031112685e040a030104040831060b08040a3d
02012a05a30b078f190d17031218790b8c0f021403106a130e0211011a20
0401140214180883020e0607200f0e010f05090b082709053128032a>LBAAAA+FangSong AddT42Char 
1 0 0 <0002001cfff300e000c10003000700001723353307231533e0c4c408b5b5
0dce07c0>LBAAAA+FangSong AddT42Char 
LBAAAA+FangSong /CharStrings get begin
/g2 2 def
end
LBAAAA+FangSong /Encoding get
dup 17 /g2 put
pop
end
%ADOEndSubsetFont
/TXGBZA+FangSong /LBAAAA+FangSong findfont ct_VMDictPut
/TXGBZA+FangSong*1 
[17{/.notdef}rp /g2 238{/.notdef}rp]
TXGBZA+FangSong nf
TXGBZA+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
254.536 270.32 mo
(\021)sh
148.655 241.489 mo
226.352 260.919 li
@
229.839 261.791 mo
228.854 261.339 227.32 260.338 226.327 259.369 cv
225.601 262.275 li
226.933 261.888 228.757 261.727 229.839 261.791 cv
f
%ADOBeginSubsetFont: MBAAAA+CMMI7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /MBAAAA+CMMI7 def
/FontInfo 7 dict dup begin
/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMMI7.) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 62 /greater put
def
/FontBBox {-1 -250 1171 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0 431 441 451 463 683 703] def
/OtherBlues [-204 -194] def
/BlueScale 0.04379 def
/StdHW [32] def
/StdVW [81] def
/StemSnapH [32 36] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/greater <1C60D8A8C9B5822BBFFC89715034B8A68FE7DBB78831248DCE588C
37C45851A73F7692D4143EF3B32D843E92E06AC029E6C25B4C9AA67FB77BD827
E0A5BFDF97718729254E3868F5660F4E8B627456694E6D987857047A2A0E0FD9
A0895E> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/TXGBZB+CMMI7 /MBAAAA+CMMI7 findfont ct_VMDictPut
/TXGBZB+CMMI7*1 
[62{/.notdef}rp /greater 193{/.notdef}rp]
TXGBZB+CMMI7 nf
TXGBZB+CMMI7*1 [7.29285 1.82362 1.82362 -7.29285 0 0 ]msf
178.576 257.786 mo
(>)sh
%ADOBeginSubsetFont: NBAAAA+CMR7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /NBAAAA+CMR7 def
/FontInfo 7 dict dup begin
/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMR7.) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
dup 53 /five put
def
/FontBBox {-27 -250 1122 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0 431 446 664 674 683 703] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [36] def
/StdVW [79] def
/StemSnapH [28 36] def
/StemSnapV [79 95] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/two <1C60D8A8C9B7E2CE5B2D2AF3C16D655586ADDFD255F342CC78E0CFD77C
BD9B63EF6E836EA2677FC1E3515560DC8E1709808740B3E922280CDDC6B1DE59
498D3F96D52EB7A68A65E121CBB4EE62A5F7C7620A42A7CFE5CDEB9DCEFA2914
61A983E5129317168388213985652593802B6BD46B323DAA41AA2361FFE1897E
F8609C> |-
/five <1C60D8A8C9B7E2CEA7BEEF97397CF584C73BBB552ACA7BE761A773032
0D948261D0F09FB4B597AA91855F03701772D3C759AF316165C9BC05703D2F33
CBF3B6D037C80DA58D3E06EB530844281561DE1EAAA05EA7E6E603AE2E808199
D7F7D17F7975F2430BB148C6FCD665E0CC9AEDBF490CAF289909154436D62B38
5B99A24005E5B4B073467835D03C36A9E0434AEAB81CF17668A704C2ABC5CC1B
01E0E48ABB31D966C239418DF38462842A0F3655061F35189B65BEAD3E2DBB0B
10790> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/TXGBZC+CMR7 /NBAAAA+CMR7 findfont ct_VMDictPut
/TXGBZC+CMR7*1 
[50{/.notdef}rp /two 2{/.notdef}rp /five 202{/.notdef}rp]
TXGBZC+CMR7 nf
TXGBZC+CMR7*1 [7.29285 1.82362 1.82362 -7.29285 0 0 ]msf
187.459 260.008 mo
(25)
[4.15253 1.03839 0 0 ]xysh
gsave
264.553 201.728 mo
234.023 201.728 li
231.822 201.728 230.038 203.512 230.038 205.713 cv
230.038 214.192 li
230.038 216.393 231.822 218.177 234.023 218.177 cv
264.553 218.177 li
266.754 218.177 268.538 216.393 268.538 214.192 cv
268.538 205.713 li
268.538 203.512 266.754 201.728 264.553 201.728 cv
cp
clp
210.784 226.404 mo
287.792 226.404 li
287.792 193.501 li
210.784 193.501 li
cp
level3{
gsave
clp
[.77008 0 0 -.32903 210.784 226.404 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.77008 0 0 -.32903 210.784 226.404 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
grestore
264.553 201.728 mo
234.023 201.728 li
231.822 201.728 230.038 203.512 230.038 205.713 cv
230.038 214.192 li
230.038 216.393 231.822 218.177 234.023 218.177 cv
264.553 218.177 li
266.754 218.177 268.538 216.393 268.538 214.192 cv
268.538 205.713 li
268.538 203.512 266.754 201.728 264.553 201.728 cv
cp
@
%ADOBeginSubsetFont: OBAAAA+FangSong Initial
ct_T42Dict begin
-0.008 -0.164 1.004 0.859
 256 array 0 1 255 {1 index exch /.notdef put} for  /OBAAAA+FangSong
Type42DictBegin
[<00010000000c000c000c000c4f532f3252d9e4eb000000cc000000566376
7420072903f000000124000002be6670676d4aa192e8000003e40000000d
676c79665dd9ba8a00001168000000c868656164f01f66c7000003f40000
003668686561020200df0000042c00000024686d74780200003000000450
0000000c6c6f6361001100750000045c000000086d61787001bf02840000
0464000000206e616d65f8d842ad0000048400000c2f7072657005dc4fcc
000010b4000000b267646972000000000000000000000000000100800190
0005000800800080000000100080008000000080000c0041000002010609
060101010101000000031000000000000000000000005a59454300400000
f0ff00dcffdc002400dc002480000000000000000000ffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff00ab00020070
00020004fffeffdfffff00060008000a000c000e00100012001400160018
001a001c001e000e0010ffff00060008000a000c000e0010001200140016
0018001a001a001cffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff001e001e00c90000001c001c0002ffea0055
0033003800c1000a00400037003d0032003c00dcffdd0057004d000b001f
000b001f00920037007a0070006c006f00200020001a0016000600080006
0008000f0000b0282c4b525845441b2121592d000000000100000005028f
6078748c5f0f3cf5000b010000000000bc50bff100000000d3ac6594fffe
ffd6010100dc0000000c00020000000000000001000000dcffdc00240100
fffeffff01010001000000000000000000000000000000030100001c0000
000001000014000000110011006400010000000301a20031000000000001
0000002f00290000016100b20000000000000032025e0001000000000000
004100000001000000000001000f00410001000000000002000700500001
000000000003000f00570001000000000004000f00660001000000000005
000c00750001000000000006000f00810001000000000007003300900001
00000000000d01c400c30003000104030002000c02870003000104050002
001002930003000104060002000c02a30003000104070002001002af0003
000104080002001002bf0003000104090000008202cf0003000104090001
001e03510003000104090002000e036f0003000104090003001e037d0003
000104090004001e039b0003000104090005001803b90003000104090006
001e03d10003000104090007006603ef000300010409000d038804550003
0001040a0002000c07dd00030001040b0002001007e900030001040c0002
000c07f900030001040e0002000c08050003000104100002000e08110003
0001041300020012081f0003000104140002000c08310003000104150002
0010083d0003000104160002000c084d0003000104190002000e08590003
0001041b00020010086700030001041d0002000c087700030001041f0002
000c08830003000104240002000e088f00030001042d0002000e089d0003
000108040000003008ab0003000108040001001208db0003000108040002
000e08ed0003000108040003001208fb00030001080400040012090d0003
0001080400050018091f0003000108040006001209370003000108040007
0058094900030001080a0002000c09a10003000108160002000c09ad0003
00010c0a0002000c09b9000300010c0c0002000c09c5a9204265696a696e
67205a686f6e67596920456c656374726f6e69637320436f2e2c20313939
352d323030352c20416c6c207269676874732072657365727665644d514b
4249502b46616e67536f6e67526567756c61724d514b4249502b46616e67
536f6e674d514b4249502b46616e67536f6e6756657273696f6e20352e30
314d514b4249502b46616e67536f6e6754726164656d61726b206f662042
65696a696e67205a686f6e67596920456c656374726f6e69637320436f2e
2c204368696e614d6963726f736f667420737570706c69656420666f6e74
2e20596f75206d617920757365207468697320666f6e7420746f20637265
6174652c20646973706c61792c20616e64207072696e7420636f6e74656e
74206173207065726d697474656420627920746865206c6963656e736520
7465726d73206f72207465726d73206f66207573652c206f662074686520
4d6963726f736f66742070726f647563742c20736572766963652c206f72
20636f6e74656e7420696e207768696368207468697320666f6e74207761
7320696e636c756465642e20596f75206d6179206f6e6c79202869292065
6d626564207468697320666f6e7420696e20636f6e74656e742061732070
65726d69747465642062792074686520656d62656464696e672072657374
72696374696f6e7320696e636c7564656420696e207468697320666f6e74
3b20616e6420286969292074656d706f726172696c7920646f776e6c6f61
64207468697320666f6e7420746f2061207072696e746572206f72206f74
686572206f75747075742064657669636520746f2068656c70207072696e
7420636f6e74656e742e20416e79206f7468657220757365206973207072
6f686962697465642e004e006f0072006d0061006c006f00620079010d00
65006a006e00e9006e006f0072006d0061006c005300740061006e006400
6100720064039a03b103bd03bf03bd03b903ba03ac00a900200042006500
69006a0069006e00670020005a0068006f006e0067005900690020004500
6c0065006300740072006f006e00690063007300200043006f002e002c00
200031003900390035002d0032003000300035002c00200041006c006c00
200072006900670068007400730020007200650073006500720076006500
64004d0051004b004200490050002b00460061006e00670053006f006e00
670052006500670075006c00610072004d0051004b004200490050002b00
460061006e00670053006f006e0067004d0051004b004200490050002b00
460061006e00670053006f006e006700560065007200730069006f006e00
200035002e00300031004d0051004b004200490050002b00460061006e00
670053006f006e006700540072006100640065006d00610072006b002000
6f00660020004200650069006a0069006e00670020005a0068006f006e00
670059006900200045006c0065006300740072006f006e00690063007300
200043006f002e002c0020004300680069006e0061004d00690063007200
6f0073006f0066007400200073007500700070006c006900650064002000
66006f006e0074002e00200059006f00750020006d006100790020007500
7300650020007400680069007300200066006f006e007400200074006f00
20006300720065006100740065002c00200064006900730070006c006100
79002c00200061006e00640020007000720069006e007400200063006f00
6e00740065006e00740020006100730020007000650072006d0069007400
740065006400200062007900200074006800650020006c00690063006500
6e007300650020007400650072006d00730020006f007200200074006500
72006d00730020006f00660020007500730065002c0020006f0066002000
74006800650020004d006900630072006f0073006f006600740020007000
72006f0064007500630074002c0020007300650072007600690063006500
2c0020006f007200200063006f006e00740065006e007400200069006e00
20007700680069006300680020007400680069007300200066006f006e00
74002000770061007300200069006e0063006c0075006400650064002e00
200059006f00750020006d006100790020006f006e006c00790020002800
69002900200065006d006200650064002000740068006900730020006600
6f006e007400200069006e00200063006f006e00740065006e0074002000
6100730020007000650072006d0069007400740065006400200062007900
2000740068006500200065006d00620065006400640069006e0067002000
7200650073007400720069006300740069006f006e007300200069006e00
63006c007500640065006400200069006e00200074006800690073002000
66006f006e0074003b00200061006e006400200028006900690029002000
740065006d0070006f0072006100720069006c007900200064006f007700
6e006c006f006100640020007400680069007300200066006f006e007400
200074006f002000610020007000720069006e0074006500720020006f00
720020006f00740068006500720020006f00750074007000750074002000
640065007600690063006500200074006f002000680065006c0070002000
7000720069006e007400200063006f006e00740065006e0074002e002000
41006e00790020006f007400680065007200200075007300650020006900
73002000700072006f0068006900620069007400650064002e004e006f00
72006d0061006c004e006f0072006d00610061006c0069004e006f007200
6d0061006c004e006f0072006d00e1006c004e006f0072006d0061006c00
65005300740061006e00640061006100720064004e006f0072006d006100
6c004e006f0072006d0061006c006e0079004e006f0072006d0061006c04
1e0431044b0447043d044b0439004e006f0072006d00e1006c006e006500
4e006f0072006d0061006c004e006f0072006d0061006c004e0061007600
610064006e006f0041007200720075006e007400615b574f536570636e75
3153174eac4e2d66134e2d680775355b504fe1606f6280672f6709965051
6c53f863d04f9b3002004d0051004b004200490050002b4eff5b8b005200
6500670075006c00610072004d0051004b004200490050002b4eff5b8b00
4d0051004b004200490050002b4eff5b8b00560065007200730069006f00
6e00200035002e00300031004d0051004b004200490050002b4eff5b8b00
540072006100640065006d00610072006b0020006f00660020005a004800
4f004e00470059004900200045006c0065006300740072006f006e006900
6300200043006f002e002c0020004200650069006a0069006e0067004e00
6f0072006d0061006c004e006f0072006d0061006c004e006f0072006d00
61006c004e006f0072006d0061006c00411a01110110003200280110010e
00280028010f010e00280028010c010d00460028010d010e00280028010e
010d00180028010c010db346285001b801ff858d001db0324b5258b0801d
59b801064568b801062344b801044568b801042344b801054568b8010445
60b801052344b801024568b801044560b801022344b801034568b8010245
60b801032344b801004568b801044560b801002344b801014568b8010045
60b801012344012b2b2b2b2b2b2b000000>
[201 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 34 2 <00010014ffe800eb00c00034000037061733163635331416170623230637
373427070607273637060727163736270607271636371722071726060736
37172607170617900114191c02050606121d1a1d0202040c184c01431840
030d163c07012e050c0d6e080c0f3e0b04040258020e09520f06010d1301
0114210f200806012145130801632404265c06030e02062b0c05020b010d
020a080c01181308020d01060e010f00>OBAAAA+FangSong AddT42Char 
1 0 0 <0002001cfff300e000c10003000700001723353307231533e0c4c408b5b5
0dce07c0>OBAAAA+FangSong AddT42Char 
OBAAAA+FangSong /CharStrings get begin
/g2 2 def
end
OBAAAA+FangSong /Encoding get
dup 224 /g2 put
pop
end
%ADOEndSubsetFont
/TXGBZD+FangSong /OBAAAA+FangSong findfont ct_VMDictPut
/TXGBZD+FangSong*1 
[224{/.notdef}rp /g2 31{/.notdef}rp]
TXGBZD+FangSong nf
TXGBZD+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
233.536 213.627 mo
(\340)sh
TXGBYZ+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
244.036 213.627 mo
(\017)sh
TXGBZA+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
254.536 213.627 mo
(\021)sh
148.655 235.11 mo
226.352 215.68 li
@
229.839 214.808 mo
228.757 214.873 226.933 214.711 225.601 214.324 cv
226.327 217.23 li
227.32 216.261 228.854 215.26 229.839 214.808 cv
f
%ADOBeginSubsetFont: PBAAAA+CMSY7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /PBAAAA+CMSY7 def
/FontInfo 7 dict dup begin
/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMSY7.) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 20 /lessequal put
def
/FontBBox {-15 -951 1251 782} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-24 0 683 708] def
/OtherBlues [-139 -127] def
/BlueScale 0.039625 def
/StdHW [49] def
/StdVW [49] def
/StemSnapH [49 69] def
/StemSnapV [49 69] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/lessequal <1C60D8A8C9B5822B04DC4CB26BA7948F510AAA2B96069671280E
2B98E55CE710A38E35B9F78DD31983B2A2333C1A01B5FFAAE1C2F68E13CC9A1F
5E9CB29777C8A21BD2B44B9EECB8C5F3EF30F8B4C3CA7B7922846DC43F95D724
6ADAD97B05B8D87C06983456B6155A9F779B3264D04482A0AF4979E331505225
C9D0C8F95E> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/TXGBZE+CMSY7 /PBAAAA+CMSY7 findfont ct_VMDictPut
/TXGBZE+CMSY7*1 
[20{/.notdef}rp /lessequal 235{/.notdef}rp]
TXGBZE+CMSY7 nf
TXGBZE+CMSY7*1 [7.29285 -1.82362 -1.82362 -7.29285 0 0 ]msf
179.413 222.158 mo
(\024)sh
TXGBZC+CMR7*1 [7.29285 -1.82362 -1.82362 -7.29285 0 0 ]msf
188.296 219.937 mo
(25)
[4.15253 -1.03839 0 0 ]xysh
%ADOBeginSubsetFont: QBAAAA+SimSun Initial
ct_T42Dict begin
-0.008 -0.141 1 0.859
 256 array 0 1 255 {1 index exch /.notdef put} for  /QBAAAA+SimSun
Type42DictBegin
[<00010000000c000c000c000c4f532f324fd9e4e2000000cc000000566376
742004ba01cd00000124000000ba6670676dc564b4f6000001e000000dee
676c7966e75c822500001d100000009c68656164eb87fd0d00000fd00000
003668686561020100d70000100800000024686d7478020000340000102c
0000000c6c6f63610000004e00001038000000086d61787002e404d00000
1040000000206e616d65d7ad7f9d0000106000000aaa7072657051510fe7
00001b0c0000020467646972000000000000000000000000000100800190
0005000800800080000000100080008000000080000c0041000002010600
030101010101000000031000000000000000000000005a59454300400000
f0ff00dcffdc002400dc00248000000000000000000000b7fff800af0002
00af000200740002000000020000000200000002ffdfffff00b100000000
00020000000f001000060006000e00060006000600100006001000080010
000e00070007000e00090011000700190007000d0009000e000d00170009
0015000200090006000e0010001300160006001000080010000c000e0010
00060008000c00060008000e0009001100130007000a000f00190007000a
00060009000d000f00120017000600090013001600020009000b000e0000
404687868584838281807f7e7d7c7b7a797877767574737271706f6e6d6c
6b6a696867666564636261605f5e5d5c5b5a5958575655545351504f4e4d
4c4b4a49484746281f100a092c01b10b0a432343650a2d2c00b10a0b4323
430b2d2c01b00643b00743650a2d2cb04f2b20b0405158214b525845441b
2121591b2321b040b0042545b004254561648a63525845441b212159592d
2c00b00743b006430b2d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c2320b000508a8a64b10003255458b0401bb1010325
5458b005438b59b04f2b5923b0622b2321235865592d2cb108000c215460
432d2cb10c000c215460432d2c012047b0024320b8100062b81000635723
b8010062b8100063575a58b020606659482d2cb1000225b00225b0022553
b800352378b00225b0022560b020632020b00625236250588a21b0016023
1b2020b00625236252582321b001611b8a212321205959b8ffc11c60b020
6323212d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b12601885158b940
00020063b80400885458b202400243604259b94000040063b80800885458
b2028002436042595959595959b10002435458400a0540084009400c020d
021bb10102435458b2054008ba010000090100b30c010d011bb180024352
58b2054008b80180b109401bb2054008ba01800009014059b94000008088
55b94000020063b8040088555a58b30c000d011bb30c000d015959594242
4242422d2c45b1024e2b23b04f2b20b0405158214b5158b0022545b1014e
2b60591b2321b003254520648a63b0405358b1024e2b601b215959442d2c
20b00050205823651b2359b114148a7045b04f2b23b1610626602b8a58b0
05438b592358655923103a2d2cb003254963234660b04f2b23b00425b004
2549b0032563562060b062602bb003252010468a4660b02063613a2d2cb0
0016b1020325b1010425013e003eb10102060cb00a236542b00b2342b102
0325b1010425013f003fb10102060cb006236542b0072342b00116b10002
4354584523452018698a6323622020b0405058671b665961b02063b04023
61b00423421bb104004221215918012d2c2045b1004e2b442d2c4b51b140
4f2b505b582045b1014e2b208a8a4420b1400426616361b1014e2b44211b
23218a45b1014e2b208a234444592d2c4b51b1404f2b505b5845208ab040
6163601b23214559b1014e2b442d2c2345208a4523612064b04051b00425
20b0005323b040515a5ab1404f2b545a588a0c642364235358b140408a61
2063611b2063591b8a5963b1024e2b60442d2c012d2c002d2c05b10b0a43
2343650a2d2cb10a0b4323430b022d2cb002256366b00225b82000626023
622d2cb0022563b0206066b00225b82000626023622d2cb002256367b002
25b82000626023622d2cb002256366b02060b00225b82000626023622d2c
234ab1024e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b0022561
64b00343525821206459b1024e2b23b000505865592d2c238a4a234564b0
022564b002256164b00343525821206459b1014e2b23b000505865592d2c
20b003254ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb003
25b003258ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb003
2546b003254660b004252eb00425b00425b0042620b000505821b06a1bb0
6c592bb0032546b00325466061b08062208a2010233a232010233a2d2cb0
032547b003254760b0052547b0806361b00225b00625496323b005254ab0
80632058621b2159b0042646608a468a4660b02063612d2cb00426b00425
b00425b00426b06e2b208a2010233a232010233a2d2c2320b001545821b0
0225b1024e2bb0805020605920606020b001515821211b20b00551582120
6661b0402361b100032550b00325b00325505a5820b00325618a535821b0
00591b21591bb00754582066616523211b2121b000595959b1024e2b2d2c
b00225b004254ab0005358b0001b8a8a238ab00159b004254620666120b0
0526b0062649b00526b00526b0702b236165b02060206661b02061652d2c
b0022546208a20b000505821b1024e2b1b452321596165b00225103b2d2c
b0042620b802006220b80200638a236120b05d602bb00525118a128a2039
8a58ba005d10000004266356602b23212010204620b1024e2b23611b2321
208a201049b1024e2b593b2d2cba005d10000009256356602bb00525b005
25b00526b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba00
5d10000008266356602b20b0005258b0502bb00525b00525b00725b00725
b00525b0712bb0021738b00052b00225b001525a58b00425b0062549b003
25b00525496020b0405258211bb000525820b0025458b00425b00425b007
25b0072549b00217381bb00425b00425b00425b0062549b0021738595959
595921212121212d2cba005d1000000b256356602bb00725b00725b00625
b00625b00c25b00c25b00925b00825b06e2bb0041738b00725b00725b007
26b06d2bb00425b00425b00426b06d2bb0502bb00625b00625b00325b071
2bb00525b00525b00325b002173820b00625b00625b00525b0712b60b006
25b00625b0042565b0021738b00225b002256020b040535821b0406123b0
4061231bb8ffc05058b0406023b04060235959b00825b00825b00426b002
1738b00525b005258ab002173820b0005258b00625b0082549b00325b005
25496020b0405258211bb0005258b00625b00625b00625b00625b00b25b0
0b2549b0041738b00625b00625b00625b00625b00a25b00a25b00725b071
2bb0041738b00425b00425b00525b00725b00525b0712bb00217381bb004
25b00425b9ffc00002173859595921212121212121212d2cb00425b00325
87b00325b003258a20b000505821b0651bb068592b64b00425b0042506b0
0425b0042549202063b00325206351b1000325545b5821212321071b2063
b0022520636120b0532b8a63b00525b0052587b00425b004264ab0005058
6559b00426200146230046b00526200146230046b0001600b000234801b0
0023480020b0012348b00223480120b0012348b002234823b20200010823
38b2020001092338b1020107b00116592d2c23100d0c8a63238a636064b9
40000400635058b000381b3c592d2cb00625b00925b00925b00726b0762b
23b0005458051b0459b00425b00626b0772bb00525b00526b00525b00526
b0762bb0005458051b0459b0772b2d2cb00725b00a25b00a25b00826b076
2b8ab0005458051b0459b00525b00726b0772bb00625b00626b00625b006
26b0762b08b0772b2d2cb00725b00a25b00a25b00826b0762b8a8a08b004
25b00626b0772bb00525b00526b00525b00526b0762bb0005458051b0459
b0772b2d2cb00825b00b25b00b25b00926b0762bb00426b0042608b00525
b00726b0772bb00625b00626b00625b00626b0762b08b0772b2d2c03b003
25b003254ab00425b003254a02b00525b005264ab00526b005264ab00426
638a8a63612d2cb15d0e25602bb00c2611b0052612b00a2539b0072539b0
0a25b00a25b00925b07c2bb00050b00b25b00825b00a25b07c2bb0005054
58b00725b00b2587b00425b004250bb00a2510b00925c1b00225b002250b
b0072510b00625c11bb00725b00b25b00b25b9ffff00762bb00425b00425
0bb00725b00a25b0772bb00a25b00825b00825b9ffff00762bb00225b002
250bb00a25b00725b0772b59b00a2546b00a254660b0082546b008254660
b00625b006250bb00c25b00c25b00c2620b000505821b06a1bb06c592bb0
0425b004250bb00925b00925b0092620b000505821b06a1bb06c592b23b0
0a2546b00a25466061b0206323b0082546b00825466061b02063b1010c25
5458041b0559b00a262010b003253ab00626b006260bb0072620108a3ab1
0107265458041b0559b005262010b002253a8a8a0b232010233a2d2c23b0
015458b9000040001bb940000000598ab0015458b9000040001bb9400000
0059b07d2b2d2c8a8a080d8ab0015458b9000040001bb94000000059b07d
2b2d2c08b0015458b9000040001bb940000000590db07d2b2d2cb00426b0
0426080db00426b00426080db07d2b2d2c200146230046b00a43b00b438a
632362612d2cb0092bb006252eb005257dc5b00625b00525b0042520b000
505821b06a1bb06c592bb00525b00425b0032520b000505821b06a1bb06c
592b18b00825b00725b00625b00a25b06f2bb00625b00525b0042620b000
505821b0661bb068592bb00525b00425b0042620b000505821b0661bb068
592b54587db0042510b00325c5b0022510b00125c5b0052621b00526211b
b00626b00425b00325b00826b06f2b59b100024354587db00225b0822bb0
0525b0822b20206961b00443012361b06060206961b0206120b00826b008
268ab00217388a8a6120696161b00217381b2121212159182d2c4b52b101
0243535a58231020013c003c1b2121592d2c23b00225b00225535820b004
25583c1b3959b00160b8ffe91c592121212d2cb0022547b0022547548a20
201011b001608a2012b00161b0852b2d2cb0042547b002254754232012b0
01612320b0062620201011b00160b00626b0852b8a8ab0852b2d00000001
0000000526663e6825505f0f3cf5000b010000000000b798428000000000
d3ce556efffeffdc010000dc0000000c00020000000000000001000000dc
ffdc00240100fffefff70100000100000000000000000000000000000003
010000000000000001000034000000000000004e00010000000301810031
0000000000020010002f008800000217031e000000000000002601ce0001
000000000000002700000001000000000001000d00270001000000000002
000700340001000000000003000d003b0001000000000004000d00480001
000000000005000c00550001000000000006000d00610001000000000007
002c006e0003000104090000004e009a0003000104090001001a00e80003
000104090002000e01020003000104090003001a01100003000104090004
001a012a0003000104090005001801440003000104090006001a015c0003
00010409000700580176000300010409000d038801ce000300010409000e
005205560003000108040000008205a800030001080400010012062a0003
0001080400020004063c0003000108040003001206400003000108040004
0012065200030001080400050018066400030001080400060012067c0003
0001080400070058068e0003000108040008003e06e60003000108040009
003e0724000300010804000b00380762000300010804000c0038079a0003
000110040000004e07d20003000110040001001208200003000110040002
000408320003000110040003001208360003000110040004001208480003
0001100400050018085a0003000110040006001208720003000110040007
00580884a920436f70797269676874205a484f4e47594920456c65637472
6f6e696320436f2e203230303145424f53554f2b53696d53756e52656775
6c617245424f53554f2b53696d53756e45424f53554f2b53696d53756e56
657273696f6e20352e313545424f53554f2b53696d53756e54726164656d
61726b206f66205a484f4e47594920456c656374726f6e696320436f2e2c
204265696a696e6700a900200043006f0070007900720069006700680074
0020005a0048004f004e00470059004900200045006c0065006300740072
006f006e0069006300200043006f002e0020003200300030003100450042
004f00530055004f002b00530069006d00530075006e0052006500670075
006c0061007200450042004f00530055004f002b00530069006d00530075
006e00450042004f00530055004f002b00530069006d00530075006e0056
0065007200730069006f006e00200035002e0031003500450042004f0053
0055004f002b00530069006d00530075006e00540072006100640065006d
00610072006b0020006f00660020005a0048004f004e0047005900490020
0045006c0065006300740072006f006e0069006300200043006f002e002c
0020004200650069006a0069006e0067004d006900630072006f0073006f
0066007400200073007500700070006c00690065006400200066006f006e
0074002e00200059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e007400200074006f002000630072
0065006100740065002c00200064006900730070006c00610079002c0020
0061006e00640020007000720069006e007400200063006f006e00740065
006e00740020006100730020007000650072006d00690074007400650064
00200062007900200074006800650020006c006900630065006e00730065
0020007400650072006d00730020006f00720020007400650072006d0073
0020006f00660020007500730065002c0020006f00660020007400680065
0020004d006900630072006f0073006f00660074002000700072006f0064
007500630074002c00200073006500720076006900630065002c0020006f
007200200063006f006e00740065006e007400200069006e002000770068
0069006300680020007400680069007300200066006f006e007400200077
0061007300200069006e0063006c0075006400650064002e00200059006f
00750020006d006100790020006f006e006c007900200028006900290020
0065006d0062006500640020007400680069007300200066006f006e0074
00200069006e00200063006f006e00740065006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
006500200065006d00620065006400640069006e00670020007200650073
007400720069006300740069006f006e007300200069006e0063006c0075
00640065006400200069006e0020007400680069007300200066006f006e
0074003b00200061006e006400200028006900690029002000740065006d
0070006f0072006100720069006c007900200064006f0077006e006c006f
006100640020007400680069007300200066006f006e007400200074006f
002000610020007000720069006e0074006500720020006f00720020006f
00740068006500720020006f007500740070007500740020006400650076
00690063006500200074006f002000680065006c00700020007000720069
006e007400200063006f006e00740065006e0074002e00200041006e0079
0020006f0074006800650072002000750073006500200069007300200070
0072006f0068006900620069007400650064002e0068007400740070003a
002f002f007700770077002e006d006900630072006f0073006f00660074
002e0063006f006d002f007400790070006f006700720061007000680079
002f0066006f006e0074007300a900200043006f00700079007200690067
006800740020005a0048004f004e00470059004900200045006c00650063
00740072006f006e0069006300200043006f002e00200032003000300031
000d000a5b574f536570636e753153174eac4e2d66134e2d680775355b50
4fe1606f6280672f67099650516c53f863d04f9b300200450042004f0053
0055004f002b5b8b4f535e3889c400450042004f00530055004f002b5b8b
4f5300450042004f00530055004f002b5b8b4f5300560065007200730069
006f006e00200035002e0031003500450042004f00530055004f002b5b8b
4f5300540072006100640065006d00610072006b0020006f00660020005a
0048004f004e00470059004900200045006c0065006300740072006f006e
0069006300200043006f002e002c0020004200650069006a0069006e0067
004200650069006a0069006e00670020005a0068006f006e006700590069
00200045006c0065006300740072006f006e00690063007300200043006f
002e004200650069006a0069006e00670020005a0068006f006e00670059
006900200045006c0065006300740072006f006e00690063007300200043
006f002e0068007400740070003a002f002f007700770077002e007a0068
006f006e006700790069006300740073002e0063006f006d002e0063006e
0068007400740070003a002f002f007700770077002e007a0068006f006e
006700790069006300740073002e0063006f006d002e0063006e00a90020
0043006f00700079007200690067006800740020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e0020003200300030003100450042004f00530055004f002b5b8b
4f535e3889c400450042004f00530055004f002b5b8b4f5300450042004f
00530055004f002b5b8b4f5300560065007200730069006f006e00200035
002e0031003500450042004f00530055004f002b5b8b4f53005400720061
00640065006d00610072006b0020006f00660020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e002c0020004200650069006a0069006e0067000040ff5c331a1f
5b33401f5a33ff1f5932ff1f5831801f5731401f5630ff1f55302b1f542f
ff1f532d201f522e401f512eff1f502cff1f4f2c2b1f4e2a2b1f4d2aff1f
4c29ff1f4b28101f4a282b1f4928ff1f4827401f4727ff1f4626ff1f4525
ff1f4424801f4324801f42231a1f4123801f4023801f3f22401f3e22ff1f
3d22401f3c21ff1f3b20ff1f3a1fff1f391eff1f381d161f371d2b1f361d
ff1f351d401f341cff1f2e2d801f2d2b801f2c2b201f2519ff1f24081b19
5c23081a195c2219ff1f2116ff1f200c18165c1f170d1f1e17ff1f1d16ff
1f1c160d1f1b1b19005b181816005b1a1b19005b171816005b1519381638
5a0f1501ff1501134d1255404811ff1055125910590d4d0c55054d04550c
5904590f800e550b4d0a55074d0655011000550e590a5906590059094d08
55034d025508590259200250028002b002e002050340400501b901900054
2b4bb807ff524bb008505bb00188b02553b00188b040515ab00688b00055
5a5b58b101018e59858d8d001d424bb0905358b20300001d4259b1020243
5158b104038e5973002b002b2b2b002b002b002b002b2b2b2b2b002b002b
2b2b002b002b2b2b017374012b012b012b012b012b2b2b002b2b012b2b01
2b002b012b002b012b2b2b2b2b2b2b2b002b2b2b2b012b2b2b002b2b2b2b
2b2b012b2b2b002b2b2b2b2b2b012b2b2b2b2b2b002b2b2b2b2b2b2b2b18
00>
[157 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 0 2 <00040034ffe700d500d10016001a001e0022002f4015072005050e1c1f1f
0e181b1b0e120b0b1717030e03002f2f12392f33113311392f3311392f33
11392f333230313714170735231507363427173336371706060733371707
271533350715333507153335cb011078100101101e0b0418091304510813
0a877878787878010a0a0615100511a2100919170b0519070c0e08042c2c
323232382f2f>QBAAAA+SimSun AddT42Char 

1 0 0 <> QBAAAA+SimSun AddT42Char 
QBAAAA+SimSun /CharStrings get begin
/g2 2 def
end
QBAAAA+SimSun /Encoding get
dup 234 /g2 put
pop
end
%ADOEndSubsetFont
/TXGBZF+SimSun /QBAAAA+SimSun findfont ct_VMDictPut
/TXGBZF+SimSun*1 
[234{/.notdef}rp /g2 21{/.notdef}rp]
TXGBZF+SimSun nf
TXGBZF+SimSun*1 [6.02887 4.52145 4.52145 -6.02887 0 0 ]msf
63.0206 195.822 mo
(\352)sh
%ADOBeginSubsetFont: RBAAAA+SimSun Initial
ct_T42Dict begin
-0.008 -0.141 1 0.859
 256 array 0 1 255 {1 index exch /.notdef put} for  /RBAAAA+SimSun
Type42DictBegin
[<00010000000c000c000c000c4f532f324fd9e4e2000000cc000000566376
742004ba01cd00000124000000ba6670676dc564b4f6000001e000000dee
676c7966a900f43d00001d10000000a468656164eb87fd0d00000fd00000
003668686561020100d70000100800000024686d7478020000290000102c
0000000c6c6f63610000005200001038000000086d61787002e404d00000
1040000000206e616d65c644790d0000106000000aaa7072657051510fe7
00001b0c0000020467646972000000000000000000000000000100800190
0005000800800080000000100080008000000080000c0041000002010600
030101010101000000031000000000000000000000005a59454300400000
f0ff00dcffdc002400dc00248000000000000000000000b7fff800af0002
00af000200740002000000020000000200000002ffdfffff00b100000000
00020000000f001000060006000e00060006000600100006001000080010
000e00070007000e00090011000700190007000d0009000e000d00170009
0015000200090006000e0010001300160006001000080010000c000e0010
00060008000c00060008000e0009001100130007000a000f00190007000a
00060009000d000f00120017000600090013001600020009000b000e0000
404687868584838281807f7e7d7c7b7a797877767574737271706f6e6d6c
6b6a696867666564636261605f5e5d5c5b5a5958575655545351504f4e4d
4c4b4a49484746281f100a092c01b10b0a432343650a2d2c00b10a0b4323
430b2d2c01b00643b00743650a2d2cb04f2b20b0405158214b525845441b
2121591b2321b040b0042545b004254561648a63525845441b212159592d
2c00b00743b006430b2d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c2320b000508a8a64b10003255458b0401bb1010325
5458b005438b59b04f2b5923b0622b2321235865592d2cb108000c215460
432d2cb10c000c215460432d2c012047b0024320b8100062b81000635723
b8010062b8100063575a58b020606659482d2cb1000225b00225b0022553
b800352378b00225b0022560b020632020b00625236250588a21b0016023
1b2020b00625236252582321b001611b8a212321205959b8ffc11c60b020
6323212d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b12601885158b940
00020063b80400885458b202400243604259b94000040063b80800885458
b2028002436042595959595959b10002435458400a0540084009400c020d
021bb10102435458b2054008ba010000090100b30c010d011bb180024352
58b2054008b80180b109401bb2054008ba01800009014059b94000008088
55b94000020063b8040088555a58b30c000d011bb30c000d015959594242
4242422d2c45b1024e2b23b04f2b20b0405158214b5158b0022545b1014e
2b60591b2321b003254520648a63b0405358b1024e2b601b215959442d2c
20b00050205823651b2359b114148a7045b04f2b23b1610626602b8a58b0
05438b592358655923103a2d2cb003254963234660b04f2b23b00425b004
2549b0032563562060b062602bb003252010468a4660b02063613a2d2cb0
0016b1020325b1010425013e003eb10102060cb00a236542b00b2342b102
0325b1010425013f003fb10102060cb006236542b0072342b00116b10002
4354584523452018698a6323622020b0405058671b665961b02063b04023
61b00423421bb104004221215918012d2c2045b1004e2b442d2c4b51b140
4f2b505b582045b1014e2b208a8a4420b1400426616361b1014e2b44211b
23218a45b1014e2b208a234444592d2c4b51b1404f2b505b5845208ab040
6163601b23214559b1014e2b442d2c2345208a4523612064b04051b00425
20b0005323b040515a5ab1404f2b545a588a0c642364235358b140408a61
2063611b2063591b8a5963b1024e2b60442d2c012d2c002d2c05b10b0a43
2343650a2d2cb10a0b4323430b022d2cb002256366b00225b82000626023
622d2cb0022563b0206066b00225b82000626023622d2cb002256367b002
25b82000626023622d2cb002256366b02060b00225b82000626023622d2c
234ab1024e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b0022561
64b00343525821206459b1024e2b23b000505865592d2c238a4a234564b0
022564b002256164b00343525821206459b1014e2b23b000505865592d2c
20b003254ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb003
25b003258ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb003
2546b003254660b004252eb00425b00425b0042620b000505821b06a1bb0
6c592bb0032546b00325466061b08062208a2010233a232010233a2d2cb0
032547b003254760b0052547b0806361b00225b00625496323b005254ab0
80632058621b2159b0042646608a468a4660b02063612d2cb00426b00425
b00425b00426b06e2b208a2010233a232010233a2d2c2320b001545821b0
0225b1024e2bb0805020605920606020b001515821211b20b00551582120
6661b0402361b100032550b00325b00325505a5820b00325618a535821b0
00591b21591bb00754582066616523211b2121b000595959b1024e2b2d2c
b00225b004254ab0005358b0001b8a8a238ab00159b004254620666120b0
0526b0062649b00526b00526b0702b236165b02060206661b02061652d2c
b0022546208a20b000505821b1024e2b1b452321596165b00225103b2d2c
b0042620b802006220b80200638a236120b05d602bb00525118a128a2039
8a58ba005d10000004266356602b23212010204620b1024e2b23611b2321
208a201049b1024e2b593b2d2cba005d10000009256356602bb00525b005
25b00526b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba00
5d10000008266356602b20b0005258b0502bb00525b00525b00725b00725
b00525b0712bb0021738b00052b00225b001525a58b00425b0062549b003
25b00525496020b0405258211bb000525820b0025458b00425b00425b007
25b0072549b00217381bb00425b00425b00425b0062549b0021738595959
595921212121212d2cba005d1000000b256356602bb00725b00725b00625
b00625b00c25b00c25b00925b00825b06e2bb0041738b00725b00725b007
26b06d2bb00425b00425b00426b06d2bb0502bb00625b00625b00325b071
2bb00525b00525b00325b002173820b00625b00625b00525b0712b60b006
25b00625b0042565b0021738b00225b002256020b040535821b0406123b0
4061231bb8ffc05058b0406023b04060235959b00825b00825b00426b002
1738b00525b005258ab002173820b0005258b00625b0082549b00325b005
25496020b0405258211bb0005258b00625b00625b00625b00625b00b25b0
0b2549b0041738b00625b00625b00625b00625b00a25b00a25b00725b071
2bb0041738b00425b00425b00525b00725b00525b0712bb00217381bb004
25b00425b9ffc00002173859595921212121212121212d2cb00425b00325
87b00325b003258a20b000505821b0651bb068592b64b00425b0042506b0
0425b0042549202063b00325206351b1000325545b5821212321071b2063
b0022520636120b0532b8a63b00525b0052587b00425b004264ab0005058
6559b00426200146230046b00526200146230046b0001600b000234801b0
0023480020b0012348b00223480120b0012348b002234823b20200010823
38b2020001092338b1020107b00116592d2c23100d0c8a63238a636064b9
40000400635058b000381b3c592d2cb00625b00925b00925b00726b0762b
23b0005458051b0459b00425b00626b0772bb00525b00526b00525b00526
b0762bb0005458051b0459b0772b2d2cb00725b00a25b00a25b00826b076
2b8ab0005458051b0459b00525b00726b0772bb00625b00626b00625b006
26b0762b08b0772b2d2cb00725b00a25b00a25b00826b0762b8a8a08b004
25b00626b0772bb00525b00526b00525b00526b0762bb0005458051b0459
b0772b2d2cb00825b00b25b00b25b00926b0762bb00426b0042608b00525
b00726b0772bb00625b00626b00625b00626b0762b08b0772b2d2c03b003
25b003254ab00425b003254a02b00525b005264ab00526b005264ab00426
638a8a63612d2cb15d0e25602bb00c2611b0052612b00a2539b0072539b0
0a25b00a25b00925b07c2bb00050b00b25b00825b00a25b07c2bb0005054
58b00725b00b2587b00425b004250bb00a2510b00925c1b00225b002250b
b0072510b00625c11bb00725b00b25b00b25b9ffff00762bb00425b00425
0bb00725b00a25b0772bb00a25b00825b00825b9ffff00762bb00225b002
250bb00a25b00725b0772b59b00a2546b00a254660b0082546b008254660
b00625b006250bb00c25b00c25b00c2620b000505821b06a1bb06c592bb0
0425b004250bb00925b00925b0092620b000505821b06a1bb06c592b23b0
0a2546b00a25466061b0206323b0082546b00825466061b02063b1010c25
5458041b0559b00a262010b003253ab00626b006260bb0072620108a3ab1
0107265458041b0559b005262010b002253a8a8a0b232010233a2d2c23b0
015458b9000040001bb940000000598ab0015458b9000040001bb9400000
0059b07d2b2d2c8a8a080d8ab0015458b9000040001bb94000000059b07d
2b2d2c08b0015458b9000040001bb940000000590db07d2b2d2cb00426b0
0426080db00426b00426080db07d2b2d2c200146230046b00a43b00b438a
632362612d2cb0092bb006252eb005257dc5b00625b00525b0042520b000
505821b06a1bb06c592bb00525b00425b0032520b000505821b06a1bb06c
592b18b00825b00725b00625b00a25b06f2bb00625b00525b0042620b000
505821b0661bb068592bb00525b00425b0042620b000505821b0661bb068
592b54587db0042510b00325c5b0022510b00125c5b0052621b00526211b
b00626b00425b00325b00826b06f2b59b100024354587db00225b0822bb0
0525b0822b20206961b00443012361b06060206961b0206120b00826b008
268ab00217388a8a6120696161b00217381b2121212159182d2c4b52b101
0243535a58231020013c003c1b2121592d2c23b00225b00225535820b004
25583c1b3959b00160b8ffe91c592121212d2cb0022547b0022547548a20
201011b001608a2012b00161b0852b2d2cb0042547b002254754232012b0
01612320b0062620201011b00160b00626b0852b8a8ab0852b2d00000001
000000052666e0ec4ffe5f0f3cf5000b010000000000b798428000000000
d3ce556efffeffdc010000dc0000000c00020000000000000001000000dc
ffdc00240100fffefff70100000100000000000000000000000000000003
010000000000000001000029000000000000005200010000000301810031
0000000000020010002f008800000217031e000000000000002601ce0001
000000000000002700000001000000000001000d00270001000000000002
000700340001000000000003000d003b0001000000000004000d00480001
000000000005000c00550001000000000006000d00610001000000000007
002c006e0003000104090000004e009a0003000104090001001a00e80003
000104090002000e01020003000104090003001a01100003000104090004
001a012a0003000104090005001801440003000104090006001a015c0003
00010409000700580176000300010409000d038801ce000300010409000e
005205560003000108040000008205a800030001080400010012062a0003
0001080400020004063c0003000108040003001206400003000108040004
0012065200030001080400050018066400030001080400060012067c0003
0001080400070058068e0003000108040008003e06e60003000108040009
003e0724000300010804000b00380762000300010804000c0038079a0003
000110040000004e07d20003000110040001001208200003000110040002
000408320003000110040003001208360003000110040004001208480003
0001100400050018085a0003000110040006001208720003000110040007
00580884a920436f70797269676874205a484f4e47594920456c65637472
6f6e696320436f2e203230303156424153444c2b53696d53756e52656775
6c617256424153444c2b53696d53756e56424153444c2b53696d53756e56
657273696f6e20352e313556424153444c2b53696d53756e54726164656d
61726b206f66205a484f4e47594920456c656374726f6e696320436f2e2c
204265696a696e6700a900200043006f0070007900720069006700680074
0020005a0048004f004e00470059004900200045006c0065006300740072
006f006e0069006300200043006f002e0020003200300030003100560042
004100530044004c002b00530069006d00530075006e0052006500670075
006c0061007200560042004100530044004c002b00530069006d00530075
006e00560042004100530044004c002b00530069006d00530075006e0056
0065007200730069006f006e00200035002e003100350056004200410053
0044004c002b00530069006d00530075006e00540072006100640065006d
00610072006b0020006f00660020005a0048004f004e0047005900490020
0045006c0065006300740072006f006e0069006300200043006f002e002c
0020004200650069006a0069006e0067004d006900630072006f0073006f
0066007400200073007500700070006c00690065006400200066006f006e
0074002e00200059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e007400200074006f002000630072
0065006100740065002c00200064006900730070006c00610079002c0020
0061006e00640020007000720069006e007400200063006f006e00740065
006e00740020006100730020007000650072006d00690074007400650064
00200062007900200074006800650020006c006900630065006e00730065
0020007400650072006d00730020006f00720020007400650072006d0073
0020006f00660020007500730065002c0020006f00660020007400680065
0020004d006900630072006f0073006f00660074002000700072006f0064
007500630074002c00200073006500720076006900630065002c0020006f
007200200063006f006e00740065006e007400200069006e002000770068
0069006300680020007400680069007300200066006f006e007400200077
0061007300200069006e0063006c0075006400650064002e00200059006f
00750020006d006100790020006f006e006c007900200028006900290020
0065006d0062006500640020007400680069007300200066006f006e0074
00200069006e00200063006f006e00740065006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
006500200065006d00620065006400640069006e00670020007200650073
007400720069006300740069006f006e007300200069006e0063006c0075
00640065006400200069006e0020007400680069007300200066006f006e
0074003b00200061006e006400200028006900690029002000740065006d
0070006f0072006100720069006c007900200064006f0077006e006c006f
006100640020007400680069007300200066006f006e007400200074006f
002000610020007000720069006e0074006500720020006f00720020006f
00740068006500720020006f007500740070007500740020006400650076
00690063006500200074006f002000680065006c00700020007000720069
006e007400200063006f006e00740065006e0074002e00200041006e0079
0020006f0074006800650072002000750073006500200069007300200070
0072006f0068006900620069007400650064002e0068007400740070003a
002f002f007700770077002e006d006900630072006f0073006f00660074
002e0063006f006d002f007400790070006f006700720061007000680079
002f0066006f006e0074007300a900200043006f00700079007200690067
006800740020005a0048004f004e00470059004900200045006c00650063
00740072006f006e0069006300200043006f002e00200032003000300031
000d000a5b574f536570636e753153174eac4e2d66134e2d680775355b50
4fe1606f6280672f67099650516c53f863d04f9b30020056004200410053
0044004c002b5b8b4f535e3889c400560042004100530044004c002b5b8b
4f5300560042004100530044004c002b5b8b4f5300560065007200730069
006f006e00200035002e0031003500560042004100530044004c002b5b8b
4f5300540072006100640065006d00610072006b0020006f00660020005a
0048004f004e00470059004900200045006c0065006300740072006f006e
0069006300200043006f002e002c0020004200650069006a0069006e0067
004200650069006a0069006e00670020005a0068006f006e006700590069
00200045006c0065006300740072006f006e00690063007300200043006f
002e004200650069006a0069006e00670020005a0068006f006e00670059
006900200045006c0065006300740072006f006e00690063007300200043
006f002e0068007400740070003a002f002f007700770077002e007a0068
006f006e006700790069006300740073002e0063006f006d002e0063006e
0068007400740070003a002f002f007700770077002e007a0068006f006e
006700790069006300740073002e0063006f006d002e0063006e00a90020
0043006f00700079007200690067006800740020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e0020003200300030003100560042004100530044004c002b5b8b
4f535e3889c400560042004100530044004c002b5b8b4f53005600420041
00530044004c002b5b8b4f5300560065007200730069006f006e00200035
002e0031003500560042004100530044004c002b5b8b4f53005400720061
00640065006d00610072006b0020006f00660020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e002c0020004200650069006a0069006e0067000040ff5c331a1f
5b33401f5a33ff1f5932ff1f5831801f5731401f5630ff1f55302b1f542f
ff1f532d201f522e401f512eff1f502cff1f4f2c2b1f4e2a2b1f4d2aff1f
4c29ff1f4b28101f4a282b1f4928ff1f4827401f4727ff1f4626ff1f4525
ff1f4424801f4324801f42231a1f4123801f4023801f3f22401f3e22ff1f
3d22401f3c21ff1f3b20ff1f3a1fff1f391eff1f381d161f371d2b1f361d
ff1f351d401f341cff1f2e2d801f2d2b801f2c2b201f2519ff1f24081b19
5c23081a195c2219ff1f2116ff1f200c18165c1f170d1f1e17ff1f1d16ff
1f1c160d1f1b1b19005b181816005b1a1b19005b171816005b1519381638
5a0f1501ff1501134d1255404811ff1055125910590d4d0c55054d04550c
5904590f800e550b4d0a55074d0655011000550e590a5906590059094d08
55034d025508590259200250028002b002e002050340400501b901900054
2b4bb807ff524bb008505bb00188b02553b00188b040515ab00688b00055
5a5b58b101018e59858d8d001d424bb0905358b20300001d4259b1020243
5158b104038e5973002b002b2b2b002b002b002b002b2b2b2b2b002b002b
2b2b002b002b2b2b017374012b012b012b012b012b2b2b002b2b012b2b01
2b002b012b002b012b2b2b2b2b2b2b2b002b2b2b2b012b2b2b002b2b2b2b
2b2b012b2b2b002b2b2b2b2b2b012b2b2b2b2b2b002b2b2b2b2b2b2b2b18
00>
[165 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 0 2 <00050029ffed00e200cf00030019001d0021002500334017160123231818
0b1b1f221f00000b080e1a0e1e1e040b04002f2f12392f3333113311392f
3333113311392f3311333230313715333507363427173334271707153337
1707151417073523153515333533153335071533358744a2010110400117
0843081009010f93410e4493414543435819761d082b130a072d0b0e076e
1d09060f0b9a4040404046434300>RBAAAA+SimSun AddT42Char 

1 0 0 <> RBAAAA+SimSun AddT42Char 
RBAAAA+SimSun /CharStrings get begin
/g2 2 def
end
RBAAAA+SimSun /Encoding get
dup 49 /g2 put
pop
end
%ADOEndSubsetFont
/TXGBZG+SimSun /RBAAAA+SimSun findfont ct_VMDictPut
/TXGBZG+SimSun*1 
[49{/.notdef}rp /g2 206{/.notdef}rp]
TXGBZG+SimSun nf
TXGBZG+SimSun*1 [6.02887 4.52145 4.52145 -6.02887 0 0 ]msf
69.0495 200.344 mo
(1)sh
TXGBYU+SimSun*1 [6.02887 4.52145 4.52145 -6.02887 0 0 ]msf
75.0784 204.865 mo
(L)sh
TXGBYV+SimSun*1 [6.02887 4.52145 4.52145 -6.02887 0 0 ]msf
81.1072 209.386 mo
(\032)sh
148.818 153.259 mo
148.818 146.125 143.035 140.342 135.901 140.342 cv
128.767 140.342 122.984 146.125 122.984 153.259 cv
122.984 160.393 128.767 166.176 135.901 166.176 cv
143.035 166.176 148.818 160.393 148.818 153.259 cv
cp
@
TXGBYW+SimSun*1 [7.5 0 0 -7.5 0 0 ]msf
128.4 155.884 mo
(t)sh
TXGBYX+SimSun*1 [7.5 0 0 -7.5 0 0 ]msf
135.9 155.884 mo
(\204)sh
41.2127 153.259 mo
119.198 153.259 li
@
122.785 153.259 mo
121.722 153.06 119.995 152.462 118.8 151.765 cv
118.8 154.754 li
119.995 154.056 121.722 153.458 122.785 153.259 cv
f
262.205 181.606 mo
262.205 174.472 256.422 168.689 249.288 168.689 cv
242.154 168.689 236.371 174.472 236.371 181.606 cv
236.371 188.74 242.154 194.523 249.288 194.523 cv
256.422 194.523 262.205 188.74 262.205 181.606 cv
cp
@
%ADOBeginSubsetFont: SBAAAA+SimSun Initial
ct_T42Dict begin
-0.008 -0.141 1 0.859
 256 array 0 1 255 {1 index exch /.notdef put} for  /SBAAAA+SimSun
Type42DictBegin
[<00010000000c000c000c000c4f532f324fd9e4e2000000cc000000566376
742004ba01cd00000124000000ba6670676dc564b4f6000001e000000dee
676c7966404ef31500001d10000000c668656164eb87fd0d00000fd00000
003668686561020100d70000100800000024686d7478020000130000102c
0000000c6c6f63610000006300001038000000086d61787002e404d00000
1040000000206e616d65dc3b9b400000106000000aaa7072657051510fe7
00001b0c0000020467646972000000000000000000000000000100800190
0005000800800080000000100080008000000080000c0041000002010600
030101010101000000031000000000000000000000005a59454300400000
f0ff00dcffdc002400dc00248000000000000000000000b7fff800af0002
00af000200740002000000020000000200000002ffdfffff00b100000000
00020000000f001000060006000e00060006000600100006001000080010
000e00070007000e00090011000700190007000d0009000e000d00170009
0015000200090006000e0010001300160006001000080010000c000e0010
00060008000c00060008000e0009001100130007000a000f00190007000a
00060009000d000f00120017000600090013001600020009000b000e0000
404687868584838281807f7e7d7c7b7a797877767574737271706f6e6d6c
6b6a696867666564636261605f5e5d5c5b5a5958575655545351504f4e4d
4c4b4a49484746281f100a092c01b10b0a432343650a2d2c00b10a0b4323
430b2d2c01b00643b00743650a2d2cb04f2b20b0405158214b525845441b
2121591b2321b040b0042545b004254561648a63525845441b212159592d
2c00b00743b006430b2d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c2320b000508a8a64b10003255458b0401bb1010325
5458b005438b59b04f2b5923b0622b2321235865592d2cb108000c215460
432d2cb10c000c215460432d2c012047b0024320b8100062b81000635723
b8010062b8100063575a58b020606659482d2cb1000225b00225b0022553
b800352378b00225b0022560b020632020b00625236250588a21b0016023
1b2020b00625236252582321b001611b8a212321205959b8ffc11c60b020
6323212d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b12601885158b940
00020063b80400885458b202400243604259b94000040063b80800885458
b2028002436042595959595959b10002435458400a0540084009400c020d
021bb10102435458b2054008ba010000090100b30c010d011bb180024352
58b2054008b80180b109401bb2054008ba01800009014059b94000008088
55b94000020063b8040088555a58b30c000d011bb30c000d015959594242
4242422d2c45b1024e2b23b04f2b20b0405158214b5158b0022545b1014e
2b60591b2321b003254520648a63b0405358b1024e2b601b215959442d2c
20b00050205823651b2359b114148a7045b04f2b23b1610626602b8a58b0
05438b592358655923103a2d2cb003254963234660b04f2b23b00425b004
2549b0032563562060b062602bb003252010468a4660b02063613a2d2cb0
0016b1020325b1010425013e003eb10102060cb00a236542b00b2342b102
0325b1010425013f003fb10102060cb006236542b0072342b00116b10002
4354584523452018698a6323622020b0405058671b665961b02063b04023
61b00423421bb104004221215918012d2c2045b1004e2b442d2c4b51b140
4f2b505b582045b1014e2b208a8a4420b1400426616361b1014e2b44211b
23218a45b1014e2b208a234444592d2c4b51b1404f2b505b5845208ab040
6163601b23214559b1014e2b442d2c2345208a4523612064b04051b00425
20b0005323b040515a5ab1404f2b545a588a0c642364235358b140408a61
2063611b2063591b8a5963b1024e2b60442d2c012d2c002d2c05b10b0a43
2343650a2d2cb10a0b4323430b022d2cb002256366b00225b82000626023
622d2cb0022563b0206066b00225b82000626023622d2cb002256367b002
25b82000626023622d2cb002256366b02060b00225b82000626023622d2c
234ab1024e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b0022561
64b00343525821206459b1024e2b23b000505865592d2c238a4a234564b0
022564b002256164b00343525821206459b1014e2b23b000505865592d2c
20b003254ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb003
25b003258ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb003
2546b003254660b004252eb00425b00425b0042620b000505821b06a1bb0
6c592bb0032546b00325466061b08062208a2010233a232010233a2d2cb0
032547b003254760b0052547b0806361b00225b00625496323b005254ab0
80632058621b2159b0042646608a468a4660b02063612d2cb00426b00425
b00425b00426b06e2b208a2010233a232010233a2d2c2320b001545821b0
0225b1024e2bb0805020605920606020b001515821211b20b00551582120
6661b0402361b100032550b00325b00325505a5820b00325618a535821b0
00591b21591bb00754582066616523211b2121b000595959b1024e2b2d2c
b00225b004254ab0005358b0001b8a8a238ab00159b004254620666120b0
0526b0062649b00526b00526b0702b236165b02060206661b02061652d2c
b0022546208a20b000505821b1024e2b1b452321596165b00225103b2d2c
b0042620b802006220b80200638a236120b05d602bb00525118a128a2039
8a58ba005d10000004266356602b23212010204620b1024e2b23611b2321
208a201049b1024e2b593b2d2cba005d10000009256356602bb00525b005
25b00526b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba00
5d10000008266356602b20b0005258b0502bb00525b00525b00725b00725
b00525b0712bb0021738b00052b00225b001525a58b00425b0062549b003
25b00525496020b0405258211bb000525820b0025458b00425b00425b007
25b0072549b00217381bb00425b00425b00425b0062549b0021738595959
595921212121212d2cba005d1000000b256356602bb00725b00725b00625
b00625b00c25b00c25b00925b00825b06e2bb0041738b00725b00725b007
26b06d2bb00425b00425b00426b06d2bb0502bb00625b00625b00325b071
2bb00525b00525b00325b002173820b00625b00625b00525b0712b60b006
25b00625b0042565b0021738b00225b002256020b040535821b0406123b0
4061231bb8ffc05058b0406023b04060235959b00825b00825b00426b002
1738b00525b005258ab002173820b0005258b00625b0082549b00325b005
25496020b0405258211bb0005258b00625b00625b00625b00625b00b25b0
0b2549b0041738b00625b00625b00625b00625b00a25b00a25b00725b071
2bb0041738b00425b00425b00525b00725b00525b0712bb00217381bb004
25b00425b9ffc00002173859595921212121212121212d2cb00425b00325
87b00325b003258a20b000505821b0651bb068592b64b00425b0042506b0
0425b0042549202063b00325206351b1000325545b5821212321071b2063
b0022520636120b0532b8a63b00525b0052587b00425b004264ab0005058
6559b00426200146230046b00526200146230046b0001600b000234801b0
0023480020b0012348b00223480120b0012348b002234823b20200010823
38b2020001092338b1020107b00116592d2c23100d0c8a63238a636064b9
40000400635058b000381b3c592d2cb00625b00925b00925b00726b0762b
23b0005458051b0459b00425b00626b0772bb00525b00526b00525b00526
b0762bb0005458051b0459b0772b2d2cb00725b00a25b00a25b00826b076
2b8ab0005458051b0459b00525b00726b0772bb00625b00626b00625b006
26b0762b08b0772b2d2cb00725b00a25b00a25b00826b0762b8a8a08b004
25b00626b0772bb00525b00526b00525b00526b0762bb0005458051b0459
b0772b2d2cb00825b00b25b00b25b00926b0762bb00426b0042608b00525
b00726b0772bb00625b00626b00625b00626b0762b08b0772b2d2c03b003
25b003254ab00425b003254a02b00525b005264ab00526b005264ab00426
638a8a63612d2cb15d0e25602bb00c2611b0052612b00a2539b0072539b0
0a25b00a25b00925b07c2bb00050b00b25b00825b00a25b07c2bb0005054
58b00725b00b2587b00425b004250bb00a2510b00925c1b00225b002250b
b0072510b00625c11bb00725b00b25b00b25b9ffff00762bb00425b00425
0bb00725b00a25b0772bb00a25b00825b00825b9ffff00762bb00225b002
250bb00a25b00725b0772b59b00a2546b00a254660b0082546b008254660
b00625b006250bb00c25b00c25b00c2620b000505821b06a1bb06c592bb0
0425b004250bb00925b00925b0092620b000505821b06a1bb06c592b23b0
0a2546b00a25466061b0206323b0082546b00825466061b02063b1010c25
5458041b0559b00a262010b003253ab00626b006260bb0072620108a3ab1
0107265458041b0559b005262010b002253a8a8a0b232010233a2d2c23b0
015458b9000040001bb940000000598ab0015458b9000040001bb9400000
0059b07d2b2d2c8a8a080d8ab0015458b9000040001bb94000000059b07d
2b2d2c08b0015458b9000040001bb940000000590db07d2b2d2cb00426b0
0426080db00426b00426080db07d2b2d2c200146230046b00a43b00b438a
632362612d2cb0092bb006252eb005257dc5b00625b00525b0042520b000
505821b06a1bb06c592bb00525b00425b0032520b000505821b06a1bb06c
592b18b00825b00725b00625b00a25b06f2bb00625b00525b0042620b000
505821b0661bb068592bb00525b00425b0042620b000505821b0661bb068
592b54587db0042510b00325c5b0022510b00125c5b0052621b00526211b
b00626b00425b00325b00826b06f2b59b100024354587db00225b0822bb0
0525b0822b20206961b00443012361b06060206961b0206120b00826b008
268ab00217388a8a6120696161b00217381b2121212159182d2c4b52b101
0243535a58231020013c003c1b2121592d2c23b00225b00225535820b004
25583c1b3959b00160b8ffe91c592121212d2cb0022547b0022547548a20
201011b001608a2012b00161b0852b2d2cb0042547b002254754232012b0
01612320b0062620201011b00160b00626b0852b8a8ab0852b2d00000001
0000000526668169068c5f0f3cf5000b010000000000b798428000000000
d3ce556efffeffdc010000dc0000000c00020000000000000001000000dc
ffdc00240100fffefff70100000100000000000000000000000000000003
010000000000000001000013000000000000006300010000000301810031
0000000000020010002f008800000217031e000000000000002601ce0001
000000000000002700000001000000000001000d00270001000000000002
000700340001000000000003000d003b0001000000000004000d00480001
000000000005000c00550001000000000006000d00610001000000000007
002c006e0003000104090000004e009a0003000104090001001a00e80003
000104090002000e01020003000104090003001a01100003000104090004
001a012a0003000104090005001801440003000104090006001a015c0003
00010409000700580176000300010409000d038801ce000300010409000e
005205560003000108040000008205a800030001080400010012062a0003
0001080400020004063c0003000108040003001206400003000108040004
0012065200030001080400050018066400030001080400060012067c0003
0001080400070058068e0003000108040008003e06e60003000108040009
003e0724000300010804000b00380762000300010804000c0038079a0003
000110040000004e07d20003000110040001001208200003000110040002
000408320003000110040003001208360003000110040004001208480003
0001100400050018085a0003000110040006001208720003000110040007
00580884a920436f70797269676874205a484f4e47594920456c65637472
6f6e696320436f2e20323030315542515053572b53696d53756e52656775
6c61725542515053572b53696d53756e5542515053572b53696d53756e56
657273696f6e20352e31355542515053572b53696d53756e54726164656d
61726b206f66205a484f4e47594920456c656374726f6e696320436f2e2c
204265696a696e6700a900200043006f0070007900720069006700680074
0020005a0048004f004e00470059004900200045006c0065006300740072
006f006e0069006300200043006f002e0020003200300030003100550042
0051005000530057002b00530069006d00530075006e0052006500670075
006c00610072005500420051005000530057002b00530069006d00530075
006e005500420051005000530057002b00530069006d00530075006e0056
0065007200730069006f006e00200035002e003100350055004200510050
00530057002b00530069006d00530075006e00540072006100640065006d
00610072006b0020006f00660020005a0048004f004e0047005900490020
0045006c0065006300740072006f006e0069006300200043006f002e002c
0020004200650069006a0069006e0067004d006900630072006f0073006f
0066007400200073007500700070006c00690065006400200066006f006e
0074002e00200059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e007400200074006f002000630072
0065006100740065002c00200064006900730070006c00610079002c0020
0061006e00640020007000720069006e007400200063006f006e00740065
006e00740020006100730020007000650072006d00690074007400650064
00200062007900200074006800650020006c006900630065006e00730065
0020007400650072006d00730020006f00720020007400650072006d0073
0020006f00660020007500730065002c0020006f00660020007400680065
0020004d006900630072006f0073006f00660074002000700072006f0064
007500630074002c00200073006500720076006900630065002c0020006f
007200200063006f006e00740065006e007400200069006e002000770068
0069006300680020007400680069007300200066006f006e007400200077
0061007300200069006e0063006c0075006400650064002e00200059006f
00750020006d006100790020006f006e006c007900200028006900290020
0065006d0062006500640020007400680069007300200066006f006e0074
00200069006e00200063006f006e00740065006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
006500200065006d00620065006400640069006e00670020007200650073
007400720069006300740069006f006e007300200069006e0063006c0075
00640065006400200069006e0020007400680069007300200066006f006e
0074003b00200061006e006400200028006900690029002000740065006d
0070006f0072006100720069006c007900200064006f0077006e006c006f
006100640020007400680069007300200066006f006e007400200074006f
002000610020007000720069006e0074006500720020006f00720020006f
00740068006500720020006f007500740070007500740020006400650076
00690063006500200074006f002000680065006c00700020007000720069
006e007400200063006f006e00740065006e0074002e00200041006e0079
0020006f0074006800650072002000750073006500200069007300200070
0072006f0068006900620069007400650064002e0068007400740070003a
002f002f007700770077002e006d006900630072006f0073006f00660074
002e0063006f006d002f007400790070006f006700720061007000680079
002f0066006f006e0074007300a900200043006f00700079007200690067
006800740020005a0048004f004e00470059004900200045006c00650063
00740072006f006e0069006300200043006f002e00200032003000300031
000d000a5b574f536570636e753153174eac4e2d66134e2d680775355b50
4fe1606f6280672f67099650516c53f863d04f9b30020055004200510050
00530057002b5b8b4f535e3889c4005500420051005000530057002b5b8b
4f53005500420051005000530057002b5b8b4f5300560065007200730069
006f006e00200035002e00310035005500420051005000530057002b5b8b
4f5300540072006100640065006d00610072006b0020006f00660020005a
0048004f004e00470059004900200045006c0065006300740072006f006e
0069006300200043006f002e002c0020004200650069006a0069006e0067
004200650069006a0069006e00670020005a0068006f006e006700590069
00200045006c0065006300740072006f006e00690063007300200043006f
002e004200650069006a0069006e00670020005a0068006f006e00670059
006900200045006c0065006300740072006f006e00690063007300200043
006f002e0068007400740070003a002f002f007700770077002e007a0068
006f006e006700790069006300740073002e0063006f006d002e0063006e
0068007400740070003a002f002f007700770077002e007a0068006f006e
006700790069006300740073002e0063006f006d002e0063006e00a90020
0043006f00700079007200690067006800740020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e00200032003000300031005500420051005000530057002b5b8b
4f535e3889c4005500420051005000530057002b5b8b4f53005500420051
005000530057002b5b8b4f5300560065007200730069006f006e00200035
002e00310035005500420051005000530057002b5b8b4f53005400720061
00640065006d00610072006b0020006f00660020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e002c0020004200650069006a0069006e0067000040ff5c331a1f
5b33401f5a33ff1f5932ff1f5831801f5731401f5630ff1f55302b1f542f
ff1f532d201f522e401f512eff1f502cff1f4f2c2b1f4e2a2b1f4d2aff1f
4c29ff1f4b28101f4a282b1f4928ff1f4827401f4727ff1f4626ff1f4525
ff1f4424801f4324801f42231a1f4123801f4023801f3f22401f3e22ff1f
3d22401f3c21ff1f3b20ff1f3a1fff1f391eff1f381d161f371d2b1f361d
ff1f351d401f341cff1f2e2d801f2d2b801f2c2b201f2519ff1f24081b19
5c23081a195c2219ff1f2116ff1f200c18165c1f170d1f1e17ff1f1d16ff
1f1c160d1f1b1b19005b181816005b1a1b19005b171816005b1519381638
5a0f1501ff1501134d1255404811ff1055125910590d4d0c55054d04550c
5904590f800e550b4d0a55074d0655011000550e590a5906590059094d08
55034d025508590259200250028002b002e002050340400501b901900054
2b4bb807ff524bb008505bb00188b02553b00188b040515ab00688b00055
5a5b58b101018e59858d8d001d424bb0905358b20300001d4259b1020243
5158b104038e5973002b002b2b2b002b002b002b002b2b2b2b2b002b002b
2b2b002b002b2b2b017374012b012b012b012b012b2b2b002b2b012b2b01
2b002b012b002b012b2b2b2b2b2b2b2b002b2b2b2b012b2b2b002b2b2b2b
2b2b012b2b2b002b2b2b2b2b2b012b2b2b2b2b2b002b2b2b2b2b2b2b2b18
00>
[199 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 0 2 <00030013ffe600f600d3000400210035001b400b2b0518140d0900002f05
2f002f2f12392f3333323211333031371617363727170706073337172306
071617150607262706072736372627060727360735342717071537342717
071507363506072736850a19100a3a190a080a4d0d13210a162322100721
16222a02271f1b040e12031c63011709220117090e011f090b05903c241e
42430c0513190d13402c250204010d131c2111031425303a211902364d3d
14150b075a0c69240b08d1082931110e0f05>SBAAAA+SimSun AddT42Char 

1 0 0 <> SBAAAA+SimSun AddT42Char 
SBAAAA+SimSun /CharStrings get begin
/g2 2 def
end
SBAAAA+SimSun /Encoding get
dup 54 /g2 put
pop
end
%ADOEndSubsetFont
/TXGBZH+SimSun /SBAAAA+SimSun findfont ct_VMDictPut
/TXGBZH+SimSun*1 
[54{/.notdef}rp /g2 201{/.notdef}rp]
TXGBZH+SimSun nf
TXGBZH+SimSun*1 [7.5 0 0 -7.5 0 0 ]msf
241.786 184.231 mo
(6)sh
%ADOBeginSubsetFont: TBAAAA+SimSun Initial
ct_T42Dict begin
-0.008 -0.141 1 0.859
 256 array 0 1 255 {1 index exch /.notdef put} for  /TBAAAA+SimSun
Type42DictBegin
[<00010000000c000c000c000c4f532f324fd9e4e2000000cc000000566376
742004ba01cd00000124000000ba6670676dc564b4f6000001e000000dee
676c7966fead79f000001d100000005c68656164eb87fd0d00000fd00000
003668686561020100d70000100800000024686d7478020000090000102c
0000000c6c6f63610000002e00001038000000086d61787002e404d00000
1040000000206e616d6500dfb8cb0000106000000aaa7072657051510fe7
00001b0c0000020467646972000000000000000000000000000100800190
0005000800800080000000100080008000000080000c0041000002010600
030101010101000000031000000000000000000000005a59454300400000
f0ff00dcffdc002400dc00248000000000000000000000b7fff800af0002
00af000200740002000000020000000200000002ffdfffff00b100000000
00020000000f001000060006000e00060006000600100006001000080010
000e00070007000e00090011000700190007000d0009000e000d00170009
0015000200090006000e0010001300160006001000080010000c000e0010
00060008000c00060008000e0009001100130007000a000f00190007000a
00060009000d000f00120017000600090013001600020009000b000e0000
404687868584838281807f7e7d7c7b7a797877767574737271706f6e6d6c
6b6a696867666564636261605f5e5d5c5b5a5958575655545351504f4e4d
4c4b4a49484746281f100a092c01b10b0a432343650a2d2c00b10a0b4323
430b2d2c01b00643b00743650a2d2cb04f2b20b0405158214b525845441b
2121591b2321b040b0042545b004254561648a63525845441b212159592d
2c00b00743b006430b2d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c2320b000508a8a64b10003255458b0401bb1010325
5458b005438b59b04f2b5923b0622b2321235865592d2cb108000c215460
432d2cb10c000c215460432d2c012047b0024320b8100062b81000635723
b8010062b8100063575a58b020606659482d2cb1000225b00225b0022553
b800352378b00225b0022560b020632020b00625236250588a21b0016023
1b2020b00625236252582321b001611b8a212321205959b8ffc11c60b020
6323212d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b12601885158b940
00020063b80400885458b202400243604259b94000040063b80800885458
b2028002436042595959595959b10002435458400a0540084009400c020d
021bb10102435458b2054008ba010000090100b30c010d011bb180024352
58b2054008b80180b109401bb2054008ba01800009014059b94000008088
55b94000020063b8040088555a58b30c000d011bb30c000d015959594242
4242422d2c45b1024e2b23b04f2b20b0405158214b5158b0022545b1014e
2b60591b2321b003254520648a63b0405358b1024e2b601b215959442d2c
20b00050205823651b2359b114148a7045b04f2b23b1610626602b8a58b0
05438b592358655923103a2d2cb003254963234660b04f2b23b00425b004
2549b0032563562060b062602bb003252010468a4660b02063613a2d2cb0
0016b1020325b1010425013e003eb10102060cb00a236542b00b2342b102
0325b1010425013f003fb10102060cb006236542b0072342b00116b10002
4354584523452018698a6323622020b0405058671b665961b02063b04023
61b00423421bb104004221215918012d2c2045b1004e2b442d2c4b51b140
4f2b505b582045b1014e2b208a8a4420b1400426616361b1014e2b44211b
23218a45b1014e2b208a234444592d2c4b51b1404f2b505b5845208ab040
6163601b23214559b1014e2b442d2c2345208a4523612064b04051b00425
20b0005323b040515a5ab1404f2b545a588a0c642364235358b140408a61
2063611b2063591b8a5963b1024e2b60442d2c012d2c002d2c05b10b0a43
2343650a2d2cb10a0b4323430b022d2cb002256366b00225b82000626023
622d2cb0022563b0206066b00225b82000626023622d2cb002256367b002
25b82000626023622d2cb002256366b02060b00225b82000626023622d2c
234ab1024e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b0022561
64b00343525821206459b1024e2b23b000505865592d2c238a4a234564b0
022564b002256164b00343525821206459b1014e2b23b000505865592d2c
20b003254ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb003
25b003258ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb003
2546b003254660b004252eb00425b00425b0042620b000505821b06a1bb0
6c592bb0032546b00325466061b08062208a2010233a232010233a2d2cb0
032547b003254760b0052547b0806361b00225b00625496323b005254ab0
80632058621b2159b0042646608a468a4660b02063612d2cb00426b00425
b00425b00426b06e2b208a2010233a232010233a2d2c2320b001545821b0
0225b1024e2bb0805020605920606020b001515821211b20b00551582120
6661b0402361b100032550b00325b00325505a5820b00325618a535821b0
00591b21591bb00754582066616523211b2121b000595959b1024e2b2d2c
b00225b004254ab0005358b0001b8a8a238ab00159b004254620666120b0
0526b0062649b00526b00526b0702b236165b02060206661b02061652d2c
b0022546208a20b000505821b1024e2b1b452321596165b00225103b2d2c
b0042620b802006220b80200638a236120b05d602bb00525118a128a2039
8a58ba005d10000004266356602b23212010204620b1024e2b23611b2321
208a201049b1024e2b593b2d2cba005d10000009256356602bb00525b005
25b00526b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba00
5d10000008266356602b20b0005258b0502bb00525b00525b00725b00725
b00525b0712bb0021738b00052b00225b001525a58b00425b0062549b003
25b00525496020b0405258211bb000525820b0025458b00425b00425b007
25b0072549b00217381bb00425b00425b00425b0062549b0021738595959
595921212121212d2cba005d1000000b256356602bb00725b00725b00625
b00625b00c25b00c25b00925b00825b06e2bb0041738b00725b00725b007
26b06d2bb00425b00425b00426b06d2bb0502bb00625b00625b00325b071
2bb00525b00525b00325b002173820b00625b00625b00525b0712b60b006
25b00625b0042565b0021738b00225b002256020b040535821b0406123b0
4061231bb8ffc05058b0406023b04060235959b00825b00825b00426b002
1738b00525b005258ab002173820b0005258b00625b0082549b00325b005
25496020b0405258211bb0005258b00625b00625b00625b00625b00b25b0
0b2549b0041738b00625b00625b00625b00625b00a25b00a25b00725b071
2bb0041738b00425b00425b00525b00725b00525b0712bb00217381bb004
25b00425b9ffc00002173859595921212121212121212d2cb00425b00325
87b00325b003258a20b000505821b0651bb068592b64b00425b0042506b0
0425b0042549202063b00325206351b1000325545b5821212321071b2063
b0022520636120b0532b8a63b00525b0052587b00425b004264ab0005058
6559b00426200146230046b00526200146230046b0001600b000234801b0
0023480020b0012348b00223480120b0012348b002234823b20200010823
38b2020001092338b1020107b00116592d2c23100d0c8a63238a636064b9
40000400635058b000381b3c592d2cb00625b00925b00925b00726b0762b
23b0005458051b0459b00425b00626b0772bb00525b00526b00525b00526
b0762bb0005458051b0459b0772b2d2cb00725b00a25b00a25b00826b076
2b8ab0005458051b0459b00525b00726b0772bb00625b00626b00625b006
26b0762b08b0772b2d2cb00725b00a25b00a25b00826b0762b8a8a08b004
25b00626b0772bb00525b00526b00525b00526b0762bb0005458051b0459
b0772b2d2cb00825b00b25b00b25b00926b0762bb00426b0042608b00525
b00726b0772bb00625b00626b00625b00626b0762b08b0772b2d2c03b003
25b003254ab00425b003254a02b00525b005264ab00526b005264ab00426
638a8a63612d2cb15d0e25602bb00c2611b0052612b00a2539b0072539b0
0a25b00a25b00925b07c2bb00050b00b25b00825b00a25b07c2bb0005054
58b00725b00b2587b00425b004250bb00a2510b00925c1b00225b002250b
b0072510b00625c11bb00725b00b25b00b25b9ffff00762bb00425b00425
0bb00725b00a25b0772bb00a25b00825b00825b9ffff00762bb00225b002
250bb00a25b00725b0772b59b00a2546b00a254660b0082546b008254660
b00625b006250bb00c25b00c25b00c2620b000505821b06a1bb06c592bb0
0425b004250bb00925b00925b0092620b000505821b06a1bb06c592b23b0
0a2546b00a25466061b0206323b0082546b00825466061b02063b1010c25
5458041b0559b00a262010b003253ab00626b006260bb0072620108a3ab1
0107265458041b0559b005262010b002253a8a8a0b232010233a2d2c23b0
015458b9000040001bb940000000598ab0015458b9000040001bb9400000
0059b07d2b2d2c8a8a080d8ab0015458b9000040001bb94000000059b07d
2b2d2c08b0015458b9000040001bb940000000590db07d2b2d2cb00426b0
0426080db00426b00426080db07d2b2d2c200146230046b00a43b00b438a
632362612d2cb0092bb006252eb005257dc5b00625b00525b0042520b000
505821b06a1bb06c592bb00525b00425b0032520b000505821b06a1bb06c
592b18b00825b00725b00625b00a25b06f2bb00625b00525b0042620b000
505821b0661bb068592bb00525b00425b0042620b000505821b0661bb068
592b54587db0042510b00325c5b0022510b00125c5b0052621b00526211b
b00626b00425b00325b00826b06f2b59b100024354587db00225b0822bb0
0525b0822b20206961b00443012361b06060206961b0206120b00826b008
268ab00217388a8a6120696161b00217381b2121212159182d2c4b52b101
0243535a58231020013c003c1b2121592d2c23b00225b00225535820b004
25583c1b3959b00160b8ffe91c592121212d2cb0022547b0022547548a20
201011b001608a2012b00161b0852b2d2cb0042547b002254754232012b0
01612320b0062620201011b00160b00626b0852b8a8ab0852b2d00000001
000000052666c15dc6745f0f3cf5000b010000000000b798428000000000
d3ce556efffeffdc010000dc0000000c00020000000000000001000000dc
ffdc00240100fffefff70100000100000000000000000000000000000003
010000000000000001000009000000000000002e00010000000301810031
0000000000020010002f008800000217031e000000000000002601ce0001
000000000000002700000001000000000001000d00270001000000000002
000700340001000000000003000d003b0001000000000004000d00480001
000000000005000c00550001000000000006000d00610001000000000007
002c006e0003000104090000004e009a0003000104090001001a00e80003
000104090002000e01020003000104090003001a01100003000104090004
001a012a0003000104090005001801440003000104090006001a015c0003
00010409000700580176000300010409000d038801ce000300010409000e
005205560003000108040000008205a800030001080400010012062a0003
0001080400020004063c0003000108040003001206400003000108040004
0012065200030001080400050018066400030001080400060012067c0003
0001080400070058068e0003000108040008003e06e60003000108040009
003e0724000300010804000b00380762000300010804000c0038079a0003
000110040000004e07d20003000110040001001208200003000110040002
000408320003000110040003001208360003000110040004001208480003
0001100400050018085a0003000110040006001208720003000110040007
00580884a920436f70797269676874205a484f4e47594920456c65637472
6f6e696320436f2e20323030314e4e575956572b53696d53756e52656775
6c61724e4e575956572b53696d53756e4e4e575956572b53696d53756e56
657273696f6e20352e31354e4e575956572b53696d53756e54726164656d
61726b206f66205a484f4e47594920456c656374726f6e696320436f2e2c
204265696a696e6700a900200043006f0070007900720069006700680074
0020005a0048004f004e00470059004900200045006c0065006300740072
006f006e0069006300200043006f002e00200032003000300031004e004e
0057005900560057002b00530069006d00530075006e0052006500670075
006c00610072004e004e0057005900560057002b00530069006d00530075
006e004e004e0057005900560057002b00530069006d00530075006e0056
0065007200730069006f006e00200035002e00310035004e004e00570059
00560057002b00530069006d00530075006e00540072006100640065006d
00610072006b0020006f00660020005a0048004f004e0047005900490020
0045006c0065006300740072006f006e0069006300200043006f002e002c
0020004200650069006a0069006e0067004d006900630072006f0073006f
0066007400200073007500700070006c00690065006400200066006f006e
0074002e00200059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e007400200074006f002000630072
0065006100740065002c00200064006900730070006c00610079002c0020
0061006e00640020007000720069006e007400200063006f006e00740065
006e00740020006100730020007000650072006d00690074007400650064
00200062007900200074006800650020006c006900630065006e00730065
0020007400650072006d00730020006f00720020007400650072006d0073
0020006f00660020007500730065002c0020006f00660020007400680065
0020004d006900630072006f0073006f00660074002000700072006f0064
007500630074002c00200073006500720076006900630065002c0020006f
007200200063006f006e00740065006e007400200069006e002000770068
0069006300680020007400680069007300200066006f006e007400200077
0061007300200069006e0063006c0075006400650064002e00200059006f
00750020006d006100790020006f006e006c007900200028006900290020
0065006d0062006500640020007400680069007300200066006f006e0074
00200069006e00200063006f006e00740065006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
006500200065006d00620065006400640069006e00670020007200650073
007400720069006300740069006f006e007300200069006e0063006c0075
00640065006400200069006e0020007400680069007300200066006f006e
0074003b00200061006e006400200028006900690029002000740065006d
0070006f0072006100720069006c007900200064006f0077006e006c006f
006100640020007400680069007300200066006f006e007400200074006f
002000610020007000720069006e0074006500720020006f00720020006f
00740068006500720020006f007500740070007500740020006400650076
00690063006500200074006f002000680065006c00700020007000720069
006e007400200063006f006e00740065006e0074002e00200041006e0079
0020006f0074006800650072002000750073006500200069007300200070
0072006f0068006900620069007400650064002e0068007400740070003a
002f002f007700770077002e006d006900630072006f0073006f00660074
002e0063006f006d002f007400790070006f006700720061007000680079
002f0066006f006e0074007300a900200043006f00700079007200690067
006800740020005a0048004f004e00470059004900200045006c00650063
00740072006f006e0069006300200043006f002e00200032003000300031
000d000a5b574f536570636e753153174eac4e2d66134e2d680775355b50
4fe1606f6280672f67099650516c53f863d04f9b3002004e004e00570059
00560057002b5b8b4f535e3889c4004e004e0057005900560057002b5b8b
4f53004e004e0057005900560057002b5b8b4f5300560065007200730069
006f006e00200035002e00310035004e004e0057005900560057002b5b8b
4f5300540072006100640065006d00610072006b0020006f00660020005a
0048004f004e00470059004900200045006c0065006300740072006f006e
0069006300200043006f002e002c0020004200650069006a0069006e0067
004200650069006a0069006e00670020005a0068006f006e006700590069
00200045006c0065006300740072006f006e00690063007300200043006f
002e004200650069006a0069006e00670020005a0068006f006e00670059
006900200045006c0065006300740072006f006e00690063007300200043
006f002e0068007400740070003a002f002f007700770077002e007a0068
006f006e006700790069006300740073002e0063006f006d002e0063006e
0068007400740070003a002f002f007700770077002e007a0068006f006e
006700790069006300740073002e0063006f006d002e0063006e00a90020
0043006f00700079007200690067006800740020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e00200032003000300031004e004e0057005900560057002b5b8b
4f535e3889c4004e004e0057005900560057002b5b8b4f53004e004e0057
005900560057002b5b8b4f5300560065007200730069006f006e00200035
002e00310035004e004e0057005900560057002b5b8b4f53005400720061
00640065006d00610072006b0020006f00660020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e002c0020004200650069006a0069006e0067000040ff5c331a1f
5b33401f5a33ff1f5932ff1f5831801f5731401f5630ff1f55302b1f542f
ff1f532d201f522e401f512eff1f502cff1f4f2c2b1f4e2a2b1f4d2aff1f
4c29ff1f4b28101f4a282b1f4928ff1f4827401f4727ff1f4626ff1f4525
ff1f4424801f4324801f42231a1f4123801f4023801f3f22401f3e22ff1f
3d22401f3c21ff1f3b20ff1f3a1fff1f391eff1f381d161f371d2b1f361d
ff1f351d401f341cff1f2e2d801f2d2b801f2c2b201f2519ff1f24081b19
5c23081a195c2219ff1f2116ff1f200c18165c1f170d1f1e17ff1f1d16ff
1f1c160d1f1b1b19005b181816005b1a1b19005b171816005b1519381638
5a0f1501ff1501134d1255404811ff1055125910590d4d0c55054d04550c
5904590f800e550b4d0a55074d0655011000550e590a5906590059094d08
55034d025508590259200250028002b002e002050340400501b901900054
2b4bb807ff524bb008505bb00188b02553b00188b040515ab00688b00055
5a5b58b101018e59858d8d001d424bb0905358b20300001d4259b1020243
5158b104038e5973002b002b2b2b002b002b002b002b2b2b2b2b002b002b
2b2b002b002b2b2b017374012b012b012b012b012b2b2b002b2b012b2b01
2b002b012b002b012b2b2b2b2b2b2b2b002b2b2b2b012b2b2b002b2b2b2b
2b2b012b2b2b002b2b2b2b2b2b012b2b2b2b2b2b002b2b2b2b2b2b2b2b18
00>
[93 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 0 2 <00010009ffef00f500c800170008b10111002f2f30313737161617161617
1522072e0227060607273636373626490925100b0a35241109192215090e
3435022d350b0319bf090d1f2121460b040d132d2e222e4922042351330c
1200>TBAAAA+SimSun AddT42Char 

1 0 0 <> TBAAAA+SimSun AddT42Char 
TBAAAA+SimSun /CharStrings get begin
/g2 2 def
end
TBAAAA+SimSun /Encoding get
dup 101 /g2 put
pop
end
%ADOEndSubsetFont
/TXGBZI+SimSun /TBAAAA+SimSun findfont ct_VMDictPut
/TXGBZI+SimSun*1 
[101{/.notdef}rp /g2 154{/.notdef}rp]
TXGBZI+SimSun nf
TXGBZI+SimSun*1 [7.5 0 0 -7.5 0 0 ]msf
249.286 184.231 mo
(e)sh
148.626 156.44 mo
233.047 177.546 li
@
236.534 178.417 mo
235.549 177.965 234.015 176.964 233.022 175.996 cv
232.296 178.902 li
233.628 178.514 235.452 178.353 236.534 178.417 cv
f
gsave
377.94 201.728 mo
347.411 201.728 li
345.21 201.728 343.426 203.512 343.426 205.713 cv
343.426 214.192 li
343.426 216.393 345.21 218.177 347.411 218.177 cv
377.94 218.177 li
380.141 218.177 381.925 216.393 381.925 214.192 cv
381.925 205.713 li
381.925 203.512 380.141 201.728 377.94 201.728 cv
cp
clp
324.171 226.404 mo
401.179 226.404 li
401.179 193.501 li
324.171 193.501 li
cp
level3{
gsave
clp
[.77008 0 0 -.32903 324.171 226.404 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.77008 0 0 -.32903 324.171 226.404 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
grestore
377.94 201.728 mo
347.411 201.728 li
345.21 201.728 343.426 203.512 343.426 205.713 cv
343.426 214.192 li
343.426 216.393 345.21 218.177 347.411 218.177 cv
377.94 218.177 li
380.141 218.177 381.925 216.393 381.925 214.192 cv
381.925 205.713 li
381.925 203.512 380.141 201.728 377.94 201.728 cv
cp
@
TXGBZD+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
346.922 213.627 mo
(\340)sh
TXGBYZ+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
357.422 213.627 mo
(\017)sh
TXGBZA+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
367.922 213.627 mo
(\021)sh
262.042 184.795 mo
339.739 204.225 li
@
343.226 205.098 mo
342.241 204.645 340.708 203.644 339.715 202.675 cv
338.988 205.582 li
340.32 205.194 342.145 205.033 343.226 205.098 cv
f
%ADOBeginSubsetFont: MBAAAA+CMMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
TXGBZB+CMMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/less <1C60D8A8C9B5822BBFFC89715034B8A68FE7DBB788312B3CD19FE0B9A
6F7CA7C4EC0A3CAA106B6A01836A625E853DED91AFD6BF0882A4DEFEAB7CE667
01FE489BA3EE9DF32B03B02FDE31EFE8D2EA31F3B6336644639B320C0F5DEB58
C8B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
TXGBZB+CMMI7 /Encoding get
dup 60 /less put
pop
%ADOEndSubsetFont
/TXGBZB+CMMI7*1 
[60{/.notdef}rp /less /.notdef /greater 193{/.notdef}rp]
TXGBZB+CMMI7 nf
TXGBZB+CMMI7*1 [7.29285 1.82362 1.82362 -7.29285 0 0 ]msf
285.733 199.536 mo
(<)sh
%ADOBeginSubsetFont: NBAAAA+CMR7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
TXGBZC+CMR7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/zero <1C60D8A8C9B7E2CEA7B240FEF602C0A65C384F7D9F85D89DA8B00ED99
C515D758A8E52DC86F382FB688F61317580A66E24517AC4B674C7F287697FD9E
B76D1A8A475F5845B03AF89A501A6DB631BF28FBA18A499E479A1BFC174F26C9
55CA64A7BFA811EED6669B69DDEBB8700FD4E8343040166E083D8F9355C627C9
603D5> |-
/one <1C60D8A8C9B7E2CE5B62E9FEEC2E64DB4DF57A0DEE8F2DC4BC1D285E2D
6E93583C8BA769F966BA0D2874BA4F6692804A12EE154BF6C4128EE336963B1B
369FC937E51FD440B01114006718C9CD9EDADE925291DDB3291CFBE83284B576
2DA660F3B8EE1736383DFDEEBA0BD582FD6608113CEA73> |-
systemdict /gcheck known {setglobal} if end {end} if
end
TXGBZC+CMR7 /Encoding get
dup 48 /zero put
dup 49 /one put
pop
%ADOEndSubsetFont
/TXGBZC+CMR7*1 
[48{/.notdef}rp /zero /one /two 2{/.notdef}rp /five 202{/.notdef}rp]
TXGBZC+CMR7 nf
TXGBZC+CMR7*1 [7.29285 1.82362 1.82362 -7.29285 0 0 ]msf
294.615 201.757 mo
(10000)
[4.15253 1.03836 4.15253 1.03839 4.15253 1.03836 4.15253 1.03836 0 0 ]xysh
gsave
377.94 145.034 mo
347.411 145.034 li
345.21 145.034 343.426 146.819 343.426 149.019 cv
343.426 157.499 li
343.426 159.7 345.21 161.484 347.411 161.484 cv
377.94 161.484 li
380.141 161.484 381.925 159.7 381.925 157.499 cv
381.925 149.019 li
381.925 146.819 380.141 145.034 377.94 145.034 cv
cp
clp
324.171 169.711 mo
401.179 169.711 li
401.179 136.808 li
324.171 136.808 li
cp
level3{
gsave
clp
[.77008 0 0 -.32903 324.171 169.711 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.77008 0 0 -.32903 324.171 169.711 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
grestore
377.94 145.034 mo
347.411 145.034 li
345.21 145.034 343.426 146.819 343.426 149.019 cv
343.426 157.499 li
343.426 159.7 345.21 161.484 347.411 161.484 cv
377.94 161.484 li
380.141 161.484 381.925 159.7 381.925 157.499 cv
381.925 149.019 li
381.925 146.819 380.141 145.034 377.94 145.034 cv
cp
@
TXGBYY+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
346.922 156.934 mo
(\011)sh
TXGBYZ+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
357.422 156.934 mo
(\017)sh
TXGBZA+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
367.922 156.934 mo
(\021)sh
262.042 178.417 mo
339.739 158.986 li
@
343.226 158.114 mo
342.145 158.179 340.32 158.018 338.988 157.63 cv
339.715 160.536 li
340.708 159.568 342.241 158.566 343.226 158.114 cv
f
%ADOBeginSubsetFont: PBAAAA+CMSY7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
TXGBZE+CMSY7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/greaterequal <1C60D8A8C9B5822B04DC4CB26BA7948F510AAA2B960696712
80DF4EF03B0EC3C2A458083F585CC635C6726E1692F49FA9CDA5A236FD266D16
A039EBB7B882B68E2580D2E8B28BB9F7E31E27FEC13F25159713BA3F24C8FEA2
D361458737C2897B14B48D3102B301A62CE70C6EC9F98AA0B8187E930BB81287
F4C1A17FE8C98> |-
systemdict /gcheck known {setglobal} if end {end} if
end
TXGBZE+CMSY7 /Encoding get
dup 21 /greaterequal put
pop
%ADOEndSubsetFont
/TXGBZE+CMSY7*1 
[20{/.notdef}rp /lessequal /greaterequal 234{/.notdef}rp]
TXGBZE+CMSY7 nf
TXGBZE+CMSY7*1 [7.29285 -1.82362 -1.82362 -7.29285 0 0 ]msf
286.57 167.023 mo
(\025)sh
%ADOBeginSubsetFont: NBAAAA+CMR7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
TXGBZC+CMR7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7E2CEA7BEEFBD14AB8DF8CEA67D1B763E52ED51307E29
5A37DDE297DA459BE51B49EE11D0E205CF2263FD17827490680BA98FA0C5E982
DDE772750002A75B9868335940F176744F3EB008997ED6790000D7B3BA89101A
3D41944A427F325A6F2C91F15D8728BB9DFE8717AAC3CC1D2144BCEEBD3D3848
BDB42404126DB26B2C13BB479AE38C4F4ECB0DB04BCDC156E6EFA2214C178B5C
435107776FD9AF7FCB46E76B07C5AAB034F8EC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
TXGBZC+CMR7 /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/TXGBZC+CMR7*1 
[48{/.notdef}rp /zero /one /two /three /.notdef /five 202{/.notdef}rp]
TXGBZC+CMR7 nf
TXGBZC+CMR7*1 [7.29285 -1.82362 -1.82362 -7.29285 0 0 ]msf
295.452 164.802 mo
(10000)
[4.15253 -1.03839 4.15253 -1.03833 4.15253 -1.03839 4.15253 -1.03839 0 0 ]xysh
TXGBZE+CMSY7*1 [7.29285 1.82302 1.82302 -7.29285 0 0 ]msf
181.835 173.876 mo
(\024)sh
TXGBZC+CMR7*1 [7.29285 1.82302 1.82302 -7.29285 0 0 ]msf
190.717 176.097 mo
(35)
[4.15253 1.03802 0 0 ]xysh
gsave
264.553 116.688 mo
234.023 116.688 li
231.822 116.688 230.038 118.472 230.038 120.673 cv
230.038 129.152 li
230.038 131.353 231.822 133.137 234.023 133.137 cv
264.553 133.137 li
266.754 133.137 268.538 131.353 268.538 129.152 cv
268.538 120.673 li
268.538 118.472 266.754 116.688 264.553 116.688 cv
cp
clp
210.784 141.364 mo
287.792 141.364 li
287.792 108.461 li
210.784 108.461 li
cp
level3{
gsave
clp
[.77008 0 0 -.32903 210.784 141.364 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.77008 0 0 -.32903 210.784 141.364 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
grestore
264.553 116.688 mo
234.023 116.688 li
231.822 116.688 230.038 118.472 230.038 120.673 cv
230.038 129.152 li
230.038 131.353 231.822 133.137 234.023 133.137 cv
264.553 133.137 li
266.754 133.137 268.538 131.353 268.538 129.152 cv
268.538 120.673 li
268.538 118.472 266.754 116.688 264.553 116.688 cv
cp
@
TXGBYY+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
233.536 128.588 mo
(\011)sh
TXGBYZ+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
244.036 128.588 mo
(\017)sh
TXGBZA+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
254.536 128.588 mo
(\021)sh
148.655 150.07 mo
226.352 130.64 li
@
229.839 129.767 mo
228.757 129.832 226.933 129.671 225.601 129.283 cv
226.327 132.19 li
227.32 131.221 228.854 130.22 229.839 129.767 cv
f
TXGBZB+CMMI7*1 [7.29285 -1.82362 -1.82362 -7.29285 0 0 ]msf
179.614 137.919 mo
(>)sh
TXGBZC+CMR7*1 [7.29285 -1.82362 -1.82362 -7.29285 0 0 ]msf
188.496 135.698 mo
(35)
[4.15253 -1.03839 0 0 ]xysh
%ADOBeginSubsetFont: UBAAAA+SimSun Initial
ct_T42Dict begin
-0.008 -0.141 1 0.859
 256 array 0 1 255 {1 index exch /.notdef put} for  /UBAAAA+SimSun
Type42DictBegin
[<00010000000c000c000c000c4f532f324fd9e4e2000000cc000000566376
742004ba01cd00000124000000ba6670676dc564b4f6000001e000000dee
676c7966fa3380a100001d100000008468656164eb87fd0d00000fd00000
003668686561020100d70000100800000024686d74780200002f0000102c
0000000c6c6f63610000004200001038000000086d61787002e404d00000
1040000000206e616d65d99e86730000106000000aaa7072657051510fe7
00001b0c0000020467646972000000000000000000000000000100800190
0005000800800080000000100080008000000080000c0041000002010600
030101010101000000031000000000000000000000005a59454300400000
f0ff00dcffdc002400dc00248000000000000000000000b7fff800af0002
00af000200740002000000020000000200000002ffdfffff00b100000000
00020000000f001000060006000e00060006000600100006001000080010
000e00070007000e00090011000700190007000d0009000e000d00170009
0015000200090006000e0010001300160006001000080010000c000e0010
00060008000c00060008000e0009001100130007000a000f00190007000a
00060009000d000f00120017000600090013001600020009000b000e0000
404687868584838281807f7e7d7c7b7a797877767574737271706f6e6d6c
6b6a696867666564636261605f5e5d5c5b5a5958575655545351504f4e4d
4c4b4a49484746281f100a092c01b10b0a432343650a2d2c00b10a0b4323
430b2d2c01b00643b00743650a2d2cb04f2b20b0405158214b525845441b
2121591b2321b040b0042545b004254561648a63525845441b212159592d
2c00b00743b006430b2d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c2320b000508a8a64b10003255458b0401bb1010325
5458b005438b59b04f2b5923b0622b2321235865592d2cb108000c215460
432d2cb10c000c215460432d2c012047b0024320b8100062b81000635723
b8010062b8100063575a58b020606659482d2cb1000225b00225b0022553
b800352378b00225b0022560b020632020b00625236250588a21b0016023
1b2020b00625236252582321b001611b8a212321205959b8ffc11c60b020
6323212d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b12601885158b940
00020063b80400885458b202400243604259b94000040063b80800885458
b2028002436042595959595959b10002435458400a0540084009400c020d
021bb10102435458b2054008ba010000090100b30c010d011bb180024352
58b2054008b80180b109401bb2054008ba01800009014059b94000008088
55b94000020063b8040088555a58b30c000d011bb30c000d015959594242
4242422d2c45b1024e2b23b04f2b20b0405158214b5158b0022545b1014e
2b60591b2321b003254520648a63b0405358b1024e2b601b215959442d2c
20b00050205823651b2359b114148a7045b04f2b23b1610626602b8a58b0
05438b592358655923103a2d2cb003254963234660b04f2b23b00425b004
2549b0032563562060b062602bb003252010468a4660b02063613a2d2cb0
0016b1020325b1010425013e003eb10102060cb00a236542b00b2342b102
0325b1010425013f003fb10102060cb006236542b0072342b00116b10002
4354584523452018698a6323622020b0405058671b665961b02063b04023
61b00423421bb104004221215918012d2c2045b1004e2b442d2c4b51b140
4f2b505b582045b1014e2b208a8a4420b1400426616361b1014e2b44211b
23218a45b1014e2b208a234444592d2c4b51b1404f2b505b5845208ab040
6163601b23214559b1014e2b442d2c2345208a4523612064b04051b00425
20b0005323b040515a5ab1404f2b545a588a0c642364235358b140408a61
2063611b2063591b8a5963b1024e2b60442d2c012d2c002d2c05b10b0a43
2343650a2d2cb10a0b4323430b022d2cb002256366b00225b82000626023
622d2cb0022563b0206066b00225b82000626023622d2cb002256367b002
25b82000626023622d2cb002256366b02060b00225b82000626023622d2c
234ab1024e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b0022561
64b00343525821206459b1024e2b23b000505865592d2c238a4a234564b0
022564b002256164b00343525821206459b1014e2b23b000505865592d2c
20b003254ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb003
25b003258ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb003
2546b003254660b004252eb00425b00425b0042620b000505821b06a1bb0
6c592bb0032546b00325466061b08062208a2010233a232010233a2d2cb0
032547b003254760b0052547b0806361b00225b00625496323b005254ab0
80632058621b2159b0042646608a468a4660b02063612d2cb00426b00425
b00425b00426b06e2b208a2010233a232010233a2d2c2320b001545821b0
0225b1024e2bb0805020605920606020b001515821211b20b00551582120
6661b0402361b100032550b00325b00325505a5820b00325618a535821b0
00591b21591bb00754582066616523211b2121b000595959b1024e2b2d2c
b00225b004254ab0005358b0001b8a8a238ab00159b004254620666120b0
0526b0062649b00526b00526b0702b236165b02060206661b02061652d2c
b0022546208a20b000505821b1024e2b1b452321596165b00225103b2d2c
b0042620b802006220b80200638a236120b05d602bb00525118a128a2039
8a58ba005d10000004266356602b23212010204620b1024e2b23611b2321
208a201049b1024e2b593b2d2cba005d10000009256356602bb00525b005
25b00526b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba00
5d10000008266356602b20b0005258b0502bb00525b00525b00725b00725
b00525b0712bb0021738b00052b00225b001525a58b00425b0062549b003
25b00525496020b0405258211bb000525820b0025458b00425b00425b007
25b0072549b00217381bb00425b00425b00425b0062549b0021738595959
595921212121212d2cba005d1000000b256356602bb00725b00725b00625
b00625b00c25b00c25b00925b00825b06e2bb0041738b00725b00725b007
26b06d2bb00425b00425b00426b06d2bb0502bb00625b00625b00325b071
2bb00525b00525b00325b002173820b00625b00625b00525b0712b60b006
25b00625b0042565b0021738b00225b002256020b040535821b0406123b0
4061231bb8ffc05058b0406023b04060235959b00825b00825b00426b002
1738b00525b005258ab002173820b0005258b00625b0082549b00325b005
25496020b0405258211bb0005258b00625b00625b00625b00625b00b25b0
0b2549b0041738b00625b00625b00625b00625b00a25b00a25b00725b071
2bb0041738b00425b00425b00525b00725b00525b0712bb00217381bb004
25b00425b9ffc00002173859595921212121212121212d2cb00425b00325
87b00325b003258a20b000505821b0651bb068592b64b00425b0042506b0
0425b0042549202063b00325206351b1000325545b5821212321071b2063
b0022520636120b0532b8a63b00525b0052587b00425b004264ab0005058
6559b00426200146230046b00526200146230046b0001600b000234801b0
0023480020b0012348b00223480120b0012348b002234823b20200010823
38b2020001092338b1020107b00116592d2c23100d0c8a63238a636064b9
40000400635058b000381b3c592d2cb00625b00925b00925b00726b0762b
23b0005458051b0459b00425b00626b0772bb00525b00526b00525b00526
b0762bb0005458051b0459b0772b2d2cb00725b00a25b00a25b00826b076
2b8ab0005458051b0459b00525b00726b0772bb00625b00626b00625b006
26b0762b08b0772b2d2cb00725b00a25b00a25b00826b0762b8a8a08b004
25b00626b0772bb00525b00526b00525b00526b0762bb0005458051b0459
b0772b2d2cb00825b00b25b00b25b00926b0762bb00426b0042608b00525
b00726b0772bb00625b00626b00625b00626b0762b08b0772b2d2c03b003
25b003254ab00425b003254a02b00525b005264ab00526b005264ab00426
638a8a63612d2cb15d0e25602bb00c2611b0052612b00a2539b0072539b0
0a25b00a25b00925b07c2bb00050b00b25b00825b00a25b07c2bb0005054
58b00725b00b2587b00425b004250bb00a2510b00925c1b00225b002250b
b0072510b00625c11bb00725b00b25b00b25b9ffff00762bb00425b00425
0bb00725b00a25b0772bb00a25b00825b00825b9ffff00762bb00225b002
250bb00a25b00725b0772b59b00a2546b00a254660b0082546b008254660
b00625b006250bb00c25b00c25b00c2620b000505821b06a1bb06c592bb0
0425b004250bb00925b00925b0092620b000505821b06a1bb06c592b23b0
0a2546b00a25466061b0206323b0082546b00825466061b02063b1010c25
5458041b0559b00a262010b003253ab00626b006260bb0072620108a3ab1
0107265458041b0559b005262010b002253a8a8a0b232010233a2d2c23b0
015458b9000040001bb940000000598ab0015458b9000040001bb9400000
0059b07d2b2d2c8a8a080d8ab0015458b9000040001bb94000000059b07d
2b2d2c08b0015458b9000040001bb940000000590db07d2b2d2cb00426b0
0426080db00426b00426080db07d2b2d2c200146230046b00a43b00b438a
632362612d2cb0092bb006252eb005257dc5b00625b00525b0042520b000
505821b06a1bb06c592bb00525b00425b0032520b000505821b06a1bb06c
592b18b00825b00725b00625b00a25b06f2bb00625b00525b0042620b000
505821b0661bb068592bb00525b00425b0042620b000505821b0661bb068
592b54587db0042510b00325c5b0022510b00125c5b0052621b00526211b
b00626b00425b00325b00826b06f2b59b100024354587db00225b0822bb0
0525b0822b20206961b00443012361b06060206961b0206120b00826b008
268ab00217388a8a6120696161b00217381b2121212159182d2c4b52b101
0243535a58231020013c003c1b2121592d2c23b00225b00225535820b004
25583c1b3959b00160b8ffe91c592121212d2cb0022547b0022547548a20
201011b001608a2012b00161b0852b2d2cb0042547b002254754232012b0
01612320b0062620201011b00160b00626b0852b8a8ab0852b2d00000001
00000005266619d61cbe5f0f3cf5000b010000000000b798428000000000
d3ce556efffeffdc010000dc0000000c00020000000000000001000000dc
ffdc00240100fffefff70100000100000000000000000000000000000003
01000000000000000100002f000000000000004200010000000301810031
0000000000020010002f008800000217031e000000000000002601ce0001
000000000000002700000001000000000001000d00270001000000000002
000700340001000000000003000d003b0001000000000004000d00480001
000000000005000c00550001000000000006000d00610001000000000007
002c006e0003000104090000004e009a0003000104090001001a00e80003
000104090002000e01020003000104090003001a01100003000104090004
001a012a0003000104090005001801440003000104090006001a015c0003
00010409000700580176000300010409000d038801ce000300010409000e
005205560003000108040000008205a800030001080400010012062a0003
0001080400020004063c0003000108040003001206400003000108040004
0012065200030001080400050018066400030001080400060012067c0003
0001080400070058068e0003000108040008003e06e60003000108040009
003e0724000300010804000b00380762000300010804000c0038079a0003
000110040000004e07d20003000110040001001208200003000110040002
000408320003000110040003001208360003000110040004001208480003
0001100400050018085a0003000110040006001208720003000110040007
00580884a920436f70797269676874205a484f4e47594920456c65637472
6f6e696320436f2e20323030314b4b4a544b4b2b53696d53756e52656775
6c61724b4b4a544b4b2b53696d53756e4b4b4a544b4b2b53696d53756e56
657273696f6e20352e31354b4b4a544b4b2b53696d53756e54726164656d
61726b206f66205a484f4e47594920456c656374726f6e696320436f2e2c
204265696a696e6700a900200043006f0070007900720069006700680074
0020005a0048004f004e00470059004900200045006c0065006300740072
006f006e0069006300200043006f002e00200032003000300031004b004b
004a0054004b004b002b00530069006d00530075006e0052006500670075
006c00610072004b004b004a0054004b004b002b00530069006d00530075
006e004b004b004a0054004b004b002b00530069006d00530075006e0056
0065007200730069006f006e00200035002e00310035004b004b004a0054
004b004b002b00530069006d00530075006e00540072006100640065006d
00610072006b0020006f00660020005a0048004f004e0047005900490020
0045006c0065006300740072006f006e0069006300200043006f002e002c
0020004200650069006a0069006e0067004d006900630072006f0073006f
0066007400200073007500700070006c00690065006400200066006f006e
0074002e00200059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e007400200074006f002000630072
0065006100740065002c00200064006900730070006c00610079002c0020
0061006e00640020007000720069006e007400200063006f006e00740065
006e00740020006100730020007000650072006d00690074007400650064
00200062007900200074006800650020006c006900630065006e00730065
0020007400650072006d00730020006f00720020007400650072006d0073
0020006f00660020007500730065002c0020006f00660020007400680065
0020004d006900630072006f0073006f00660074002000700072006f0064
007500630074002c00200073006500720076006900630065002c0020006f
007200200063006f006e00740065006e007400200069006e002000770068
0069006300680020007400680069007300200066006f006e007400200077
0061007300200069006e0063006c0075006400650064002e00200059006f
00750020006d006100790020006f006e006c007900200028006900290020
0065006d0062006500640020007400680069007300200066006f006e0074
00200069006e00200063006f006e00740065006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
006500200065006d00620065006400640069006e00670020007200650073
007400720069006300740069006f006e007300200069006e0063006c0075
00640065006400200069006e0020007400680069007300200066006f006e
0074003b00200061006e006400200028006900690029002000740065006d
0070006f0072006100720069006c007900200064006f0077006e006c006f
006100640020007400680069007300200066006f006e007400200074006f
002000610020007000720069006e0074006500720020006f00720020006f
00740068006500720020006f007500740070007500740020006400650076
00690063006500200074006f002000680065006c00700020007000720069
006e007400200063006f006e00740065006e0074002e00200041006e0079
0020006f0074006800650072002000750073006500200069007300200070
0072006f0068006900620069007400650064002e0068007400740070003a
002f002f007700770077002e006d006900630072006f0073006f00660074
002e0063006f006d002f007400790070006f006700720061007000680079
002f0066006f006e0074007300a900200043006f00700079007200690067
006800740020005a0048004f004e00470059004900200045006c00650063
00740072006f006e0069006300200043006f002e00200032003000300031
000d000a5b574f536570636e753153174eac4e2d66134e2d680775355b50
4fe1606f6280672f67099650516c53f863d04f9b3002004b004b004a0054
004b004b002b5b8b4f535e3889c4004b004b004a0054004b004b002b5b8b
4f53004b004b004a0054004b004b002b5b8b4f5300560065007200730069
006f006e00200035002e00310035004b004b004a0054004b004b002b5b8b
4f5300540072006100640065006d00610072006b0020006f00660020005a
0048004f004e00470059004900200045006c0065006300740072006f006e
0069006300200043006f002e002c0020004200650069006a0069006e0067
004200650069006a0069006e00670020005a0068006f006e006700590069
00200045006c0065006300740072006f006e00690063007300200043006f
002e004200650069006a0069006e00670020005a0068006f006e00670059
006900200045006c0065006300740072006f006e00690063007300200043
006f002e0068007400740070003a002f002f007700770077002e007a0068
006f006e006700790069006300740073002e0063006f006d002e0063006e
0068007400740070003a002f002f007700770077002e007a0068006f006e
006700790069006300740073002e0063006f006d002e0063006e00a90020
0043006f00700079007200690067006800740020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e00200032003000300031004b004b004a0054004b004b002b5b8b
4f535e3889c4004b004b004a0054004b004b002b5b8b4f53004b004b004a
0054004b004b002b5b8b4f5300560065007200730069006f006e00200035
002e00310035004b004b004a0054004b004b002b5b8b4f53005400720061
00640065006d00610072006b0020006f00660020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e002c0020004200650069006a0069006e0067000040ff5c331a1f
5b33401f5a33ff1f5932ff1f5831801f5731401f5630ff1f55302b1f542f
ff1f532d201f522e401f512eff1f502cff1f4f2c2b1f4e2a2b1f4d2aff1f
4c29ff1f4b28101f4a282b1f4928ff1f4827401f4727ff1f4626ff1f4525
ff1f4424801f4324801f42231a1f4123801f4023801f3f22401f3e22ff1f
3d22401f3c21ff1f3b20ff1f3a1fff1f391eff1f381d161f371d2b1f361d
ff1f351d401f341cff1f2e2d801f2d2b801f2c2b201f2519ff1f24081b19
5c23081a195c2219ff1f2116ff1f200c18165c1f170d1f1e17ff1f1d16ff
1f1c160d1f1b1b19005b181816005b1a1b19005b171816005b1519381638
5a0f1501ff1501134d1255404811ff1055125910590d4d0c55054d04550c
5904590f800e550b4d0a55074d0655011000550e590a5906590059094d08
55034d025508590259200250028002b002e002050340400501b901900054
2b4bb807ff524bb008505bb00188b02553b00188b040515ab00688b00055
5a5b58b101018e59858d8d001d424bb0905358b20300001d4259b1020243
5158b104038e5973002b002b2b2b002b002b002b002b2b2b2b2b002b002b
2b2b002b002b2b2b017374012b012b012b012b012b2b2b002b2b012b2b01
2b002b012b002b012b2b2b2b2b2b2b2b002b2b2b2b012b2b2b002b2b2b2b
2b2b012b2b2b002b2b2b2b2b2b012b2b2b2b2b2b002b2b2b2b2b2b2b2b18
00>
[133 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 0 2 <0003002fffea00df00d000140018001c00274011031a05050e1619190e11
0b0b1515070e07002f2f12392f33113311392f3311392f33323031371417
0735231507363427173336371706073337170715333507153335d5010f89
0f01010f1c1404170d1b630b10a1898989908b13051815062f5c2d072312
0f04220b10013d3d43474700>UBAAAA+SimSun AddT42Char 

1 0 0 <> UBAAAA+SimSun AddT42Char 
UBAAAA+SimSun /CharStrings get begin
/g2 2 def
end
UBAAAA+SimSun /Encoding get
dup 125 /g2 put
pop
end
%ADOEndSubsetFont
/TXGBZJ+SimSun /UBAAAA+SimSun findfont ct_VMDictPut
/TXGBZJ+SimSun*1 
[125{/.notdef}rp /g2 130{/.notdef}rp]
TXGBZJ+SimSun nf
TXGBZJ+SimSun*1 [7.5 0 0 -7.5 0 0 ]msf
74.4976 148.81 mo
(})sh
%ADOBeginSubsetFont: VBAAAA+SimSun Initial
ct_T42Dict begin
-0.008 -0.141 1 0.859
 256 array 0 1 255 {1 index exch /.notdef put} for  /VBAAAA+SimSun
Type42DictBegin
[<00010000000c000c000c000c4f532f324fd9e4e2000000cc000000566376
742004ba01cd00000124000000ba6670676dc564b4f6000001e000000dee
676c7966dcc120de00001d100000017268656164eb87fd0d00000fd00000
003668686561020100d70000100800000024686d74780200000a0000102c
0000000c6c6f6361000000b900001038000000086d61787002e404d00000
1040000000206e616d65d12cb90c0000106000000aaa7072657051510fe7
00001b0c0000020467646972000000000000000000000000000100800190
0005000800800080000000100080008000000080000c0041000002010600
030101010101000000031000000000000000000000005a59454300400000
f0ff00dcffdc002400dc00248000000000000000000000b7fff800af0002
00af000200740002000000020000000200000002ffdfffff00b100000000
00020000000f001000060006000e00060006000600100006001000080010
000e00070007000e00090011000700190007000d0009000e000d00170009
0015000200090006000e0010001300160006001000080010000c000e0010
00060008000c00060008000e0009001100130007000a000f00190007000a
00060009000d000f00120017000600090013001600020009000b000e0000
404687868584838281807f7e7d7c7b7a797877767574737271706f6e6d6c
6b6a696867666564636261605f5e5d5c5b5a5958575655545351504f4e4d
4c4b4a49484746281f100a092c01b10b0a432343650a2d2c00b10a0b4323
430b2d2c01b00643b00743650a2d2cb04f2b20b0405158214b525845441b
2121591b2321b040b0042545b004254561648a63525845441b212159592d
2c00b00743b006430b2d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c2320b000508a8a64b10003255458b0401bb1010325
5458b005438b59b04f2b5923b0622b2321235865592d2cb108000c215460
432d2cb10c000c215460432d2c012047b0024320b8100062b81000635723
b8010062b8100063575a58b020606659482d2cb1000225b00225b0022553
b800352378b00225b0022560b020632020b00625236250588a21b0016023
1b2020b00625236252582321b001611b8a212321205959b8ffc11c60b020
6323212d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b12601885158b940
00020063b80400885458b202400243604259b94000040063b80800885458
b2028002436042595959595959b10002435458400a0540084009400c020d
021bb10102435458b2054008ba010000090100b30c010d011bb180024352
58b2054008b80180b109401bb2054008ba01800009014059b94000008088
55b94000020063b8040088555a58b30c000d011bb30c000d015959594242
4242422d2c45b1024e2b23b04f2b20b0405158214b5158b0022545b1014e
2b60591b2321b003254520648a63b0405358b1024e2b601b215959442d2c
20b00050205823651b2359b114148a7045b04f2b23b1610626602b8a58b0
05438b592358655923103a2d2cb003254963234660b04f2b23b00425b004
2549b0032563562060b062602bb003252010468a4660b02063613a2d2cb0
0016b1020325b1010425013e003eb10102060cb00a236542b00b2342b102
0325b1010425013f003fb10102060cb006236542b0072342b00116b10002
4354584523452018698a6323622020b0405058671b665961b02063b04023
61b00423421bb104004221215918012d2c2045b1004e2b442d2c4b51b140
4f2b505b582045b1014e2b208a8a4420b1400426616361b1014e2b44211b
23218a45b1014e2b208a234444592d2c4b51b1404f2b505b5845208ab040
6163601b23214559b1014e2b442d2c2345208a4523612064b04051b00425
20b0005323b040515a5ab1404f2b545a588a0c642364235358b140408a61
2063611b2063591b8a5963b1024e2b60442d2c012d2c002d2c05b10b0a43
2343650a2d2cb10a0b4323430b022d2cb002256366b00225b82000626023
622d2cb0022563b0206066b00225b82000626023622d2cb002256367b002
25b82000626023622d2cb002256366b02060b00225b82000626023622d2c
234ab1024e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b0022561
64b00343525821206459b1024e2b23b000505865592d2c238a4a234564b0
022564b002256164b00343525821206459b1014e2b23b000505865592d2c
20b003254ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb003
25b003258ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb003
2546b003254660b004252eb00425b00425b0042620b000505821b06a1bb0
6c592bb0032546b00325466061b08062208a2010233a232010233a2d2cb0
032547b003254760b0052547b0806361b00225b00625496323b005254ab0
80632058621b2159b0042646608a468a4660b02063612d2cb00426b00425
b00425b00426b06e2b208a2010233a232010233a2d2c2320b001545821b0
0225b1024e2bb0805020605920606020b001515821211b20b00551582120
6661b0402361b100032550b00325b00325505a5820b00325618a535821b0
00591b21591bb00754582066616523211b2121b000595959b1024e2b2d2c
b00225b004254ab0005358b0001b8a8a238ab00159b004254620666120b0
0526b0062649b00526b00526b0702b236165b02060206661b02061652d2c
b0022546208a20b000505821b1024e2b1b452321596165b00225103b2d2c
b0042620b802006220b80200638a236120b05d602bb00525118a128a2039
8a58ba005d10000004266356602b23212010204620b1024e2b23611b2321
208a201049b1024e2b593b2d2cba005d10000009256356602bb00525b005
25b00526b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba00
5d10000008266356602b20b0005258b0502bb00525b00525b00725b00725
b00525b0712bb0021738b00052b00225b001525a58b00425b0062549b003
25b00525496020b0405258211bb000525820b0025458b00425b00425b007
25b0072549b00217381bb00425b00425b00425b0062549b0021738595959
595921212121212d2cba005d1000000b256356602bb00725b00725b00625
b00625b00c25b00c25b00925b00825b06e2bb0041738b00725b00725b007
26b06d2bb00425b00425b00426b06d2bb0502bb00625b00625b00325b071
2bb00525b00525b00325b002173820b00625b00625b00525b0712b60b006
25b00625b0042565b0021738b00225b002256020b040535821b0406123b0
4061231bb8ffc05058b0406023b04060235959b00825b00825b00426b002
1738b00525b005258ab002173820b0005258b00625b0082549b00325b005
25496020b0405258211bb0005258b00625b00625b00625b00625b00b25b0
0b2549b0041738b00625b00625b00625b00625b00a25b00a25b00725b071
2bb0041738b00425b00425b00525b00725b00525b0712bb00217381bb004
25b00425b9ffc00002173859595921212121212121212d2cb00425b00325
87b00325b003258a20b000505821b0651bb068592b64b00425b0042506b0
0425b0042549202063b00325206351b1000325545b5821212321071b2063
b0022520636120b0532b8a63b00525b0052587b00425b004264ab0005058
6559b00426200146230046b00526200146230046b0001600b000234801b0
0023480020b0012348b00223480120b0012348b002234823b20200010823
38b2020001092338b1020107b00116592d2c23100d0c8a63238a636064b9
40000400635058b000381b3c592d2cb00625b00925b00925b00726b0762b
23b0005458051b0459b00425b00626b0772bb00525b00526b00525b00526
b0762bb0005458051b0459b0772b2d2cb00725b00a25b00a25b00826b076
2b8ab0005458051b0459b00525b00726b0772bb00625b00626b00625b006
26b0762b08b0772b2d2cb00725b00a25b00a25b00826b0762b8a8a08b004
25b00626b0772bb00525b00526b00525b00526b0762bb0005458051b0459
b0772b2d2cb00825b00b25b00b25b00926b0762bb00426b0042608b00525
b00726b0772bb00625b00626b00625b00626b0762b08b0772b2d2c03b003
25b003254ab00425b003254a02b00525b005264ab00526b005264ab00426
638a8a63612d2cb15d0e25602bb00c2611b0052612b00a2539b0072539b0
0a25b00a25b00925b07c2bb00050b00b25b00825b00a25b07c2bb0005054
58b00725b00b2587b00425b004250bb00a2510b00925c1b00225b002250b
b0072510b00625c11bb00725b00b25b00b25b9ffff00762bb00425b00425
0bb00725b00a25b0772bb00a25b00825b00825b9ffff00762bb00225b002
250bb00a25b00725b0772b59b00a2546b00a254660b0082546b008254660
b00625b006250bb00c25b00c25b00c2620b000505821b06a1bb06c592bb0
0425b004250bb00925b00925b0092620b000505821b06a1bb06c592b23b0
0a2546b00a25466061b0206323b0082546b00825466061b02063b1010c25
5458041b0559b00a262010b003253ab00626b006260bb0072620108a3ab1
0107265458041b0559b005262010b002253a8a8a0b232010233a2d2c23b0
015458b9000040001bb940000000598ab0015458b9000040001bb9400000
0059b07d2b2d2c8a8a080d8ab0015458b9000040001bb94000000059b07d
2b2d2c08b0015458b9000040001bb940000000590db07d2b2d2cb00426b0
0426080db00426b00426080db07d2b2d2c200146230046b00a43b00b438a
632362612d2cb0092bb006252eb005257dc5b00625b00525b0042520b000
505821b06a1bb06c592bb00525b00425b0032520b000505821b06a1bb06c
592b18b00825b00725b00625b00a25b06f2bb00625b00525b0042620b000
505821b0661bb068592bb00525b00425b0042620b000505821b0661bb068
592b54587db0042510b00325c5b0022510b00125c5b0052621b00526211b
b00626b00425b00325b00826b06f2b59b100024354587db00225b0822bb0
0525b0822b20206961b00443012361b06060206961b0206120b00826b008
268ab00217388a8a6120696161b00217381b2121212159182d2c4b52b101
0243535a58231020013c003c1b2121592d2c23b00225b00225535820b004
25583c1b3959b00160b8ffe91c592121212d2cb0022547b0022547548a20
201011b001608a2012b00161b0852b2d2cb0042547b002254754232012b0
01612320b0062620201011b00160b00626b0852b8a8ab0852b2d00000001
000000052666609f6c105f0f3cf5000b010000000000b798428000000000
d3ce556efffeffdc010000dc0000000c00020000000000000001000000dc
ffdc00240100fffefff70100000100000000000000000000000000000003
01000000000000000100000a00000000000000b900010000000301810031
0000000000020010002f008800000217031e000000000000002601ce0001
000000000000002700000001000000000001000d00270001000000000002
000700340001000000000003000d003b0001000000000004000d00480001
000000000005000c00550001000000000006000d00610001000000000007
002c006e0003000104090000004e009a0003000104090001001a00e80003
000104090002000e01020003000104090003001a01100003000104090004
001a012a0003000104090005001801440003000104090006001a015c0003
00010409000700580176000300010409000d038801ce000300010409000e
005205560003000108040000008205a800030001080400010012062a0003
0001080400020004063c0003000108040003001206400003000108040004
0012065200030001080400050018066400030001080400060012067c0003
0001080400070058068e0003000108040008003e06e60003000108040009
003e0724000300010804000b00380762000300010804000c0038079a0003
000110040000004e07d20003000110040001001208200003000110040002
000408320003000110040003001208360003000110040004001208480003
0001100400050018085a0003000110040006001208720003000110040007
00580884a920436f70797269676874205a484f4e47594920456c65637472
6f6e696320436f2e20323030315a5943484e532b53696d53756e52656775
6c61725a5943484e532b53696d53756e5a5943484e532b53696d53756e56
657273696f6e20352e31355a5943484e532b53696d53756e54726164656d
61726b206f66205a484f4e47594920456c656374726f6e696320436f2e2c
204265696a696e6700a900200043006f0070007900720069006700680074
0020005a0048004f004e00470059004900200045006c0065006300740072
006f006e0069006300200043006f002e00200032003000300031005a0059
00430048004e0053002b00530069006d00530075006e0052006500670075
006c00610072005a005900430048004e0053002b00530069006d00530075
006e005a005900430048004e0053002b00530069006d00530075006e0056
0065007200730069006f006e00200035002e00310035005a005900430048
004e0053002b00530069006d00530075006e00540072006100640065006d
00610072006b0020006f00660020005a0048004f004e0047005900490020
0045006c0065006300740072006f006e0069006300200043006f002e002c
0020004200650069006a0069006e0067004d006900630072006f0073006f
0066007400200073007500700070006c00690065006400200066006f006e
0074002e00200059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e007400200074006f002000630072
0065006100740065002c00200064006900730070006c00610079002c0020
0061006e00640020007000720069006e007400200063006f006e00740065
006e00740020006100730020007000650072006d00690074007400650064
00200062007900200074006800650020006c006900630065006e00730065
0020007400650072006d00730020006f00720020007400650072006d0073
0020006f00660020007500730065002c0020006f00660020007400680065
0020004d006900630072006f0073006f00660074002000700072006f0064
007500630074002c00200073006500720076006900630065002c0020006f
007200200063006f006e00740065006e007400200069006e002000770068
0069006300680020007400680069007300200066006f006e007400200077
0061007300200069006e0063006c0075006400650064002e00200059006f
00750020006d006100790020006f006e006c007900200028006900290020
0065006d0062006500640020007400680069007300200066006f006e0074
00200069006e00200063006f006e00740065006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
006500200065006d00620065006400640069006e00670020007200650073
007400720069006300740069006f006e007300200069006e0063006c0075
00640065006400200069006e0020007400680069007300200066006f006e
0074003b00200061006e006400200028006900690029002000740065006d
0070006f0072006100720069006c007900200064006f0077006e006c006f
006100640020007400680069007300200066006f006e007400200074006f
002000610020007000720069006e0074006500720020006f00720020006f
00740068006500720020006f007500740070007500740020006400650076
00690063006500200074006f002000680065006c00700020007000720069
006e007400200063006f006e00740065006e0074002e00200041006e0079
0020006f0074006800650072002000750073006500200069007300200070
0072006f0068006900620069007400650064002e0068007400740070003a
002f002f007700770077002e006d006900630072006f0073006f00660074
002e0063006f006d002f007400790070006f006700720061007000680079
002f0066006f006e0074007300a900200043006f00700079007200690067
006800740020005a0048004f004e00470059004900200045006c00650063
00740072006f006e0069006300200043006f002e00200032003000300031
000d000a5b574f536570636e753153174eac4e2d66134e2d680775355b50
4fe1606f6280672f67099650516c53f863d04f9b3002005a005900430048
004e0053002b5b8b4f535e3889c4005a005900430048004e0053002b5b8b
4f53005a005900430048004e0053002b5b8b4f5300560065007200730069
006f006e00200035002e00310035005a005900430048004e0053002b5b8b
4f5300540072006100640065006d00610072006b0020006f00660020005a
0048004f004e00470059004900200045006c0065006300740072006f006e
0069006300200043006f002e002c0020004200650069006a0069006e0067
004200650069006a0069006e00670020005a0068006f006e006700590069
00200045006c0065006300740072006f006e00690063007300200043006f
002e004200650069006a0069006e00670020005a0068006f006e00670059
006900200045006c0065006300740072006f006e00690063007300200043
006f002e0068007400740070003a002f002f007700770077002e007a0068
006f006e006700790069006300740073002e0063006f006d002e0063006e
0068007400740070003a002f002f007700770077002e007a0068006f006e
006700790069006300740073002e0063006f006d002e0063006e00a90020
0043006f00700079007200690067006800740020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e00200032003000300031005a005900430048004e0053002b5b8b
4f535e3889c4005a005900430048004e0053002b5b8b4f53005a00590043
0048004e0053002b5b8b4f5300560065007200730069006f006e00200035
002e00310035005a005900430048004e0053002b5b8b4f53005400720061
00640065006d00610072006b0020006f00660020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e002c0020004200650069006a0069006e0067000040ff5c331a1f
5b33401f5a33ff1f5932ff1f5831801f5731401f5630ff1f55302b1f542f
ff1f532d201f522e401f512eff1f502cff1f4f2c2b1f4e2a2b1f4d2aff1f
4c29ff1f4b28101f4a282b1f4928ff1f4827401f4727ff1f4626ff1f4525
ff1f4424801f4324801f42231a1f4123801f4023801f3f22401f3e22ff1f
3d22401f3c21ff1f3b20ff1f3a1fff1f391eff1f381d161f371d2b1f361d
ff1f351d401f341cff1f2e2d801f2d2b801f2c2b201f2519ff1f24081b19
5c23081a195c2219ff1f2116ff1f200c18165c1f170d1f1e17ff1f1d16ff
1f1c160d1f1b1b19005b181816005b1a1b19005b171816005b1519381638
5a0f1501ff1501134d1255404811ff1055125910590d4d0c55054d04550c
5904590f800e550b4d0a55074d0655011000550e590a5906590059094d08
55034d025508590259200250028002b002e002050340400501b901900054
2b4bb807ff524bb008505bb00188b02553b00188b040515ab00688b00055
5a5b58b101018e59858d8d001d424bb0905358b20300001d4259b1020243
5158b104038e5973002b002b2b2b002b002b002b002b2b2b2b2b002b002b
2b2b002b002b2b2b017374012b012b012b012b012b2b2b002b2b012b2b01
2b002b012b002b012b2b2b2b2b2b2b2b002b2b2b2b012b2b2b002b2b2b2b
2b2b012b2b2b002b2b2b2b2b2b012b2b2b2b2b2b002b2b2b2b2b2b2b2b18
00>
[371 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 0 2 <0006000affe700f500cf0013001e00360053005e006a003b401b655f1b23
15520f23134426232344483b3b52524446423f3f594459002f2f12392f33
3311392f33113311392f331133113311331133333230313706071e021514
062322272627060727363637073716161514062322272607161737232207
273337170706071616151406232227262717363427173336372322072733
37172306073337170715141707352315370714060607273e022717161615
14062322272626275406061c110405020305081c162402111e0707021506
09020301021e0f101b220d0b0943080f09091c0e0405020405081f5d0101
0e120401170d0b09680e103b060c2c090e08010e4633090d212a012a1d05
010a2c120402020306131bc2030c120e0904050c0c121c301e03133a1d4a
030e0c03060a090e44080b3103090a10040a260b0904050b0b121e091a45
1e081c0b03090c120a1d0a0d063d1112086b664a07322a1d0d0312253c22
5e110f09030c050a1313>VBAAAA+SimSun AddT42Char 

1 0 0 <> VBAAAA+SimSun AddT42Char 
VBAAAA+SimSun /CharStrings get begin
/g2 2 def
end
VBAAAA+SimSun /Encoding get
dup 134 /g2 put
pop
end
%ADOEndSubsetFont
/TXGBZK+SimSun /VBAAAA+SimSun findfont ct_VMDictPut
/TXGBZK+SimSun*1 
[134{/.notdef}rp /g2 121{/.notdef}rp]
TXGBZK+SimSun nf
TXGBZK+SimSun*1 [7.5 0 0 -7.5 0 0 ]msf
81.9976 148.81 mo
(\206)sh
148.818 68.2187 mo
148.818 61.0847 143.035 55.3016 135.901 55.3016 cv
128.767 55.3016 122.984 61.0847 122.984 68.2187 cv
122.984 75.3527 128.767 81.1357 135.901 81.1357 cv
143.035 81.1357 148.818 75.3527 148.818 68.2187 cv
cp
@
TXGBYW+SimSun*1 [7.5 0 0 -7.5 0 0 ]msf
128.4 70.8452 mo
(t)sh
TXGBYX+SimSun*1 [7.5 0 0 -7.5 0 0 ]msf
135.9 70.8452 mo
(\204)sh
36.4442 142.81 mo
122.525 78.2511 li
@
125.408 76.0889 mo
124.433 76.5694 122.685 77.1299 121.304 77.2901 cv
123.105 79.6926 li
123.646 78.4113 124.674 76.8898 125.408 76.0889 cv
f
gsave
264.553 88.3408 mo
234.023 88.3408 li
231.822 88.3408 230.038 90.1249 230.038 92.3259 cv
230.038 100.805 li
230.038 103.006 231.822 104.79 234.023 104.79 cv
264.553 104.79 li
266.754 104.79 268.538 103.006 268.538 100.805 cv
268.538 92.3259 li
268.538 90.1249 266.754 88.3408 264.553 88.3408 cv
cp
clp
210.784 113.017 mo
287.792 113.017 li
287.792 80.114 li
210.784 80.114 li
cp
level3{
gsave
clp
[.77008 0 0 -.32903 210.784 113.017 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.77008 0 0 -.32903 210.784 113.017 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
grestore
264.553 88.3408 mo
234.023 88.3408 li
231.822 88.3408 230.038 90.1249 230.038 92.3259 cv
230.038 100.805 li
230.038 103.006 231.822 104.79 234.023 104.79 cv
264.553 104.79 li
266.754 104.79 268.538 103.006 268.538 100.805 cv
268.538 92.3259 li
268.538 90.1249 266.754 88.3408 264.553 88.3408 cv
cp
@
TXGBZD+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
233.536 100.241 mo
(\340)sh
TXGBYZ+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
244.036 100.241 mo
(\017)sh
TXGBZA+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
254.536 100.241 mo
(\021)sh
148.655 71.4079 mo
226.352 90.8383 li
@
229.839 91.7103 mo
228.854 91.2582 227.32 90.2571 226.327 89.2883 cv
225.601 92.1945 li
226.933 91.807 228.757 91.6457 229.839 91.7103 cv
f
TXGBZB+CMMI7*1 [7.29285 1.82362 1.82362 -7.29285 0 0 ]msf
178.576 87.7072 mo
(>)sh
%ADOBeginSubsetFont: NBAAAA+CMR7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
TXGBZC+CMR7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7E2CE5B62E9F191E798679064FF0C3AFF5C2953C7EE99B
35B9593ACD759052F67D5909B21E9F07A93BEECB88B7837B3FCAFA9C9F9D2751
01F3021841B6F1EE365E6D4F866337B858C156F46CCCC54B160345D5344E519C
3C4A92E5896F86E3AEB4D8FF6CA0281FF55EDEA6EC5DCCFBC5C08A0747092056
BF12D043FC4D9F8668B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
TXGBZC+CMR7 /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/TXGBZC+CMR7*1 
[48{/.notdef}rp /zero /one /two /three /four /five 202{/.notdef}rp]
TXGBZC+CMR7 nf
TXGBZC+CMR7*1 [7.29285 1.82362 1.82362 -7.29285 0 0 ]msf
187.459 89.9286 mo
(40)
[4.15253 1.03839 0 0 ]xysh
262.205 39.8718 mo
262.205 32.7379 256.422 26.9548 249.288 26.9548 cv
242.154 26.9548 236.371 32.7379 236.371 39.8718 cv
236.371 47.0058 242.154 52.7889 249.288 52.7889 cv
256.422 52.7889 262.205 47.0058 262.205 39.8718 cv
cp
@
%ADOBeginSubsetFont: WBAAAA+SimSun Initial
ct_T42Dict begin
-0.008 -0.141 1 0.859
 256 array 0 1 255 {1 index exch /.notdef put} for  /WBAAAA+SimSun
Type42DictBegin
[<00010000000c000c000c000c4f532f324fd9e4e2000000cc000000566376
742004ba01cd00000124000000ba6670676dc564b4f6000001e000000dee
676c7966379cfa7700001d100000012c68656164eb87fd0d00000fd00000
003668686561020100d70000100800000024686d74780200000f0000102c
0000000c6c6f63610000009600001038000000086d61787002e404d00000
1040000000206e616d65be386e5c0000106000000aaa7072657051510fe7
00001b0c0000020467646972000000000000000000000000000100800190
0005000800800080000000100080008000000080000c0041000002010600
030101010101000000031000000000000000000000005a59454300400000
f0ff00dcffdc002400dc00248000000000000000000000b7fff800af0002
00af000200740002000000020000000200000002ffdfffff00b100000000
00020000000f001000060006000e00060006000600100006001000080010
000e00070007000e00090011000700190007000d0009000e000d00170009
0015000200090006000e0010001300160006001000080010000c000e0010
00060008000c00060008000e0009001100130007000a000f00190007000a
00060009000d000f00120017000600090013001600020009000b000e0000
404687868584838281807f7e7d7c7b7a797877767574737271706f6e6d6c
6b6a696867666564636261605f5e5d5c5b5a5958575655545351504f4e4d
4c4b4a49484746281f100a092c01b10b0a432343650a2d2c00b10a0b4323
430b2d2c01b00643b00743650a2d2cb04f2b20b0405158214b525845441b
2121591b2321b040b0042545b004254561648a63525845441b212159592d
2c00b00743b006430b2d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c2320b000508a8a64b10003255458b0401bb1010325
5458b005438b59b04f2b5923b0622b2321235865592d2cb108000c215460
432d2cb10c000c215460432d2c012047b0024320b8100062b81000635723
b8010062b8100063575a58b020606659482d2cb1000225b00225b0022553
b800352378b00225b0022560b020632020b00625236250588a21b0016023
1b2020b00625236252582321b001611b8a212321205959b8ffc11c60b020
6323212d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b12601885158b940
00020063b80400885458b202400243604259b94000040063b80800885458
b2028002436042595959595959b10002435458400a0540084009400c020d
021bb10102435458b2054008ba010000090100b30c010d011bb180024352
58b2054008b80180b109401bb2054008ba01800009014059b94000008088
55b94000020063b8040088555a58b30c000d011bb30c000d015959594242
4242422d2c45b1024e2b23b04f2b20b0405158214b5158b0022545b1014e
2b60591b2321b003254520648a63b0405358b1024e2b601b215959442d2c
20b00050205823651b2359b114148a7045b04f2b23b1610626602b8a58b0
05438b592358655923103a2d2cb003254963234660b04f2b23b00425b004
2549b0032563562060b062602bb003252010468a4660b02063613a2d2cb0
0016b1020325b1010425013e003eb10102060cb00a236542b00b2342b102
0325b1010425013f003fb10102060cb006236542b0072342b00116b10002
4354584523452018698a6323622020b0405058671b665961b02063b04023
61b00423421bb104004221215918012d2c2045b1004e2b442d2c4b51b140
4f2b505b582045b1014e2b208a8a4420b1400426616361b1014e2b44211b
23218a45b1014e2b208a234444592d2c4b51b1404f2b505b5845208ab040
6163601b23214559b1014e2b442d2c2345208a4523612064b04051b00425
20b0005323b040515a5ab1404f2b545a588a0c642364235358b140408a61
2063611b2063591b8a5963b1024e2b60442d2c012d2c002d2c05b10b0a43
2343650a2d2cb10a0b4323430b022d2cb002256366b00225b82000626023
622d2cb0022563b0206066b00225b82000626023622d2cb002256367b002
25b82000626023622d2cb002256366b02060b00225b82000626023622d2c
234ab1024e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b0022561
64b00343525821206459b1024e2b23b000505865592d2c238a4a234564b0
022564b002256164b00343525821206459b1014e2b23b000505865592d2c
20b003254ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb003
25b003258ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb003
2546b003254660b004252eb00425b00425b0042620b000505821b06a1bb0
6c592bb0032546b00325466061b08062208a2010233a232010233a2d2cb0
032547b003254760b0052547b0806361b00225b00625496323b005254ab0
80632058621b2159b0042646608a468a4660b02063612d2cb00426b00425
b00425b00426b06e2b208a2010233a232010233a2d2c2320b001545821b0
0225b1024e2bb0805020605920606020b001515821211b20b00551582120
6661b0402361b100032550b00325b00325505a5820b00325618a535821b0
00591b21591bb00754582066616523211b2121b000595959b1024e2b2d2c
b00225b004254ab0005358b0001b8a8a238ab00159b004254620666120b0
0526b0062649b00526b00526b0702b236165b02060206661b02061652d2c
b0022546208a20b000505821b1024e2b1b452321596165b00225103b2d2c
b0042620b802006220b80200638a236120b05d602bb00525118a128a2039
8a58ba005d10000004266356602b23212010204620b1024e2b23611b2321
208a201049b1024e2b593b2d2cba005d10000009256356602bb00525b005
25b00526b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba00
5d10000008266356602b20b0005258b0502bb00525b00525b00725b00725
b00525b0712bb0021738b00052b00225b001525a58b00425b0062549b003
25b00525496020b0405258211bb000525820b0025458b00425b00425b007
25b0072549b00217381bb00425b00425b00425b0062549b0021738595959
595921212121212d2cba005d1000000b256356602bb00725b00725b00625
b00625b00c25b00c25b00925b00825b06e2bb0041738b00725b00725b007
26b06d2bb00425b00425b00426b06d2bb0502bb00625b00625b00325b071
2bb00525b00525b00325b002173820b00625b00625b00525b0712b60b006
25b00625b0042565b0021738b00225b002256020b040535821b0406123b0
4061231bb8ffc05058b0406023b04060235959b00825b00825b00426b002
1738b00525b005258ab002173820b0005258b00625b0082549b00325b005
25496020b0405258211bb0005258b00625b00625b00625b00625b00b25b0
0b2549b0041738b00625b00625b00625b00625b00a25b00a25b00725b071
2bb0041738b00425b00425b00525b00725b00525b0712bb00217381bb004
25b00425b9ffc00002173859595921212121212121212d2cb00425b00325
87b00325b003258a20b000505821b0651bb068592b64b00425b0042506b0
0425b0042549202063b00325206351b1000325545b5821212321071b2063
b0022520636120b0532b8a63b00525b0052587b00425b004264ab0005058
6559b00426200146230046b00526200146230046b0001600b000234801b0
0023480020b0012348b00223480120b0012348b002234823b20200010823
38b2020001092338b1020107b00116592d2c23100d0c8a63238a636064b9
40000400635058b000381b3c592d2cb00625b00925b00925b00726b0762b
23b0005458051b0459b00425b00626b0772bb00525b00526b00525b00526
b0762bb0005458051b0459b0772b2d2cb00725b00a25b00a25b00826b076
2b8ab0005458051b0459b00525b00726b0772bb00625b00626b00625b006
26b0762b08b0772b2d2cb00725b00a25b00a25b00826b0762b8a8a08b004
25b00626b0772bb00525b00526b00525b00526b0762bb0005458051b0459
b0772b2d2cb00825b00b25b00b25b00926b0762bb00426b0042608b00525
b00726b0772bb00625b00626b00625b00626b0762b08b0772b2d2c03b003
25b003254ab00425b003254a02b00525b005264ab00526b005264ab00426
638a8a63612d2cb15d0e25602bb00c2611b0052612b00a2539b0072539b0
0a25b00a25b00925b07c2bb00050b00b25b00825b00a25b07c2bb0005054
58b00725b00b2587b00425b004250bb00a2510b00925c1b00225b002250b
b0072510b00625c11bb00725b00b25b00b25b9ffff00762bb00425b00425
0bb00725b00a25b0772bb00a25b00825b00825b9ffff00762bb00225b002
250bb00a25b00725b0772b59b00a2546b00a254660b0082546b008254660
b00625b006250bb00c25b00c25b00c2620b000505821b06a1bb06c592bb0
0425b004250bb00925b00925b0092620b000505821b06a1bb06c592b23b0
0a2546b00a25466061b0206323b0082546b00825466061b02063b1010c25
5458041b0559b00a262010b003253ab00626b006260bb0072620108a3ab1
0107265458041b0559b005262010b002253a8a8a0b232010233a2d2c23b0
015458b9000040001bb940000000598ab0015458b9000040001bb9400000
0059b07d2b2d2c8a8a080d8ab0015458b9000040001bb94000000059b07d
2b2d2c08b0015458b9000040001bb940000000590db07d2b2d2cb00426b0
0426080db00426b00426080db07d2b2d2c200146230046b00a43b00b438a
632362612d2cb0092bb006252eb005257dc5b00625b00525b0042520b000
505821b06a1bb06c592bb00525b00425b0032520b000505821b06a1bb06c
592b18b00825b00725b00625b00a25b06f2bb00625b00525b0042620b000
505821b0661bb068592bb00525b00425b0042620b000505821b0661bb068
592b54587db0042510b00325c5b0022510b00125c5b0052621b00526211b
b00626b00425b00325b00826b06f2b59b100024354587db00225b0822bb0
0525b0822b20206961b00443012361b06060206961b0206120b00826b008
268ab00217388a8a6120696161b00217381b2121212159182d2c4b52b101
0243535a58231020013c003c1b2121592d2c23b00225b00225535820b004
25583c1b3959b00160b8ffe91c592121212d2cb0022547b0022547548a20
201011b001608a2012b00161b0852b2d2cb0042547b002254754232012b0
01612320b0062620201011b00160b00626b0852b8a8ab0852b2d00000001
000000052666d0d150485f0f3cf5000b010000000000b798428000000000
d3ce556efffeffdc010000dc0000000c00020000000000000001000000dc
ffdc00240100fffefff70100000100000000000000000000000000000003
01000000000000000100000f000000000000009600010000000301810031
0000000000020010002f008800000217031e000000000000002601ce0001
000000000000002700000001000000000001000d00270001000000000002
000700340001000000000003000d003b0001000000000004000d00480001
000000000005000c00550001000000000006000d00610001000000000007
002c006e0003000104090000004e009a0003000104090001001a00e80003
000104090002000e01020003000104090003001a01100003000104090004
001a012a0003000104090005001801440003000104090006001a015c0003
00010409000700580176000300010409000d038801ce000300010409000e
005205560003000108040000008205a800030001080400010012062a0003
0001080400020004063c0003000108040003001206400003000108040004
0012065200030001080400050018066400030001080400060012067c0003
0001080400070058068e0003000108040008003e06e60003000108040009
003e0724000300010804000b00380762000300010804000c0038079a0003
000110040000004e07d20003000110040001001208200003000110040002
000408320003000110040003001208360003000110040004001208480003
0001100400050018085a0003000110040006001208720003000110040007
00580884a920436f70797269676874205a484f4e47594920456c65637472
6f6e696320436f2e20323030314e49534448492b53696d53756e52656775
6c61724e49534448492b53696d53756e4e49534448492b53696d53756e56
657273696f6e20352e31354e49534448492b53696d53756e54726164656d
61726b206f66205a484f4e47594920456c656374726f6e696320436f2e2c
204265696a696e6700a900200043006f0070007900720069006700680074
0020005a0048004f004e00470059004900200045006c0065006300740072
006f006e0069006300200043006f002e00200032003000300031004e0049
0053004400480049002b00530069006d00530075006e0052006500670075
006c00610072004e00490053004400480049002b00530069006d00530075
006e004e00490053004400480049002b00530069006d00530075006e0056
0065007200730069006f006e00200035002e00310035004e004900530044
00480049002b00530069006d00530075006e00540072006100640065006d
00610072006b0020006f00660020005a0048004f004e0047005900490020
0045006c0065006300740072006f006e0069006300200043006f002e002c
0020004200650069006a0069006e0067004d006900630072006f0073006f
0066007400200073007500700070006c00690065006400200066006f006e
0074002e00200059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e007400200074006f002000630072
0065006100740065002c00200064006900730070006c00610079002c0020
0061006e00640020007000720069006e007400200063006f006e00740065
006e00740020006100730020007000650072006d00690074007400650064
00200062007900200074006800650020006c006900630065006e00730065
0020007400650072006d00730020006f00720020007400650072006d0073
0020006f00660020007500730065002c0020006f00660020007400680065
0020004d006900630072006f0073006f00660074002000700072006f0064
007500630074002c00200073006500720076006900630065002c0020006f
007200200063006f006e00740065006e007400200069006e002000770068
0069006300680020007400680069007300200066006f006e007400200077
0061007300200069006e0063006c0075006400650064002e00200059006f
00750020006d006100790020006f006e006c007900200028006900290020
0065006d0062006500640020007400680069007300200066006f006e0074
00200069006e00200063006f006e00740065006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
006500200065006d00620065006400640069006e00670020007200650073
007400720069006300740069006f006e007300200069006e0063006c0075
00640065006400200069006e0020007400680069007300200066006f006e
0074003b00200061006e006400200028006900690029002000740065006d
0070006f0072006100720069006c007900200064006f0077006e006c006f
006100640020007400680069007300200066006f006e007400200074006f
002000610020007000720069006e0074006500720020006f00720020006f
00740068006500720020006f007500740070007500740020006400650076
00690063006500200074006f002000680065006c00700020007000720069
006e007400200063006f006e00740065006e0074002e00200041006e0079
0020006f0074006800650072002000750073006500200069007300200070
0072006f0068006900620069007400650064002e0068007400740070003a
002f002f007700770077002e006d006900630072006f0073006f00660074
002e0063006f006d002f007400790070006f006700720061007000680079
002f0066006f006e0074007300a900200043006f00700079007200690067
006800740020005a0048004f004e00470059004900200045006c00650063
00740072006f006e0069006300200043006f002e00200032003000300031
000d000a5b574f536570636e753153174eac4e2d66134e2d680775355b50
4fe1606f6280672f67099650516c53f863d04f9b3002004e004900530044
00480049002b5b8b4f535e3889c4004e00490053004400480049002b5b8b
4f53004e00490053004400480049002b5b8b4f5300560065007200730069
006f006e00200035002e00310035004e00490053004400480049002b5b8b
4f5300540072006100640065006d00610072006b0020006f00660020005a
0048004f004e00470059004900200045006c0065006300740072006f006e
0069006300200043006f002e002c0020004200650069006a0069006e0067
004200650069006a0069006e00670020005a0068006f006e006700590069
00200045006c0065006300740072006f006e00690063007300200043006f
002e004200650069006a0069006e00670020005a0068006f006e00670059
006900200045006c0065006300740072006f006e00690063007300200043
006f002e0068007400740070003a002f002f007700770077002e007a0068
006f006e006700790069006300740073002e0063006f006d002e0063006e
0068007400740070003a002f002f007700770077002e007a0068006f006e
006700790069006300740073002e0063006f006d002e0063006e00a90020
0043006f00700079007200690067006800740020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e00200032003000300031004e00490053004400480049002b5b8b
4f535e3889c4004e00490053004400480049002b5b8b4f53004e00490053
004400480049002b5b8b4f5300560065007200730069006f006e00200035
002e00310035004e00490053004400480049002b5b8b4f53005400720061
00640065006d00610072006b0020006f00660020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e002c0020004200650069006a0069006e0067000040ff5c331a1f
5b33401f5a33ff1f5932ff1f5831801f5731401f5630ff1f55302b1f542f
ff1f532d201f522e401f512eff1f502cff1f4f2c2b1f4e2a2b1f4d2aff1f
4c29ff1f4b28101f4a282b1f4928ff1f4827401f4727ff1f4626ff1f4525
ff1f4424801f4324801f42231a1f4123801f4023801f3f22401f3e22ff1f
3d22401f3c21ff1f3b20ff1f3a1fff1f391eff1f381d161f371d2b1f361d
ff1f351d401f341cff1f2e2d801f2d2b801f2c2b201f2519ff1f24081b19
5c23081a195c2219ff1f2116ff1f200c18165c1f170d1f1e17ff1f1d16ff
1f1c160d1f1b1b19005b181816005b1a1b19005b171816005b1519381638
5a0f1501ff1501134d1255404811ff1055125910590d4d0c55054d04550c
5904590f800e550b4d0a55074d0655011000550e590a5906590059094d08
55034d025508590259200250028002b002e002050340400501b901900054
2b4bb807ff524bb008505bb00188b02553b00188b040515ab00688b00055
5a5b58b101018e59858d8d001d424bb0905358b20300001d4259b1020243
5158b104038e5973002b002b2b2b002b002b002b002b2b2b2b2b002b002b
2b2b002b002b2b2b017374012b012b012b012b012b2b2b002b2b012b2b01
2b002b012b002b012b2b2b2b2b2b2b2b002b2b2b2b012b2b2b002b2b2b2b
2b2b012b2b2b002b2b2b2b2b2b012b2b2b2b2b2b002b2b2b2b2b2b2b2b18
00>
[301 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 0 2 <0004000fffe800f200d000080011002d0051003b401b0d15092504150025
364833484c4c253f3c3c2529222215154f254f002f2f12392f3311331139
2f3311392f33331133113311331133113330313716160623222726273716
160623222726271727372316060623222635343736373317333637170706
073337170607163635352322072733342717372322072733371726060717
07153337172315140736273720040a0204030410381d020a020502030c61
0310ab02020d0203050508040501711308170a1111330a12118e19104c0d
0b096d010b23530d0b09730b11081b18080741101667170121c915150b0b
10180716150a0c111662021c0d1104030104070b1a0c251d0f0417180c14
028104010a270309090e061d03090a14010e0f0504051016310f090b0b00
>WBAAAA+SimSun AddT42Char 

1 0 0 <> WBAAAA+SimSun AddT42Char 
WBAAAA+SimSun /CharStrings get begin
/g2 2 def
end
WBAAAA+SimSun /Encoding get
dup 102 /g2 put
pop
end
%ADOEndSubsetFont
/TXGBZL+SimSun /WBAAAA+SimSun findfont ct_VMDictPut
/TXGBZL+SimSun*1 
[102{/.notdef}rp /g2 153{/.notdef}rp]
TXGBZL+SimSun nf
TXGBZL+SimSun*1 [7.5 0 0 -7.5 0 0 ]msf
241.786 42.4982 mo
(f)sh
%ADOBeginSubsetFont: XBAAAA+SimSun Initial
ct_T42Dict begin
-0.008 -0.141 1 0.859
 256 array 0 1 255 {1 index exch /.notdef put} for  /XBAAAA+SimSun
Type42DictBegin
[<00010000000c000c000c000c4f532f324fd9e4e2000000cc000000566376
742004ba01cd00000124000000ba6670676dc564b4f6000001e000000dee
676c796622b4318800001d10000000b868656164eb87fd0d00000fd00000
003668686561020100d70000100800000024686d74780200000d0000102c
0000000c6c6f63610000005c00001038000000086d61787002e404d00000
1040000000206e616d65cb9995870000106000000aaa7072657051510fe7
00001b0c0000020467646972000000000000000000000000000100800190
0005000800800080000000100080008000000080000c0041000002010600
030101010101000000031000000000000000000000005a59454300400000
f0ff00dcffdc002400dc00248000000000000000000000b7fff800af0002
00af000200740002000000020000000200000002ffdfffff00b100000000
00020000000f001000060006000e00060006000600100006001000080010
000e00070007000e00090011000700190007000d0009000e000d00170009
0015000200090006000e0010001300160006001000080010000c000e0010
00060008000c00060008000e0009001100130007000a000f00190007000a
00060009000d000f00120017000600090013001600020009000b000e0000
404687868584838281807f7e7d7c7b7a797877767574737271706f6e6d6c
6b6a696867666564636261605f5e5d5c5b5a5958575655545351504f4e4d
4c4b4a49484746281f100a092c01b10b0a432343650a2d2c00b10a0b4323
430b2d2c01b00643b00743650a2d2cb04f2b20b0405158214b525845441b
2121591b2321b040b0042545b004254561648a63525845441b212159592d
2c00b00743b006430b2d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c2320b000508a8a64b10003255458b0401bb1010325
5458b005438b59b04f2b5923b0622b2321235865592d2cb108000c215460
432d2cb10c000c215460432d2c012047b0024320b8100062b81000635723
b8010062b8100063575a58b020606659482d2cb1000225b00225b0022553
b800352378b00225b0022560b020632020b00625236250588a21b0016023
1b2020b00625236252582321b001611b8a212321205959b8ffc11c60b020
6323212d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b12601885158b940
00020063b80400885458b202400243604259b94000040063b80800885458
b2028002436042595959595959b10002435458400a0540084009400c020d
021bb10102435458b2054008ba010000090100b30c010d011bb180024352
58b2054008b80180b109401bb2054008ba01800009014059b94000008088
55b94000020063b8040088555a58b30c000d011bb30c000d015959594242
4242422d2c45b1024e2b23b04f2b20b0405158214b5158b0022545b1014e
2b60591b2321b003254520648a63b0405358b1024e2b601b215959442d2c
20b00050205823651b2359b114148a7045b04f2b23b1610626602b8a58b0
05438b592358655923103a2d2cb003254963234660b04f2b23b00425b004
2549b0032563562060b062602bb003252010468a4660b02063613a2d2cb0
0016b1020325b1010425013e003eb10102060cb00a236542b00b2342b102
0325b1010425013f003fb10102060cb006236542b0072342b00116b10002
4354584523452018698a6323622020b0405058671b665961b02063b04023
61b00423421bb104004221215918012d2c2045b1004e2b442d2c4b51b140
4f2b505b582045b1014e2b208a8a4420b1400426616361b1014e2b44211b
23218a45b1014e2b208a234444592d2c4b51b1404f2b505b5845208ab040
6163601b23214559b1014e2b442d2c2345208a4523612064b04051b00425
20b0005323b040515a5ab1404f2b545a588a0c642364235358b140408a61
2063611b2063591b8a5963b1024e2b60442d2c012d2c002d2c05b10b0a43
2343650a2d2cb10a0b4323430b022d2cb002256366b00225b82000626023
622d2cb0022563b0206066b00225b82000626023622d2cb002256367b002
25b82000626023622d2cb002256366b02060b00225b82000626023622d2c
234ab1024e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b0022561
64b00343525821206459b1024e2b23b000505865592d2c238a4a234564b0
022564b002256164b00343525821206459b1014e2b23b000505865592d2c
20b003254ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb003
25b003258ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb003
2546b003254660b004252eb00425b00425b0042620b000505821b06a1bb0
6c592bb0032546b00325466061b08062208a2010233a232010233a2d2cb0
032547b003254760b0052547b0806361b00225b00625496323b005254ab0
80632058621b2159b0042646608a468a4660b02063612d2cb00426b00425
b00425b00426b06e2b208a2010233a232010233a2d2c2320b001545821b0
0225b1024e2bb0805020605920606020b001515821211b20b00551582120
6661b0402361b100032550b00325b00325505a5820b00325618a535821b0
00591b21591bb00754582066616523211b2121b000595959b1024e2b2d2c
b00225b004254ab0005358b0001b8a8a238ab00159b004254620666120b0
0526b0062649b00526b00526b0702b236165b02060206661b02061652d2c
b0022546208a20b000505821b1024e2b1b452321596165b00225103b2d2c
b0042620b802006220b80200638a236120b05d602bb00525118a128a2039
8a58ba005d10000004266356602b23212010204620b1024e2b23611b2321
208a201049b1024e2b593b2d2cba005d10000009256356602bb00525b005
25b00526b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba00
5d10000008266356602b20b0005258b0502bb00525b00525b00725b00725
b00525b0712bb0021738b00052b00225b001525a58b00425b0062549b003
25b00525496020b0405258211bb000525820b0025458b00425b00425b007
25b0072549b00217381bb00425b00425b00425b0062549b0021738595959
595921212121212d2cba005d1000000b256356602bb00725b00725b00625
b00625b00c25b00c25b00925b00825b06e2bb0041738b00725b00725b007
26b06d2bb00425b00425b00426b06d2bb0502bb00625b00625b00325b071
2bb00525b00525b00325b002173820b00625b00625b00525b0712b60b006
25b00625b0042565b0021738b00225b002256020b040535821b0406123b0
4061231bb8ffc05058b0406023b04060235959b00825b00825b00426b002
1738b00525b005258ab002173820b0005258b00625b0082549b00325b005
25496020b0405258211bb0005258b00625b00625b00625b00625b00b25b0
0b2549b0041738b00625b00625b00625b00625b00a25b00a25b00725b071
2bb0041738b00425b00425b00525b00725b00525b0712bb00217381bb004
25b00425b9ffc00002173859595921212121212121212d2cb00425b00325
87b00325b003258a20b000505821b0651bb068592b64b00425b0042506b0
0425b0042549202063b00325206351b1000325545b5821212321071b2063
b0022520636120b0532b8a63b00525b0052587b00425b004264ab0005058
6559b00426200146230046b00526200146230046b0001600b000234801b0
0023480020b0012348b00223480120b0012348b002234823b20200010823
38b2020001092338b1020107b00116592d2c23100d0c8a63238a636064b9
40000400635058b000381b3c592d2cb00625b00925b00925b00726b0762b
23b0005458051b0459b00425b00626b0772bb00525b00526b00525b00526
b0762bb0005458051b0459b0772b2d2cb00725b00a25b00a25b00826b076
2b8ab0005458051b0459b00525b00726b0772bb00625b00626b00625b006
26b0762b08b0772b2d2cb00725b00a25b00a25b00826b0762b8a8a08b004
25b00626b0772bb00525b00526b00525b00526b0762bb0005458051b0459
b0772b2d2cb00825b00b25b00b25b00926b0762bb00426b0042608b00525
b00726b0772bb00625b00626b00625b00626b0762b08b0772b2d2c03b003
25b003254ab00425b003254a02b00525b005264ab00526b005264ab00426
638a8a63612d2cb15d0e25602bb00c2611b0052612b00a2539b0072539b0
0a25b00a25b00925b07c2bb00050b00b25b00825b00a25b07c2bb0005054
58b00725b00b2587b00425b004250bb00a2510b00925c1b00225b002250b
b0072510b00625c11bb00725b00b25b00b25b9ffff00762bb00425b00425
0bb00725b00a25b0772bb00a25b00825b00825b9ffff00762bb00225b002
250bb00a25b00725b0772b59b00a2546b00a254660b0082546b008254660
b00625b006250bb00c25b00c25b00c2620b000505821b06a1bb06c592bb0
0425b004250bb00925b00925b0092620b000505821b06a1bb06c592b23b0
0a2546b00a25466061b0206323b0082546b00825466061b02063b1010c25
5458041b0559b00a262010b003253ab00626b006260bb0072620108a3ab1
0107265458041b0559b005262010b002253a8a8a0b232010233a2d2c23b0
015458b9000040001bb940000000598ab0015458b9000040001bb9400000
0059b07d2b2d2c8a8a080d8ab0015458b9000040001bb94000000059b07d
2b2d2c08b0015458b9000040001bb940000000590db07d2b2d2cb00426b0
0426080db00426b00426080db07d2b2d2c200146230046b00a43b00b438a
632362612d2cb0092bb006252eb005257dc5b00625b00525b0042520b000
505821b06a1bb06c592bb00525b00425b0032520b000505821b06a1bb06c
592b18b00825b00725b00625b00a25b06f2bb00625b00525b0042620b000
505821b0661bb068592bb00525b00425b0042620b000505821b0661bb068
592b54587db0042510b00325c5b0022510b00125c5b0052621b00526211b
b00626b00425b00325b00826b06f2b59b100024354587db00225b0822bb0
0525b0822b20206961b00443012361b06060206961b0206120b00826b008
268ab00217388a8a6120696161b00217381b2121212159182d2c4b52b101
0243535a58231020013c003c1b2121592d2c23b00225b00225535820b004
25583c1b3959b00160b8ffe91c592121212d2cb0022547b0022547548a20
201011b001608a2012b00161b0852b2d2cb0042547b002254754232012b0
01612320b0062620201011b00160b00626b0852b8a8ab0852b2d00000001
000000052666e0e098d05f0f3cf5000b010000000000b798428000000000
d3ce556efffeffdc010000dc0000000c00020000000000000001000000dc
ffdc00240100fffefff70100000100000000000000000000000000000003
01000000000000000100000d000000000000005c00010000000301810031
0000000000020010002f008800000217031e000000000000002601ce0001
000000000000002700000001000000000001000d00270001000000000002
000700340001000000000003000d003b0001000000000004000d00480001
000000000005000c00550001000000000006000d00610001000000000007
002c006e0003000104090000004e009a0003000104090001001a00e80003
000104090002000e01020003000104090003001a01100003000104090004
001a012a0003000104090005001801440003000104090006001a015c0003
00010409000700580176000300010409000d038801ce000300010409000e
005205560003000108040000008205a800030001080400010012062a0003
0001080400020004063c0003000108040003001206400003000108040004
0012065200030001080400050018066400030001080400060012067c0003
0001080400070058068e0003000108040008003e06e60003000108040009
003e0724000300010804000b00380762000300010804000c0038079a0003
000110040000004e07d20003000110040001001208200003000110040002
000408320003000110040003001208360003000110040004001208480003
0001100400050018085a0003000110040006001208720003000110040007
00580884a920436f70797269676874205a484f4e47594920456c65637472
6f6e696320436f2e203230303145564947534d2b53696d53756e52656775
6c617245564947534d2b53696d53756e45564947534d2b53696d53756e56
657273696f6e20352e313545564947534d2b53696d53756e54726164656d
61726b206f66205a484f4e47594920456c656374726f6e696320436f2e2c
204265696a696e6700a900200043006f0070007900720069006700680074
0020005a0048004f004e00470059004900200045006c0065006300740072
006f006e0069006300200043006f002e0020003200300030003100450056
004900470053004d002b00530069006d00530075006e0052006500670075
006c0061007200450056004900470053004d002b00530069006d00530075
006e00450056004900470053004d002b00530069006d00530075006e0056
0065007200730069006f006e00200035002e003100350045005600490047
0053004d002b00530069006d00530075006e00540072006100640065006d
00610072006b0020006f00660020005a0048004f004e0047005900490020
0045006c0065006300740072006f006e0069006300200043006f002e002c
0020004200650069006a0069006e0067004d006900630072006f0073006f
0066007400200073007500700070006c00690065006400200066006f006e
0074002e00200059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e007400200074006f002000630072
0065006100740065002c00200064006900730070006c00610079002c0020
0061006e00640020007000720069006e007400200063006f006e00740065
006e00740020006100730020007000650072006d00690074007400650064
00200062007900200074006800650020006c006900630065006e00730065
0020007400650072006d00730020006f00720020007400650072006d0073
0020006f00660020007500730065002c0020006f00660020007400680065
0020004d006900630072006f0073006f00660074002000700072006f0064
007500630074002c00200073006500720076006900630065002c0020006f
007200200063006f006e00740065006e007400200069006e002000770068
0069006300680020007400680069007300200066006f006e007400200077
0061007300200069006e0063006c0075006400650064002e00200059006f
00750020006d006100790020006f006e006c007900200028006900290020
0065006d0062006500640020007400680069007300200066006f006e0074
00200069006e00200063006f006e00740065006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
006500200065006d00620065006400640069006e00670020007200650073
007400720069006300740069006f006e007300200069006e0063006c0075
00640065006400200069006e0020007400680069007300200066006f006e
0074003b00200061006e006400200028006900690029002000740065006d
0070006f0072006100720069006c007900200064006f0077006e006c006f
006100640020007400680069007300200066006f006e007400200074006f
002000610020007000720069006e0074006500720020006f00720020006f
00740068006500720020006f007500740070007500740020006400650076
00690063006500200074006f002000680065006c00700020007000720069
006e007400200063006f006e00740065006e0074002e00200041006e0079
0020006f0074006800650072002000750073006500200069007300200070
0072006f0068006900620069007400650064002e0068007400740070003a
002f002f007700770077002e006d006900630072006f0073006f00660074
002e0063006f006d002f007400790070006f006700720061007000680079
002f0066006f006e0074007300a900200043006f00700079007200690067
006800740020005a0048004f004e00470059004900200045006c00650063
00740072006f006e0069006300200043006f002e00200032003000300031
000d000a5b574f536570636e753153174eac4e2d66134e2d680775355b50
4fe1606f6280672f67099650516c53f863d04f9b30020045005600490047
0053004d002b5b8b4f535e3889c400450056004900470053004d002b5b8b
4f5300450056004900470053004d002b5b8b4f5300560065007200730069
006f006e00200035002e0031003500450056004900470053004d002b5b8b
4f5300540072006100640065006d00610072006b0020006f00660020005a
0048004f004e00470059004900200045006c0065006300740072006f006e
0069006300200043006f002e002c0020004200650069006a0069006e0067
004200650069006a0069006e00670020005a0068006f006e006700590069
00200045006c0065006300740072006f006e00690063007300200043006f
002e004200650069006a0069006e00670020005a0068006f006e00670059
006900200045006c0065006300740072006f006e00690063007300200043
006f002e0068007400740070003a002f002f007700770077002e007a0068
006f006e006700790069006300740073002e0063006f006d002e0063006e
0068007400740070003a002f002f007700770077002e007a0068006f006e
006700790069006300740073002e0063006f006d002e0063006e00a90020
0043006f00700079007200690067006800740020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e0020003200300030003100450056004900470053004d002b5b8b
4f535e3889c400450056004900470053004d002b5b8b4f53004500560049
00470053004d002b5b8b4f5300560065007200730069006f006e00200035
002e0031003500450056004900470053004d002b5b8b4f53005400720061
00640065006d00610072006b0020006f00660020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e002c0020004200650069006a0069006e0067000040ff5c331a1f
5b33401f5a33ff1f5932ff1f5831801f5731401f5630ff1f55302b1f542f
ff1f532d201f522e401f512eff1f502cff1f4f2c2b1f4e2a2b1f4d2aff1f
4c29ff1f4b28101f4a282b1f4928ff1f4827401f4727ff1f4626ff1f4525
ff1f4424801f4324801f42231a1f4123801f4023801f3f22401f3e22ff1f
3d22401f3c21ff1f3b20ff1f3a1fff1f391eff1f381d161f371d2b1f361d
ff1f351d401f341cff1f2e2d801f2d2b801f2c2b201f2519ff1f24081b19
5c23081a195c2219ff1f2116ff1f200c18165c1f170d1f1e17ff1f1d16ff
1f1c160d1f1b1b19005b181816005b1a1b19005b171816005b1519381638
5a0f1501ff1501134d1255404811ff1055125910590d4d0c55054d04550c
5904590f800e550b4d0a55074d0655011000550e590a5906590059094d08
55034d025508590259200250028002b002e002050340400501b901900054
2b4bb807ff524bb008505bb00188b02553b00188b040515ab00688b00055
5a5b58b101018e59858d8d001d424bb0905358b20300001d4259b1020243
5158b104038e5973002b002b2b2b002b002b002b002b2b2b2b2b002b002b
2b2b002b002b2b2b017374012b012b012b012b012b2b2b002b2b012b2b01
2b002b012b002b012b2b2b2b2b2b2b2b002b2b2b2b012b2b2b002b2b2b2b
2b2b012b2b2b002b2b2b2b2b2b012b2b2b2b2b2b002b2b2b2b2b2b2b2b18
00>
[185 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 0 2 <0002000dffea00ef00cd0022002f0023400f2320181005100d0d2a282c2c
082a08002f2f12392f3311392f3333113332323031371616363723060607
27363637232207273336343517070607333717070e02073627073e022717
33371723160607961717080540052f26022524051b0d0b093d0117080101
3d07120905070f11011f880f1302010f8c0f15b00117190a0601244c3e3b
1003163a3603091412130b0715120b0d07472713040e0d1a143b602c090f
156e451b>XBAAAA+SimSun AddT42Char 

1 0 0 <> XBAAAA+SimSun AddT42Char 
XBAAAA+SimSun /CharStrings get begin
/g2 2 def
end
XBAAAA+SimSun /Encoding get
dup 134 /g2 put
pop
end
%ADOEndSubsetFont
/TXGBZM+SimSun /XBAAAA+SimSun findfont ct_VMDictPut
/TXGBZM+SimSun*1 
[134{/.notdef}rp /g2 121{/.notdef}rp]
TXGBZM+SimSun nf
TXGBZM+SimSun*1 [7.5 0 0 -7.5 0 0 ]msf
249.286 42.4982 mo
(\206)sh
148.626 65.0375 mo
233.047 43.932 li
@
236.534 43.0602 mo
235.452 43.1248 233.628 42.9633 232.296 42.5757 cv
233.022 45.482 li
234.015 44.5132 235.549 43.5123 236.534 43.0602 cv
f
gsave
377.94 59.9939 mo
347.411 59.9939 li
345.21 59.9939 343.426 61.7781 343.426 63.979 cv
343.426 72.4583 li
343.426 74.6592 345.21 76.4434 347.411 76.4434 cv
377.94 76.4434 li
380.141 76.4434 381.925 74.6592 381.925 72.4583 cv
381.925 63.979 li
381.925 61.7781 380.141 59.9939 377.94 59.9939 cv
cp
clp
324.171 84.6701 mo
401.179 84.6701 li
401.179 51.7671 li
324.171 51.7671 li
cp
level3{
gsave
clp
[.77008 0 0 -.32903 324.171 84.6701 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.77008 0 0 -.32903 324.171 84.6701 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
grestore
377.94 59.9939 mo
347.411 59.9939 li
345.21 59.9939 343.426 61.7781 343.426 63.979 cv
343.426 72.4583 li
343.426 74.6592 345.21 76.4434 347.411 76.4434 cv
377.94 76.4434 li
380.141 76.4434 381.925 74.6592 381.925 72.4583 cv
381.925 63.979 li
381.925 61.7781 380.141 59.9939 377.94 59.9939 cv
cp
@
TXGBYY+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
346.922 71.8951 mo
(\011)sh
TXGBYZ+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
357.422 71.8951 mo
(\017)sh
TXGBZA+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
367.922 71.8951 mo
(\021)sh
262.042 43.061 mo
339.739 62.4915 li
@
343.226 63.3635 mo
342.241 62.9113 340.708 61.9102 339.715 60.9414 cv
338.988 63.8476 li
340.32 63.4601 342.145 63.2988 343.226 63.3635 cv
f
%ADOBeginSubsetFont: YBAAAA+SimSun Initial
ct_T42Dict begin
-0.008 -0.141 1 0.859
 256 array 0 1 255 {1 index exch /.notdef put} for  /YBAAAA+SimSun
Type42DictBegin
[<00010000000c000c000c000c4f532f324fd9e4e2000000cc000000566376
742004ba01cd00000124000000ba6670676dc564b4f6000001e000000dee
676c79662658b6e500001d100000010868656164eb87fd0d00000fd00000
003668686561020100d70000100800000024686d7478020000090000102c
0000000c6c6f63610000008400001038000000086d61787002e404d00000
1040000000206e616d65f295a09b0000106000000aaa7072657051510fe7
00001b0c0000020467646972000000000000000000000000000100800190
0005000800800080000000100080008000000080000c0041000002010600
030101010101000000031000000000000000000000005a59454300400000
f0ff00dcffdc002400dc00248000000000000000000000b7fff800af0002
00af000200740002000000020000000200000002ffdfffff00b100000000
00020000000f001000060006000e00060006000600100006001000080010
000e00070007000e00090011000700190007000d0009000e000d00170009
0015000200090006000e0010001300160006001000080010000c000e0010
00060008000c00060008000e0009001100130007000a000f00190007000a
00060009000d000f00120017000600090013001600020009000b000e0000
404687868584838281807f7e7d7c7b7a797877767574737271706f6e6d6c
6b6a696867666564636261605f5e5d5c5b5a5958575655545351504f4e4d
4c4b4a49484746281f100a092c01b10b0a432343650a2d2c00b10a0b4323
430b2d2c01b00643b00743650a2d2cb04f2b20b0405158214b525845441b
2121591b2321b040b0042545b004254561648a63525845441b212159592d
2c00b00743b006430b2d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c2320b000508a8a64b10003255458b0401bb1010325
5458b005438b59b04f2b5923b0622b2321235865592d2cb108000c215460
432d2cb10c000c215460432d2c012047b0024320b8100062b81000635723
b8010062b8100063575a58b020606659482d2cb1000225b00225b0022553
b800352378b00225b0022560b020632020b00625236250588a21b0016023
1b2020b00625236252582321b001611b8a212321205959b8ffc11c60b020
6323212d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b12601885158b940
00020063b80400885458b202400243604259b94000040063b80800885458
b2028002436042595959595959b10002435458400a0540084009400c020d
021bb10102435458b2054008ba010000090100b30c010d011bb180024352
58b2054008b80180b109401bb2054008ba01800009014059b94000008088
55b94000020063b8040088555a58b30c000d011bb30c000d015959594242
4242422d2c45b1024e2b23b04f2b20b0405158214b5158b0022545b1014e
2b60591b2321b003254520648a63b0405358b1024e2b601b215959442d2c
20b00050205823651b2359b114148a7045b04f2b23b1610626602b8a58b0
05438b592358655923103a2d2cb003254963234660b04f2b23b00425b004
2549b0032563562060b062602bb003252010468a4660b02063613a2d2cb0
0016b1020325b1010425013e003eb10102060cb00a236542b00b2342b102
0325b1010425013f003fb10102060cb006236542b0072342b00116b10002
4354584523452018698a6323622020b0405058671b665961b02063b04023
61b00423421bb104004221215918012d2c2045b1004e2b442d2c4b51b140
4f2b505b582045b1014e2b208a8a4420b1400426616361b1014e2b44211b
23218a45b1014e2b208a234444592d2c4b51b1404f2b505b5845208ab040
6163601b23214559b1014e2b442d2c2345208a4523612064b04051b00425
20b0005323b040515a5ab1404f2b545a588a0c642364235358b140408a61
2063611b2063591b8a5963b1024e2b60442d2c012d2c002d2c05b10b0a43
2343650a2d2cb10a0b4323430b022d2cb002256366b00225b82000626023
622d2cb0022563b0206066b00225b82000626023622d2cb002256367b002
25b82000626023622d2cb002256366b02060b00225b82000626023622d2c
234ab1024e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b0022561
64b00343525821206459b1024e2b23b000505865592d2c238a4a234564b0
022564b002256164b00343525821206459b1014e2b23b000505865592d2c
20b003254ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb003
25b003258ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb003
2546b003254660b004252eb00425b00425b0042620b000505821b06a1bb0
6c592bb0032546b00325466061b08062208a2010233a232010233a2d2cb0
032547b003254760b0052547b0806361b00225b00625496323b005254ab0
80632058621b2159b0042646608a468a4660b02063612d2cb00426b00425
b00425b00426b06e2b208a2010233a232010233a2d2c2320b001545821b0
0225b1024e2bb0805020605920606020b001515821211b20b00551582120
6661b0402361b100032550b00325b00325505a5820b00325618a535821b0
00591b21591bb00754582066616523211b2121b000595959b1024e2b2d2c
b00225b004254ab0005358b0001b8a8a238ab00159b004254620666120b0
0526b0062649b00526b00526b0702b236165b02060206661b02061652d2c
b0022546208a20b000505821b1024e2b1b452321596165b00225103b2d2c
b0042620b802006220b80200638a236120b05d602bb00525118a128a2039
8a58ba005d10000004266356602b23212010204620b1024e2b23611b2321
208a201049b1024e2b593b2d2cba005d10000009256356602bb00525b005
25b00526b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba00
5d10000008266356602b20b0005258b0502bb00525b00525b00725b00725
b00525b0712bb0021738b00052b00225b001525a58b00425b0062549b003
25b00525496020b0405258211bb000525820b0025458b00425b00425b007
25b0072549b00217381bb00425b00425b00425b0062549b0021738595959
595921212121212d2cba005d1000000b256356602bb00725b00725b00625
b00625b00c25b00c25b00925b00825b06e2bb0041738b00725b00725b007
26b06d2bb00425b00425b00426b06d2bb0502bb00625b00625b00325b071
2bb00525b00525b00325b002173820b00625b00625b00525b0712b60b006
25b00625b0042565b0021738b00225b002256020b040535821b0406123b0
4061231bb8ffc05058b0406023b04060235959b00825b00825b00426b002
1738b00525b005258ab002173820b0005258b00625b0082549b00325b005
25496020b0405258211bb0005258b00625b00625b00625b00625b00b25b0
0b2549b0041738b00625b00625b00625b00625b00a25b00a25b00725b071
2bb0041738b00425b00425b00525b00725b00525b0712bb00217381bb004
25b00425b9ffc00002173859595921212121212121212d2cb00425b00325
87b00325b003258a20b000505821b0651bb068592b64b00425b0042506b0
0425b0042549202063b00325206351b1000325545b5821212321071b2063
b0022520636120b0532b8a63b00525b0052587b00425b004264ab0005058
6559b00426200146230046b00526200146230046b0001600b000234801b0
0023480020b0012348b00223480120b0012348b002234823b20200010823
38b2020001092338b1020107b00116592d2c23100d0c8a63238a636064b9
40000400635058b000381b3c592d2cb00625b00925b00925b00726b0762b
23b0005458051b0459b00425b00626b0772bb00525b00526b00525b00526
b0762bb0005458051b0459b0772b2d2cb00725b00a25b00a25b00826b076
2b8ab0005458051b0459b00525b00726b0772bb00625b00626b00625b006
26b0762b08b0772b2d2cb00725b00a25b00a25b00826b0762b8a8a08b004
25b00626b0772bb00525b00526b00525b00526b0762bb0005458051b0459
b0772b2d2cb00825b00b25b00b25b00926b0762bb00426b0042608b00525
b00726b0772bb00625b00626b00625b00626b0762b08b0772b2d2c03b003
25b003254ab00425b003254a02b00525b005264ab00526b005264ab00426
638a8a63612d2cb15d0e25602bb00c2611b0052612b00a2539b0072539b0
0a25b00a25b00925b07c2bb00050b00b25b00825b00a25b07c2bb0005054
58b00725b00b2587b00425b004250bb00a2510b00925c1b00225b002250b
b0072510b00625c11bb00725b00b25b00b25b9ffff00762bb00425b00425
0bb00725b00a25b0772bb00a25b00825b00825b9ffff00762bb00225b002
250bb00a25b00725b0772b59b00a2546b00a254660b0082546b008254660
b00625b006250bb00c25b00c25b00c2620b000505821b06a1bb06c592bb0
0425b004250bb00925b00925b0092620b000505821b06a1bb06c592b23b0
0a2546b00a25466061b0206323b0082546b00825466061b02063b1010c25
5458041b0559b00a262010b003253ab00626b006260bb0072620108a3ab1
0107265458041b0559b005262010b002253a8a8a0b232010233a2d2c23b0
015458b9000040001bb940000000598ab0015458b9000040001bb9400000
0059b07d2b2d2c8a8a080d8ab0015458b9000040001bb94000000059b07d
2b2d2c08b0015458b9000040001bb940000000590db07d2b2d2cb00426b0
0426080db00426b00426080db07d2b2d2c200146230046b00a43b00b438a
632362612d2cb0092bb006252eb005257dc5b00625b00525b0042520b000
505821b06a1bb06c592bb00525b00425b0032520b000505821b06a1bb06c
592b18b00825b00725b00625b00a25b06f2bb00625b00525b0042620b000
505821b0661bb068592bb00525b00425b0042620b000505821b0661bb068
592b54587db0042510b00325c5b0022510b00125c5b0052621b00526211b
b00626b00425b00325b00826b06f2b59b100024354587db00225b0822bb0
0525b0822b20206961b00443012361b06060206961b0206120b00826b008
268ab00217388a8a6120696161b00217381b2121212159182d2c4b52b101
0243535a58231020013c003c1b2121592d2c23b00225b00225535820b004
25583c1b3959b00160b8ffe91c592121212d2cb0022547b0022547548a20
201011b001608a2012b00161b0852b2d2cb0042547b002254754232012b0
01612320b0062620201011b00160b00626b0852b8a8ab0852b2d00000001
0000000526668e9b73865f0f3cf5000b010000000000b798428000000000
d3ce556efffeffdc010000dc0000000c00020000000000000001000000dc
ffdc00240100fffefff70100000100000000000000000000000000000003
010000000000000001000009000000000000008400010000000301810031
0000000000020010002f008800000217031e000000000000002601ce0001
000000000000002700000001000000000001000d00270001000000000002
000700340001000000000003000d003b0001000000000004000d00480001
000000000005000c00550001000000000006000d00610001000000000007
002c006e0003000104090000004e009a0003000104090001001a00e80003
000104090002000e01020003000104090003001a01100003000104090004
001a012a0003000104090005001801440003000104090006001a015c0003
00010409000700580176000300010409000d038801ce000300010409000e
005205560003000108040000008205a800030001080400010012062a0003
0001080400020004063c0003000108040003001206400003000108040004
0012065200030001080400050018066400030001080400060012067c0003
0001080400070058068e0003000108040008003e06e60003000108040009
003e0724000300010804000b00380762000300010804000c0038079a0003
000110040000004e07d20003000110040001001208200003000110040002
000408320003000110040003001208360003000110040004001208480003
0001100400050018085a0003000110040006001208720003000110040007
00580884a920436f70797269676874205a484f4e47594920456c65637472
6f6e696320436f2e2032303031524a5957544f2b53696d53756e52656775
6c6172524a5957544f2b53696d53756e524a5957544f2b53696d53756e56
657273696f6e20352e3135524a5957544f2b53696d53756e54726164656d
61726b206f66205a484f4e47594920456c656374726f6e696320436f2e2c
204265696a696e6700a900200043006f0070007900720069006700680074
0020005a0048004f004e00470059004900200045006c0065006300740072
006f006e0069006300200043006f002e002000320030003000310052004a
005900570054004f002b00530069006d00530075006e0052006500670075
006c006100720052004a005900570054004f002b00530069006d00530075
006e0052004a005900570054004f002b00530069006d00530075006e0056
0065007200730069006f006e00200035002e003100350052004a00590057
0054004f002b00530069006d00530075006e00540072006100640065006d
00610072006b0020006f00660020005a0048004f004e0047005900490020
0045006c0065006300740072006f006e0069006300200043006f002e002c
0020004200650069006a0069006e0067004d006900630072006f0073006f
0066007400200073007500700070006c00690065006400200066006f006e
0074002e00200059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e007400200074006f002000630072
0065006100740065002c00200064006900730070006c00610079002c0020
0061006e00640020007000720069006e007400200063006f006e00740065
006e00740020006100730020007000650072006d00690074007400650064
00200062007900200074006800650020006c006900630065006e00730065
0020007400650072006d00730020006f00720020007400650072006d0073
0020006f00660020007500730065002c0020006f00660020007400680065
0020004d006900630072006f0073006f00660074002000700072006f0064
007500630074002c00200073006500720076006900630065002c0020006f
007200200063006f006e00740065006e007400200069006e002000770068
0069006300680020007400680069007300200066006f006e007400200077
0061007300200069006e0063006c0075006400650064002e00200059006f
00750020006d006100790020006f006e006c007900200028006900290020
0065006d0062006500640020007400680069007300200066006f006e0074
00200069006e00200063006f006e00740065006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
006500200065006d00620065006400640069006e00670020007200650073
007400720069006300740069006f006e007300200069006e0063006c0075
00640065006400200069006e0020007400680069007300200066006f006e
0074003b00200061006e006400200028006900690029002000740065006d
0070006f0072006100720069006c007900200064006f0077006e006c006f
006100640020007400680069007300200066006f006e007400200074006f
002000610020007000720069006e0074006500720020006f00720020006f
00740068006500720020006f007500740070007500740020006400650076
00690063006500200074006f002000680065006c00700020007000720069
006e007400200063006f006e00740065006e0074002e00200041006e0079
0020006f0074006800650072002000750073006500200069007300200070
0072006f0068006900620069007400650064002e0068007400740070003a
002f002f007700770077002e006d006900630072006f0073006f00660074
002e0063006f006d002f007400790070006f006700720061007000680079
002f0066006f006e0074007300a900200043006f00700079007200690067
006800740020005a0048004f004e00470059004900200045006c00650063
00740072006f006e0069006300200043006f002e00200032003000300031
000d000a5b574f536570636e753153174eac4e2d66134e2d680775355b50
4fe1606f6280672f67099650516c53f863d04f9b30020052004a00590057
0054004f002b5b8b4f535e3889c40052004a005900570054004f002b5b8b
4f530052004a005900570054004f002b5b8b4f5300560065007200730069
006f006e00200035002e003100350052004a005900570054004f002b5b8b
4f5300540072006100640065006d00610072006b0020006f00660020005a
0048004f004e00470059004900200045006c0065006300740072006f006e
0069006300200043006f002e002c0020004200650069006a0069006e0067
004200650069006a0069006e00670020005a0068006f006e006700590069
00200045006c0065006300740072006f006e00690063007300200043006f
002e004200650069006a0069006e00670020005a0068006f006e00670059
006900200045006c0065006300740072006f006e00690063007300200043
006f002e0068007400740070003a002f002f007700770077002e007a0068
006f006e006700790069006300740073002e0063006f006d002e0063006e
0068007400740070003a002f002f007700770077002e007a0068006f006e
006700790069006300740073002e0063006f006d002e0063006e00a90020
0043006f00700079007200690067006800740020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e002000320030003000310052004a005900570054004f002b5b8b
4f535e3889c40052004a005900570054004f002b5b8b4f530052004a0059
00570054004f002b5b8b4f5300560065007200730069006f006e00200035
002e003100350052004a005900570054004f002b5b8b4f53005400720061
00640065006d00610072006b0020006f00660020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e002c0020004200650069006a0069006e0067000040ff5c331a1f
5b33401f5a33ff1f5932ff1f5831801f5731401f5630ff1f55302b1f542f
ff1f532d201f522e401f512eff1f502cff1f4f2c2b1f4e2a2b1f4d2aff1f
4c29ff1f4b28101f4a282b1f4928ff1f4827401f4727ff1f4626ff1f4525
ff1f4424801f4324801f42231a1f4123801f4023801f3f22401f3e22ff1f
3d22401f3c21ff1f3b20ff1f3a1fff1f391eff1f381d161f371d2b1f361d
ff1f351d401f341cff1f2e2d801f2d2b801f2c2b201f2519ff1f24081b19
5c23081a195c2219ff1f2116ff1f200c18165c1f170d1f1e17ff1f1d16ff
1f1c160d1f1b1b19005b181816005b1a1b19005b171816005b1519381638
5a0f1501ff1501134d1255404811ff1055125910590d4d0c55054d04550c
5904590f800e550b4d0a55074d0655011000550e590a5906590059094d08
55034d025508590259200250028002b002e002050340400501b901900054
2b4bb807ff524bb008505bb00188b02553b00188b040515ab00688b00055
5a5b58b101018e59858d8d001d424bb0905358b20300001d4259b1020243
5158b104038e5973002b002b2b2b002b002b002b002b2b2b2b2b002b002b
2b2b002b002b2b2b017374012b012b012b012b012b2b2b002b2b012b2b01
2b002b012b002b012b2b2b2b2b2b2b2b002b2b2b2b012b2b2b002b2b2b2b
2b2b012b2b2b002b2b2b2b2b2b012b2b2b2b2b2b002b2b2b2b2b2b2b2b18
00>
[265 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 0 2 <00030009ffe900f200d3001a0023004d001f400d13074744441b0f001919
3a1b3a002f2f12392f333311392f33323230313733371707060607262735
16363637230e0207273e0237230727161606232227262717161736371706
060716161514062322272627151417073635350607273636372322072733
37170706077268090f09080f11061b2207090937010b2120021c1b09010f
0d451d0108020402040d1903071206100812091703040103040716010f01
181b0217250f260d0b0947090f0a0e09ac0a0d07981b050f070504010b99
2c4337140319324329022f111207090c127601021c0d0e030f0b09090406
07080a11480c12062211491b1103142f1c0309090f05130d>YBAAAA+SimSun AddT42Char 

1 0 0 <> YBAAAA+SimSun AddT42Char 
YBAAAA+SimSun /CharStrings get begin
/g2 2 def
end
YBAAAA+SimSun /Encoding get
dup 29 /g2 put
pop
end
%ADOEndSubsetFont
/TXGBZN+SimSun /YBAAAA+SimSun findfont ct_VMDictPut
/TXGBZN+SimSun*1 
[29{/.notdef}rp /g2 226{/.notdef}rp]
TXGBZN+SimSun nf
TXGBZN+SimSun*1 [7.29285 1.82362 1.82362 -7.29285 0 0 ]msf
292.98 60.8212 mo
(\035)sh
%ADOBeginSubsetFont: GBAAAA+SimSun AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TXGBYV+SimSun gcheck setglobal} if
1 146 3 <00030022ffe700e400d20003001f002300254010210119011313061f0920
090000160616002f2f12392f3333113311392f3333113330313715333527
342717071533371707151417073523141707363523150736342717151533
3585485701180846081109010f48011101450f01010f459142420627140b
08280c0d083a0b0c06124c0d09174b0c0812441509064242>TXGBYV+SimSun AddT42Char 
TXGBYV+SimSun /CharStrings get begin
/g3 3 def
end
TXGBYV+SimSun /Encoding get
dup 45 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/TXGBYV+SimSun*1 
[26{/.notdef}rp /g2 18{/.notdef}rp /g3 210{/.notdef}rp]
TXGBYV+SimSun nf
TXGBYV+SimSun*1 [7.29285 1.82362 1.82362 -7.29285 0 0 ]msf
300.272 62.6448 mo
(-)sh
gsave
377.94 3.30029 mo
347.411 3.30029 li
345.21 3.30029 343.426 5.08447 343.426 7.2854 cv
343.426 15.7646 li
343.426 17.9656 345.21 19.7497 347.411 19.7497 cv
377.94 19.7497 li
380.141 19.7497 381.925 17.9656 381.925 15.7646 cv
381.925 7.2854 li
381.925 5.08447 380.141 3.30029 377.94 3.30029 cv
cp
clp
324.171 27.9765 mo
401.179 27.9765 li
401.179 -4.92651 li
324.171 -4.92651 li
cp
level3{
gsave
clp
[.77008 0 0 -.32903 324.171 27.9765 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.77008 0 0 -.32903 324.171 27.9765 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
grestore
377.94 3.30029 mo
347.411 3.30029 li
345.21 3.30029 343.426 5.08447 343.426 7.2854 cv
343.426 15.7646 li
343.426 17.9656 345.21 19.7497 347.411 19.7497 cv
377.94 19.7497 li
380.141 19.7497 381.925 17.9656 381.925 15.7646 cv
381.925 7.2854 li
381.925 5.08447 380.141 3.30029 377.94 3.30029 cv
cp
@
TXGBZD+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
346.922 15.2021 mo
(\340)sh
TXGBYZ+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
357.422 15.2021 mo
(\017)sh
TXGBZA+FangSong*1 [10.5 0 0 -10.5 0 0 ]msf
367.922 15.2021 mo
(\021)sh
262.042 36.6826 mo
339.739 17.2522 li
@
343.226 16.3801 mo
342.145 16.4448 340.32 16.2834 338.988 15.896 cv
339.715 18.8022 li
340.708 17.8334 342.241 16.8323 343.226 16.3801 cv
f
%ADOBeginSubsetFont: ZBAAAA+SimSun Initial
ct_T42Dict begin
-0.008 -0.141 1 0.859
 256 array 0 1 255 {1 index exch /.notdef put} for  /ZBAAAA+SimSun
Type42DictBegin
[<00010000000c000c000c000c4f532f324fd9e4e2000000cc000000566376
742004ba01cd00000124000000ba6670676dc564b4f6000001e000000dee
676c7966a6e62ac200001d100000011c68656164eb87fd0d00000fd00000
003668686561020100d70000100800000024686d7478020000110000102c
0000000c6c6f63610000008e00001038000000086d61787002e404d00000
1040000000206e616d65b537852f0000106000000aaa7072657051510fe7
00001b0c0000020467646972000000000000000000000000000100800190
0005000800800080000000100080008000000080000c0041000002010600
030101010101000000031000000000000000000000005a59454300400000
f0ff00dcffdc002400dc00248000000000000000000000b7fff800af0002
00af000200740002000000020000000200000002ffdfffff00b100000000
00020000000f001000060006000e00060006000600100006001000080010
000e00070007000e00090011000700190007000d0009000e000d00170009
0015000200090006000e0010001300160006001000080010000c000e0010
00060008000c00060008000e0009001100130007000a000f00190007000a
00060009000d000f00120017000600090013001600020009000b000e0000
404687868584838281807f7e7d7c7b7a797877767574737271706f6e6d6c
6b6a696867666564636261605f5e5d5c5b5a5958575655545351504f4e4d
4c4b4a49484746281f100a092c01b10b0a432343650a2d2c00b10a0b4323
430b2d2c01b00643b00743650a2d2cb04f2b20b0405158214b525845441b
2121591b2321b040b0042545b004254561648a63525845441b212159592d
2c00b00743b006430b2d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c2320b000508a8a64b10003255458b0401bb1010325
5458b005438b59b04f2b5923b0622b2321235865592d2cb108000c215460
432d2cb10c000c215460432d2c012047b0024320b8100062b81000635723
b8010062b8100063575a58b020606659482d2cb1000225b00225b0022553
b800352378b00225b0022560b020632020b00625236250588a21b0016023
1b2020b00625236252582321b001611b8a212321205959b8ffc11c60b020
6323212d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b12601885158b940
00020063b80400885458b202400243604259b94000040063b80800885458
b2028002436042595959595959b10002435458400a0540084009400c020d
021bb10102435458b2054008ba010000090100b30c010d011bb180024352
58b2054008b80180b109401bb2054008ba01800009014059b94000008088
55b94000020063b8040088555a58b30c000d011bb30c000d015959594242
4242422d2c45b1024e2b23b04f2b20b0405158214b5158b0022545b1014e
2b60591b2321b003254520648a63b0405358b1024e2b601b215959442d2c
20b00050205823651b2359b114148a7045b04f2b23b1610626602b8a58b0
05438b592358655923103a2d2cb003254963234660b04f2b23b00425b004
2549b0032563562060b062602bb003252010468a4660b02063613a2d2cb0
0016b1020325b1010425013e003eb10102060cb00a236542b00b2342b102
0325b1010425013f003fb10102060cb006236542b0072342b00116b10002
4354584523452018698a6323622020b0405058671b665961b02063b04023
61b00423421bb104004221215918012d2c2045b1004e2b442d2c4b51b140
4f2b505b582045b1014e2b208a8a4420b1400426616361b1014e2b44211b
23218a45b1014e2b208a234444592d2c4b51b1404f2b505b5845208ab040
6163601b23214559b1014e2b442d2c2345208a4523612064b04051b00425
20b0005323b040515a5ab1404f2b545a588a0c642364235358b140408a61
2063611b2063591b8a5963b1024e2b60442d2c012d2c002d2c05b10b0a43
2343650a2d2cb10a0b4323430b022d2cb002256366b00225b82000626023
622d2cb0022563b0206066b00225b82000626023622d2cb002256367b002
25b82000626023622d2cb002256366b02060b00225b82000626023622d2c
234ab1024e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b0022561
64b00343525821206459b1024e2b23b000505865592d2c238a4a234564b0
022564b002256164b00343525821206459b1014e2b23b000505865592d2c
20b003254ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb003
25b003258ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb003
2546b003254660b004252eb00425b00425b0042620b000505821b06a1bb0
6c592bb0032546b00325466061b08062208a2010233a232010233a2d2cb0
032547b003254760b0052547b0806361b00225b00625496323b005254ab0
80632058621b2159b0042646608a468a4660b02063612d2cb00426b00425
b00425b00426b06e2b208a2010233a232010233a2d2c2320b001545821b0
0225b1024e2bb0805020605920606020b001515821211b20b00551582120
6661b0402361b100032550b00325b00325505a5820b00325618a535821b0
00591b21591bb00754582066616523211b2121b000595959b1024e2b2d2c
b00225b004254ab0005358b0001b8a8a238ab00159b004254620666120b0
0526b0062649b00526b00526b0702b236165b02060206661b02061652d2c
b0022546208a20b000505821b1024e2b1b452321596165b00225103b2d2c
b0042620b802006220b80200638a236120b05d602bb00525118a128a2039
8a58ba005d10000004266356602b23212010204620b1024e2b23611b2321
208a201049b1024e2b593b2d2cba005d10000009256356602bb00525b005
25b00526b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba00
5d10000008266356602b20b0005258b0502bb00525b00525b00725b00725
b00525b0712bb0021738b00052b00225b001525a58b00425b0062549b003
25b00525496020b0405258211bb000525820b0025458b00425b00425b007
25b0072549b00217381bb00425b00425b00425b0062549b0021738595959
595921212121212d2cba005d1000000b256356602bb00725b00725b00625
b00625b00c25b00c25b00925b00825b06e2bb0041738b00725b00725b007
26b06d2bb00425b00425b00426b06d2bb0502bb00625b00625b00325b071
2bb00525b00525b00325b002173820b00625b00625b00525b0712b60b006
25b00625b0042565b0021738b00225b002256020b040535821b0406123b0
4061231bb8ffc05058b0406023b04060235959b00825b00825b00426b002
1738b00525b005258ab002173820b0005258b00625b0082549b00325b005
25496020b0405258211bb0005258b00625b00625b00625b00625b00b25b0
0b2549b0041738b00625b00625b00625b00625b00a25b00a25b00725b071
2bb0041738b00425b00425b00525b00725b00525b0712bb00217381bb004
25b00425b9ffc00002173859595921212121212121212d2cb00425b00325
87b00325b003258a20b000505821b0651bb068592b64b00425b0042506b0
0425b0042549202063b00325206351b1000325545b5821212321071b2063
b0022520636120b0532b8a63b00525b0052587b00425b004264ab0005058
6559b00426200146230046b00526200146230046b0001600b000234801b0
0023480020b0012348b00223480120b0012348b002234823b20200010823
38b2020001092338b1020107b00116592d2c23100d0c8a63238a636064b9
40000400635058b000381b3c592d2cb00625b00925b00925b00726b0762b
23b0005458051b0459b00425b00626b0772bb00525b00526b00525b00526
b0762bb0005458051b0459b0772b2d2cb00725b00a25b00a25b00826b076
2b8ab0005458051b0459b00525b00726b0772bb00625b00626b00625b006
26b0762b08b0772b2d2cb00725b00a25b00a25b00826b0762b8a8a08b004
25b00626b0772bb00525b00526b00525b00526b0762bb0005458051b0459
b0772b2d2cb00825b00b25b00b25b00926b0762bb00426b0042608b00525
b00726b0772bb00625b00626b00625b00626b0762b08b0772b2d2c03b003
25b003254ab00425b003254a02b00525b005264ab00526b005264ab00426
638a8a63612d2cb15d0e25602bb00c2611b0052612b00a2539b0072539b0
0a25b00a25b00925b07c2bb00050b00b25b00825b00a25b07c2bb0005054
58b00725b00b2587b00425b004250bb00a2510b00925c1b00225b002250b
b0072510b00625c11bb00725b00b25b00b25b9ffff00762bb00425b00425
0bb00725b00a25b0772bb00a25b00825b00825b9ffff00762bb00225b002
250bb00a25b00725b0772b59b00a2546b00a254660b0082546b008254660
b00625b006250bb00c25b00c25b00c2620b000505821b06a1bb06c592bb0
0425b004250bb00925b00925b0092620b000505821b06a1bb06c592b23b0
0a2546b00a25466061b0206323b0082546b00825466061b02063b1010c25
5458041b0559b00a262010b003253ab00626b006260bb0072620108a3ab1
0107265458041b0559b005262010b002253a8a8a0b232010233a2d2c23b0
015458b9000040001bb940000000598ab0015458b9000040001bb9400000
0059b07d2b2d2c8a8a080d8ab0015458b9000040001bb94000000059b07d
2b2d2c08b0015458b9000040001bb940000000590db07d2b2d2cb00426b0
0426080db00426b00426080db07d2b2d2c200146230046b00a43b00b438a
632362612d2cb0092bb006252eb005257dc5b00625b00525b0042520b000
505821b06a1bb06c592bb00525b00425b0032520b000505821b06a1bb06c
592b18b00825b00725b00625b00a25b06f2bb00625b00525b0042620b000
505821b0661bb068592bb00525b00425b0042620b000505821b0661bb068
592b54587db0042510b00325c5b0022510b00125c5b0052621b00526211b
b00626b00425b00325b00826b06f2b59b100024354587db00225b0822bb0
0525b0822b20206961b00443012361b06060206961b0206120b00826b008
268ab00217388a8a6120696161b00217381b2121212159182d2c4b52b101
0243535a58231020013c003c1b2121592d2c23b00225b00225535820b004
25583c1b3959b00160b8ffe91c592121212d2cb0022547b0022547548a20
201011b001608a2012b00161b0852b2d2cb0042547b002254754232012b0
01612320b0062620201011b00160b00626b0852b8a8ab0852b2d00000001
0000000526660841bfb85f0f3cf5000b010000000000b798428000000000
d3ce556efffeffdc010000dc0000000c00020000000000000001000000dc
ffdc00240100fffefff70100000100000000000000000000000000000003
010000000000000001000011000000000000008e00010000000301810031
0000000000020010002f008800000217031e000000000000002601ce0001
000000000000002700000001000000000001000d00270001000000000002
000700340001000000000003000d003b0001000000000004000d00480001
000000000005000c00550001000000000006000d00610001000000000007
002c006e0003000104090000004e009a0003000104090001001a00e80003
000104090002000e01020003000104090003001a01100003000104090004
001a012a0003000104090005001801440003000104090006001a015c0003
00010409000700580176000300010409000d038801ce000300010409000e
005205560003000108040000008205a800030001080400010012062a0003
0001080400020004063c0003000108040003001206400003000108040004
0012065200030001080400050018066400030001080400060012067c0003
0001080400070058068e0003000108040008003e06e60003000108040009
003e0724000300010804000b00380762000300010804000c0038079a0003
000110040000004e07d20003000110040001001208200003000110040002
000408320003000110040003001208360003000110040004001208480003
0001100400050018085a0003000110040006001208720003000110040007
00580884a920436f70797269676874205a484f4e47594920456c65637472
6f6e696320436f2e2032303031504b44424b512b53696d53756e52656775
6c6172504b44424b512b53696d53756e504b44424b512b53696d53756e56
657273696f6e20352e3135504b44424b512b53696d53756e54726164656d
61726b206f66205a484f4e47594920456c656374726f6e696320436f2e2c
204265696a696e6700a900200043006f0070007900720069006700680074
0020005a0048004f004e00470059004900200045006c0065006300740072
006f006e0069006300200043006f002e002000320030003000310050004b
00440042004b0051002b00530069006d00530075006e0052006500670075
006c006100720050004b00440042004b0051002b00530069006d00530075
006e0050004b00440042004b0051002b00530069006d00530075006e0056
0065007200730069006f006e00200035002e003100350050004b00440042
004b0051002b00530069006d00530075006e00540072006100640065006d
00610072006b0020006f00660020005a0048004f004e0047005900490020
0045006c0065006300740072006f006e0069006300200043006f002e002c
0020004200650069006a0069006e0067004d006900630072006f0073006f
0066007400200073007500700070006c00690065006400200066006f006e
0074002e00200059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e007400200074006f002000630072
0065006100740065002c00200064006900730070006c00610079002c0020
0061006e00640020007000720069006e007400200063006f006e00740065
006e00740020006100730020007000650072006d00690074007400650064
00200062007900200074006800650020006c006900630065006e00730065
0020007400650072006d00730020006f00720020007400650072006d0073
0020006f00660020007500730065002c0020006f00660020007400680065
0020004d006900630072006f0073006f00660074002000700072006f0064
007500630074002c00200073006500720076006900630065002c0020006f
007200200063006f006e00740065006e007400200069006e002000770068
0069006300680020007400680069007300200066006f006e007400200077
0061007300200069006e0063006c0075006400650064002e00200059006f
00750020006d006100790020006f006e006c007900200028006900290020
0065006d0062006500640020007400680069007300200066006f006e0074
00200069006e00200063006f006e00740065006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
006500200065006d00620065006400640069006e00670020007200650073
007400720069006300740069006f006e007300200069006e0063006c0075
00640065006400200069006e0020007400680069007300200066006f006e
0074003b00200061006e006400200028006900690029002000740065006d
0070006f0072006100720069006c007900200064006f0077006e006c006f
006100640020007400680069007300200066006f006e007400200074006f
002000610020007000720069006e0074006500720020006f00720020006f
00740068006500720020006f007500740070007500740020006400650076
00690063006500200074006f002000680065006c00700020007000720069
006e007400200063006f006e00740065006e0074002e00200041006e0079
0020006f0074006800650072002000750073006500200069007300200070
0072006f0068006900620069007400650064002e0068007400740070003a
002f002f007700770077002e006d006900630072006f0073006f00660074
002e0063006f006d002f007400790070006f006700720061007000680079
002f0066006f006e0074007300a900200043006f00700079007200690067
006800740020005a0048004f004e00470059004900200045006c00650063
00740072006f006e0069006300200043006f002e00200032003000300031
000d000a5b574f536570636e753153174eac4e2d66134e2d680775355b50
4fe1606f6280672f67099650516c53f863d04f9b30020050004b00440042
004b0051002b5b8b4f535e3889c40050004b00440042004b0051002b5b8b
4f530050004b00440042004b0051002b5b8b4f5300560065007200730069
006f006e00200035002e003100350050004b00440042004b0051002b5b8b
4f5300540072006100640065006d00610072006b0020006f00660020005a
0048004f004e00470059004900200045006c0065006300740072006f006e
0069006300200043006f002e002c0020004200650069006a0069006e0067
004200650069006a0069006e00670020005a0068006f006e006700590069
00200045006c0065006300740072006f006e00690063007300200043006f
002e004200650069006a0069006e00670020005a0068006f006e00670059
006900200045006c0065006300740072006f006e00690063007300200043
006f002e0068007400740070003a002f002f007700770077002e007a0068
006f006e006700790069006300740073002e0063006f006d002e0063006e
0068007400740070003a002f002f007700770077002e007a0068006f006e
006700790069006300740073002e0063006f006d002e0063006e00a90020
0043006f00700079007200690067006800740020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e002000320030003000310050004b00440042004b0051002b5b8b
4f535e3889c40050004b00440042004b0051002b5b8b4f530050004b0044
0042004b0051002b5b8b4f5300560065007200730069006f006e00200035
002e003100350050004b00440042004b0051002b5b8b4f53005400720061
00640065006d00610072006b0020006f00660020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e002c0020004200650069006a0069006e0067000040ff5c331a1f
5b33401f5a33ff1f5932ff1f5831801f5731401f5630ff1f55302b1f542f
ff1f532d201f522e401f512eff1f502cff1f4f2c2b1f4e2a2b1f4d2aff1f
4c29ff1f4b28101f4a282b1f4928ff1f4827401f4727ff1f4626ff1f4525
ff1f4424801f4324801f42231a1f4123801f4023801f3f22401f3e22ff1f
3d22401f3c21ff1f3b20ff1f3a1fff1f391eff1f381d161f371d2b1f361d
ff1f351d401f341cff1f2e2d801f2d2b801f2c2b201f2519ff1f24081b19
5c23081a195c2219ff1f2116ff1f200c18165c1f170d1f1e17ff1f1d16ff
1f1c160d1f1b1b19005b181816005b1a1b19005b171816005b1519381638
5a0f1501ff1501134d1255404811ff1055125910590d4d0c55054d04550c
5904590f800e550b4d0a55074d0655011000550e590a5906590059094d08
55034d025508590259200250028002b002e002050340400501b901900054
2b4bb807ff524bb008505bb00188b02553b00188b040515ab00688b00055
5a5b58b101018e59858d8d001d424bb0905358b20300001d4259b1020243
5158b104038e5973002b002b2b2b002b002b002b002b2b2b2b2b002b002b
2b2b002b002b2b2b017374012b012b012b012b012b2b2b002b2b012b2b01
2b002b012b002b012b2b2b2b2b2b2b2b002b2b2b2b012b2b2b002b2b2b2b
2b2b012b2b2b002b2b2b2b2b2b012b2b2b2b2b2b002b2b2b2b2b2b2b2b18
00>
[285 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 0 2 <00070011ffe600f500d3000900100026003500390048004c003b401b184a
3f3f01454949011c161601373434012b3636010a0e0e240124002f2f1239
2f3311392f3311392f3311392f3311392f3311392f3332303137371e0206
232227260733371723220717161635352315073634271733371707151406
072627273634271733371707141707352315351533350714170735231507
36342717333717071533356901100c01070103030464c70c11c30d0b9119
0c9f0e01010e9e0a0e09060b041e6701011054090d07010e575701010e3c
0e01010e3a090d503cd00306090c07080b150c1203a70301084e61071e3b
1e090a0e064e0a0b040e0766101e0f08090d05180d050b07291c1c5b1813
060e090711221107090d02212100>ZBAAAA+SimSun AddT42Char 

1 0 0 <> ZBAAAA+SimSun AddT42Char 
ZBAAAA+SimSun /CharStrings get begin
/g2 2 def
end
ZBAAAA+SimSun /Encoding get
dup 216 /g2 put
pop
end
%ADOEndSubsetFont
/TXGBZO+SimSun /ZBAAAA+SimSun findfont ct_VMDictPut
/TXGBZO+SimSun*1 
[216{/.notdef}rp /g2 39{/.notdef}rp]
TXGBZO+SimSun nf
TXGBZO+SimSun*1 [7.29285 -1.82362 -1.82362 -7.29285 0 0 ]msf
294.257 24.0311 mo
(\330)sh
%ADOBeginSubsetFont: GBAAAA+SimSun AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TXGBYV+SimSun gcheck setglobal} if
1 290 4 <0001000cffea00f500cf0015000cb309110011002f2f113330313717071e
02171506072e02270e0207273e026f1e0a061d311e14081b231605041430
2a022a2b0fcf0d09354a330505010d13333a3330413512031a3d5d00>TXGBYV+SimSun AddT42Char 
TXGBYV+SimSun /CharStrings get begin
/g4 4 def
end
TXGBYV+SimSun /Encoding get
dup 186 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/TXGBYV+SimSun*1 
[26{/.notdef}rp /g2 18{/.notdef}rp /g3 140{/.notdef}rp /g4 69{/.notdef}rp]
TXGBYV+SimSun nf
TXGBYV+SimSun*1 [7.29285 -1.82362 -1.82362 -7.29285 0 0 ]msf
301.549 22.2075 mo
(-)sh
TXGBZE+CMSY7*1 [7.29285 -1.82302 -1.82302 -7.29285 0 0 ]msf
182.747 51.2491 mo
(\024)sh
TXGBZC+CMR7*1 [7.29285 -1.82302 -1.82302 -7.29285 0 0 ]msf
191.629 49.0287 mo
(40)
[4.15253 -1.03802 0 0 ]xysh
%ADOBeginSubsetFont: ACAAAA+SimSun Initial
ct_T42Dict begin
-0.008 -0.141 1 0.859
 256 array 0 1 255 {1 index exch /.notdef put} for  /ACAAAA+SimSun
Type42DictBegin
[<00010000000c000c000c000c4f532f324fd9e4e2000000cc000000566376
742004ba01cd00000124000000ba6670676dc564b4f6000001e000000dee
676c79663239cca000001d100000005468656164eb87fd0d00000fd00000
003668686561020100d70000100800000024686d74780200000d0000102c
0000000c6c6f63610000002a00001038000000086d61787002e404d00000
1040000000206e616d65cb7f8e580000106000000aaa7072657051510fe7
00001b0c0000020467646972000000000000000000000000000100800190
0005000800800080000000100080008000000080000c0041000002010600
030101010101000000031000000000000000000000005a59454300400000
f0ff00dcffdc002400dc00248000000000000000000000b7fff800af0002
00af000200740002000000020000000200000002ffdfffff00b100000000
00020000000f001000060006000e00060006000600100006001000080010
000e00070007000e00090011000700190007000d0009000e000d00170009
0015000200090006000e0010001300160006001000080010000c000e0010
00060008000c00060008000e0009001100130007000a000f00190007000a
00060009000d000f00120017000600090013001600020009000b000e0000
404687868584838281807f7e7d7c7b7a797877767574737271706f6e6d6c
6b6a696867666564636261605f5e5d5c5b5a5958575655545351504f4e4d
4c4b4a49484746281f100a092c01b10b0a432343650a2d2c00b10a0b4323
430b2d2c01b00643b00743650a2d2cb04f2b20b0405158214b525845441b
2121591b2321b040b0042545b004254561648a63525845441b212159592d
2c00b00743b006430b2d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c2320b000508a8a64b10003255458b0401bb1010325
5458b005438b59b04f2b5923b0622b2321235865592d2cb108000c215460
432d2cb10c000c215460432d2c012047b0024320b8100062b81000635723
b8010062b8100063575a58b020606659482d2cb1000225b00225b0022553
b800352378b00225b0022560b020632020b00625236250588a21b0016023
1b2020b00625236252582321b001611b8a212321205959b8ffc11c60b020
6323212d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b12601885158b940
00020063b80400885458b202400243604259b94000040063b80800885458
b2028002436042595959595959b10002435458400a0540084009400c020d
021bb10102435458b2054008ba010000090100b30c010d011bb180024352
58b2054008b80180b109401bb2054008ba01800009014059b94000008088
55b94000020063b8040088555a58b30c000d011bb30c000d015959594242
4242422d2c45b1024e2b23b04f2b20b0405158214b5158b0022545b1014e
2b60591b2321b003254520648a63b0405358b1024e2b601b215959442d2c
20b00050205823651b2359b114148a7045b04f2b23b1610626602b8a58b0
05438b592358655923103a2d2cb003254963234660b04f2b23b00425b004
2549b0032563562060b062602bb003252010468a4660b02063613a2d2cb0
0016b1020325b1010425013e003eb10102060cb00a236542b00b2342b102
0325b1010425013f003fb10102060cb006236542b0072342b00116b10002
4354584523452018698a6323622020b0405058671b665961b02063b04023
61b00423421bb104004221215918012d2c2045b1004e2b442d2c4b51b140
4f2b505b582045b1014e2b208a8a4420b1400426616361b1014e2b44211b
23218a45b1014e2b208a234444592d2c4b51b1404f2b505b5845208ab040
6163601b23214559b1014e2b442d2c2345208a4523612064b04051b00425
20b0005323b040515a5ab1404f2b545a588a0c642364235358b140408a61
2063611b2063591b8a5963b1024e2b60442d2c012d2c002d2c05b10b0a43
2343650a2d2cb10a0b4323430b022d2cb002256366b00225b82000626023
622d2cb0022563b0206066b00225b82000626023622d2cb002256367b002
25b82000626023622d2cb002256366b02060b00225b82000626023622d2c
234ab1024e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b0022561
64b00343525821206459b1024e2b23b000505865592d2c238a4a234564b0
022564b002256164b00343525821206459b1014e2b23b000505865592d2c
20b003254ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb003
25b003258ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb003
2546b003254660b004252eb00425b00425b0042620b000505821b06a1bb0
6c592bb0032546b00325466061b08062208a2010233a232010233a2d2cb0
032547b003254760b0052547b0806361b00225b00625496323b005254ab0
80632058621b2159b0042646608a468a4660b02063612d2cb00426b00425
b00425b00426b06e2b208a2010233a232010233a2d2c2320b001545821b0
0225b1024e2bb0805020605920606020b001515821211b20b00551582120
6661b0402361b100032550b00325b00325505a5820b00325618a535821b0
00591b21591bb00754582066616523211b2121b000595959b1024e2b2d2c
b00225b004254ab0005358b0001b8a8a238ab00159b004254620666120b0
0526b0062649b00526b00526b0702b236165b02060206661b02061652d2c
b0022546208a20b000505821b1024e2b1b452321596165b00225103b2d2c
b0042620b802006220b80200638a236120b05d602bb00525118a128a2039
8a58ba005d10000004266356602b23212010204620b1024e2b23611b2321
208a201049b1024e2b593b2d2cba005d10000009256356602bb00525b005
25b00526b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba00
5d10000008266356602b20b0005258b0502bb00525b00525b00725b00725
b00525b0712bb0021738b00052b00225b001525a58b00425b0062549b003
25b00525496020b0405258211bb000525820b0025458b00425b00425b007
25b0072549b00217381bb00425b00425b00425b0062549b0021738595959
595921212121212d2cba005d1000000b256356602bb00725b00725b00625
b00625b00c25b00c25b00925b00825b06e2bb0041738b00725b00725b007
26b06d2bb00425b00425b00426b06d2bb0502bb00625b00625b00325b071
2bb00525b00525b00325b002173820b00625b00625b00525b0712b60b006
25b00625b0042565b0021738b00225b002256020b040535821b0406123b0
4061231bb8ffc05058b0406023b04060235959b00825b00825b00426b002
1738b00525b005258ab002173820b0005258b00625b0082549b00325b005
25496020b0405258211bb0005258b00625b00625b00625b00625b00b25b0
0b2549b0041738b00625b00625b00625b00625b00a25b00a25b00725b071
2bb0041738b00425b00425b00525b00725b00525b0712bb00217381bb004
25b00425b9ffc00002173859595921212121212121212d2cb00425b00325
87b00325b003258a20b000505821b0651bb068592b64b00425b0042506b0
0425b0042549202063b00325206351b1000325545b5821212321071b2063
b0022520636120b0532b8a63b00525b0052587b00425b004264ab0005058
6559b00426200146230046b00526200146230046b0001600b000234801b0
0023480020b0012348b00223480120b0012348b002234823b20200010823
38b2020001092338b1020107b00116592d2c23100d0c8a63238a636064b9
40000400635058b000381b3c592d2cb00625b00925b00925b00726b0762b
23b0005458051b0459b00425b00626b0772bb00525b00526b00525b00526
b0762bb0005458051b0459b0772b2d2cb00725b00a25b00a25b00826b076
2b8ab0005458051b0459b00525b00726b0772bb00625b00626b00625b006
26b0762b08b0772b2d2cb00725b00a25b00a25b00826b0762b8a8a08b004
25b00626b0772bb00525b00526b00525b00526b0762bb0005458051b0459
b0772b2d2cb00825b00b25b00b25b00926b0762bb00426b0042608b00525
b00726b0772bb00625b00626b00625b00626b0762b08b0772b2d2c03b003
25b003254ab00425b003254a02b00525b005264ab00526b005264ab00426
638a8a63612d2cb15d0e25602bb00c2611b0052612b00a2539b0072539b0
0a25b00a25b00925b07c2bb00050b00b25b00825b00a25b07c2bb0005054
58b00725b00b2587b00425b004250bb00a2510b00925c1b00225b002250b
b0072510b00625c11bb00725b00b25b00b25b9ffff00762bb00425b00425
0bb00725b00a25b0772bb00a25b00825b00825b9ffff00762bb00225b002
250bb00a25b00725b0772b59b00a2546b00a254660b0082546b008254660
b00625b006250bb00c25b00c25b00c2620b000505821b06a1bb06c592bb0
0425b004250bb00925b00925b0092620b000505821b06a1bb06c592b23b0
0a2546b00a25466061b0206323b0082546b00825466061b02063b1010c25
5458041b0559b00a262010b003253ab00626b006260bb0072620108a3ab1
0107265458041b0559b005262010b002253a8a8a0b232010233a2d2c23b0
015458b9000040001bb940000000598ab0015458b9000040001bb9400000
0059b07d2b2d2c8a8a080d8ab0015458b9000040001bb94000000059b07d
2b2d2c08b0015458b9000040001bb940000000590db07d2b2d2cb00426b0
0426080db00426b00426080db07d2b2d2c200146230046b00a43b00b438a
632362612d2cb0092bb006252eb005257dc5b00625b00525b0042520b000
505821b06a1bb06c592bb00525b00425b0032520b000505821b06a1bb06c
592b18b00825b00725b00625b00a25b06f2bb00625b00525b0042620b000
505821b0661bb068592bb00525b00425b0042620b000505821b0661bb068
592b54587db0042510b00325c5b0022510b00125c5b0052621b00526211b
b00626b00425b00325b00826b06f2b59b100024354587db00225b0822bb0
0525b0822b20206961b00443012361b06060206961b0206120b00826b008
268ab00217388a8a6120696161b00217381b2121212159182d2c4b52b101
0243535a58231020013c003c1b2121592d2c23b00225b00225535820b004
25583c1b3959b00160b8ffe91c592121212d2cb0022547b0022547548a20
201011b001608a2012b00161b0852b2d2cb0042547b002254754232012b0
01612320b0062620201011b00160b00626b0852b8a8ab0852b2d00000001
000000052666c606744a5f0f3cf5000b010000000000b798428000000000
d3ce556efffeffdc010000dc0000000c00020000000000000001000000dc
ffdc00240100fffefff70100000100000000000000000000000000000003
01000000000000000100000d000000000000002a00010000000301810031
0000000000020010002f008800000217031e000000000000002601ce0001
000000000000002700000001000000000001000d00270001000000000002
000700340001000000000003000d003b0001000000000004000d00480001
000000000005000c00550001000000000006000d00610001000000000007
002c006e0003000104090000004e009a0003000104090001001a00e80003
000104090002000e01020003000104090003001a01100003000104090004
001a012a0003000104090005001801440003000104090006001a015c0003
00010409000700580176000300010409000d038801ce000300010409000e
005205560003000108040000008205a800030001080400010012062a0003
0001080400020004063c0003000108040003001206400003000108040004
0012065200030001080400050018066400030001080400060012067c0003
0001080400070058068e0003000108040008003e06e60003000108040009
003e0724000300010804000b00380762000300010804000c0038079a0003
000110040000004e07d20003000110040001001208200003000110040002
000408320003000110040003001208360003000110040004001208480003
0001100400050018085a0003000110040006001208720003000110040007
00580884a920436f70797269676874205a484f4e47594920456c65637472
6f6e696320436f2e2032303031514f454c474e2b53696d53756e52656775
6c6172514f454c474e2b53696d53756e514f454c474e2b53696d53756e56
657273696f6e20352e3135514f454c474e2b53696d53756e54726164656d
61726b206f66205a484f4e47594920456c656374726f6e696320436f2e2c
204265696a696e6700a900200043006f0070007900720069006700680074
0020005a0048004f004e00470059004900200045006c0065006300740072
006f006e0069006300200043006f002e002000320030003000310051004f
0045004c0047004e002b00530069006d00530075006e0052006500670075
006c006100720051004f0045004c0047004e002b00530069006d00530075
006e0051004f0045004c0047004e002b00530069006d00530075006e0056
0065007200730069006f006e00200035002e003100350051004f0045004c
0047004e002b00530069006d00530075006e00540072006100640065006d
00610072006b0020006f00660020005a0048004f004e0047005900490020
0045006c0065006300740072006f006e0069006300200043006f002e002c
0020004200650069006a0069006e0067004d006900630072006f0073006f
0066007400200073007500700070006c00690065006400200066006f006e
0074002e00200059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e007400200074006f002000630072
0065006100740065002c00200064006900730070006c00610079002c0020
0061006e00640020007000720069006e007400200063006f006e00740065
006e00740020006100730020007000650072006d00690074007400650064
00200062007900200074006800650020006c006900630065006e00730065
0020007400650072006d00730020006f00720020007400650072006d0073
0020006f00660020007500730065002c0020006f00660020007400680065
0020004d006900630072006f0073006f00660074002000700072006f0064
007500630074002c00200073006500720076006900630065002c0020006f
007200200063006f006e00740065006e007400200069006e002000770068
0069006300680020007400680069007300200066006f006e007400200077
0061007300200069006e0063006c0075006400650064002e00200059006f
00750020006d006100790020006f006e006c007900200028006900290020
0065006d0062006500640020007400680069007300200066006f006e0074
00200069006e00200063006f006e00740065006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
006500200065006d00620065006400640069006e00670020007200650073
007400720069006300740069006f006e007300200069006e0063006c0075
00640065006400200069006e0020007400680069007300200066006f006e
0074003b00200061006e006400200028006900690029002000740065006d
0070006f0072006100720069006c007900200064006f0077006e006c006f
006100640020007400680069007300200066006f006e007400200074006f
002000610020007000720069006e0074006500720020006f00720020006f
00740068006500720020006f007500740070007500740020006400650076
00690063006500200074006f002000680065006c00700020007000720069
006e007400200063006f006e00740065006e0074002e00200041006e0079
0020006f0074006800650072002000750073006500200069007300200070
0072006f0068006900620069007400650064002e0068007400740070003a
002f002f007700770077002e006d006900630072006f0073006f00660074
002e0063006f006d002f007400790070006f006700720061007000680079
002f0066006f006e0074007300a900200043006f00700079007200690067
006800740020005a0048004f004e00470059004900200045006c00650063
00740072006f006e0069006300200043006f002e00200032003000300031
000d000a5b574f536570636e753153174eac4e2d66134e2d680775355b50
4fe1606f6280672f67099650516c53f863d04f9b30020051004f0045004c
0047004e002b5b8b4f535e3889c40051004f0045004c0047004e002b5b8b
4f530051004f0045004c0047004e002b5b8b4f5300560065007200730069
006f006e00200035002e003100350051004f0045004c0047004e002b5b8b
4f5300540072006100640065006d00610072006b0020006f00660020005a
0048004f004e00470059004900200045006c0065006300740072006f006e
0069006300200043006f002e002c0020004200650069006a0069006e0067
004200650069006a0069006e00670020005a0068006f006e006700590069
00200045006c0065006300740072006f006e00690063007300200043006f
002e004200650069006a0069006e00670020005a0068006f006e00670059
006900200045006c0065006300740072006f006e00690063007300200043
006f002e0068007400740070003a002f002f007700770077002e007a0068
006f006e006700790069006300740073002e0063006f006d002e0063006e
0068007400740070003a002f002f007700770077002e007a0068006f006e
006700790069006300740073002e0063006f006d002e0063006e00a90020
0043006f00700079007200690067006800740020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e002000320030003000310051004f0045004c0047004e002b5b8b
4f535e3889c40051004f0045004c0047004e002b5b8b4f530051004f0045
004c0047004e002b5b8b4f5300560065007200730069006f006e00200035
002e003100350051004f0045004c0047004e002b5b8b4f53005400720061
00640065006d00610072006b0020006f00660020005a0048004f004e0047
0059004900200045006c0065006300740072006f006e0069006300200043
006f002e002c0020004200650069006a0069006e0067000040ff5c331a1f
5b33401f5a33ff1f5932ff1f5831801f5731401f5630ff1f55302b1f542f
ff1f532d201f522e401f512eff1f502cff1f4f2c2b1f4e2a2b1f4d2aff1f
4c29ff1f4b28101f4a282b1f4928ff1f4827401f4727ff1f4626ff1f4525
ff1f4424801f4324801f42231a1f4123801f4023801f3f22401f3e22ff1f
3d22401f3c21ff1f3b20ff1f3a1fff1f391eff1f381d161f371d2b1f361d
ff1f351d401f341cff1f2e2d801f2d2b801f2c2b201f2519ff1f24081b19
5c23081a195c2219ff1f2116ff1f200c18165c1f170d1f1e17ff1f1d16ff
1f1c160d1f1b1b19005b181816005b1a1b19005b171816005b1519381638
5a0f1501ff1501134d1255404811ff1055125910590d4d0c55054d04550c
5904590f800e550b4d0a55074d0655011000550e590a5906590059094d08
55034d025508590259200250028002b002e002050340400501b901900054
2b4bb807ff524bb008505bb00188b02553b00188b040515ab00688b00055
5a5b58b101018e59858d8d001d424bb0905358b20300001d4259b1020243
5158b104038e5973002b002b2b2b002b002b002b002b2b2b2b2b002b002b
2b2b002b002b2b2b017374012b012b012b012b012b2b2b002b2b012b2b01
2b002b012b002b012b2b2b2b2b2b2b2b002b2b2b2b012b2b2b002b2b2b2b
2b2b012b2b2b002b2b2b2b2b2b012b2b2b2b2b2b002b2b2b2b2b2b2b2b18
00>
[85 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 0 2 <0001000dfffc00f200bd00110019400a050c0c04000f0f090209002f2f12
392f333332113330313733371723153337172322072733352322071ba60f
155e431117c40d0b096b3c0d0bae0f15a311170309a30300>ACAAAA+SimSun AddT42Char 

1 0 0 <> ACAAAA+SimSun AddT42Char 
ACAAAA+SimSun /CharStrings get begin
/g2 2 def
end
ACAAAA+SimSun /Encoding get
dup 229 /g2 put
pop
end
%ADOEndSubsetFont
/TXGBZP+SimSun /ACAAAA+SimSun findfont ct_VMDictPut
/TXGBZP+SimSun*1 
[229{/.notdef}rp /g2 26{/.notdef}rp]
TXGBZP+SimSun nf
TXGBZP+SimSun*1 [6.02887 -4.52145 -4.52145 -6.02887 0 0 ]msf
72.2146 110.395 mo
(\345)sh
TXGBYV+SimSun*1 [6.02887 -4.52145 -4.52145 -6.02887 0 0 ]msf
78.2435 105.874 mo
(\272)sh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
[/Gradient [/0 /1 ]]
] del_res
/TXGBYX+SimSun*1 uf
/TXGBYX+SimSun uf
/IBAAAA+SimSun uf
/TXGBYW+SimSun*1 uf
/TXGBYW+SimSun uf
/HBAAAA+SimSun uf
/TXGBZH+SimSun*1 uf
/TXGBZH+SimSun uf
/SBAAAA+SimSun uf
/TXGBZF+SimSun*1 uf
/TXGBZF+SimSun uf
/QBAAAA+SimSun uf
/TXGBZE+CMSY7*1 uf
/TXGBZE+CMSY7 uf
/PBAAAA+CMSY7 uf
/TXGBZG+SimSun*1 uf
/TXGBZG+SimSun uf
/RBAAAA+SimSun uf
/TXGBZA+FangSong*1 uf
/TXGBZA+FangSong uf
/LBAAAA+FangSong uf
/TXGBZP+SimSun*1 uf
/TXGBZP+SimSun uf
/ACAAAA+SimSun uf
/TXGBZC+CMR7*1 uf
/TXGBZC+CMR7 uf
/NBAAAA+CMR7 uf
/TXGBZO+SimSun*1 uf
/TXGBZO+SimSun uf
/ZBAAAA+SimSun uf
/TXGBZL+SimSun*1 uf
/TXGBZL+SimSun uf
/WBAAAA+SimSun uf
/TXGBZN+SimSun*1 uf
/TXGBZN+SimSun uf
/YBAAAA+SimSun uf
/TXGBZJ+SimSun*1 uf
/TXGBZJ+SimSun uf
/UBAAAA+SimSun uf
/TXGBZM+SimSun*1 uf
/TXGBZM+SimSun uf
/XBAAAA+SimSun uf
/TXGBZK+SimSun*1 uf
/TXGBZK+SimSun uf
/VBAAAA+SimSun uf
/TXGBZI+SimSun*1 uf
/TXGBZI+SimSun uf
/TBAAAA+SimSun uf
/TXGBZD+FangSong*1 uf
/TXGBZD+FangSong uf
/OBAAAA+FangSong uf
/TXGBYV+SimSun*1 uf
/TXGBYV+SimSun uf
/GBAAAA+SimSun uf
/TXGBYU+SimSun*1 uf
/TXGBYU+SimSun uf
/FBAAAA+SimSun uf
/TXGBZB+CMMI7*1 uf
/TXGBZB+CMMI7 uf
/MBAAAA+CMMI7 uf
/TXGBYZ+FangSong*1 uf
/TXGBYZ+FangSong uf
/KBAAAA+FangSong uf
/TXGBYY+FangSong*1 uf
/TXGBYY+FangSong uf
/JBAAAA+FangSong uf
/TXGBYT+CMR10*1 uf
/TXGBYT+CMR10 uf
/EBAAAA+CMR10 uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
