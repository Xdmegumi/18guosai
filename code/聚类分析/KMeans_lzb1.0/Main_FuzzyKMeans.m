
% 模糊 K-Means 聚类 - 主函数
% 参考文献
% [1] 边肇祺 编著. 模式识别[M]. 北京:清华大学出版社. 1999. p280
% [2] Richard O.Duda 著,李宏东 译. 模式分类[M]. 北京:机械工业出版社. 2003. p425-426

clc
clear all
close all

%--------------------------------------------------------------------------
% 产生聚类样本

% m = 200;                                % 每一类样本个数
% X1 = randn(2,m);
% X2 = randn(2,m)+repmat([0;4],1,m);
% X3 = randn(2,m)+repmat([6;2],1,m);
% X = [X1,X2,X3];                         % 每一列为一个样本
load X.mat
%--------------------------------------------------------------------------
% 函数调用

c = 4;              % 聚类数
tmax = 20;          % 最大迭代次数
b = 2;              % 大于1的实数,b=(1,2)非线性扩张,b=(2,+inf)非线性压缩
g = 0.01;           % Jf变化门限      

%--------------------------------------------------------------------------
% 模糊 K-Means 聚类

M = Initialize(X,c);                    % 从c-1聚类的结果得到c聚类的代表点

% function [M] = Initialize(X,c)
% 从c-1聚类的结果得到c聚类的代表点
% 参考文献: Richard O.Duda 著,李宏东 译. 模式分类[M]. 北京:机械工业出版社. 2003. p424
% 输入参数:
% X - 样本点,每一列一个点
% c - 聚类中心数
%
% 输出参数:
% M - 聚类中心,每一列一个点

k = 0;
Jf = zeros(1,tmax);
while k<tmax
    
    k = k+1;    
    [T,tmp,jf,M] = FuzzyKMeans(X,M,b);       % 输出聚类结果和代价函数收敛曲线
    Jf(k) = jf;                              % 代价函数赋值
    
    if k>2 & abs(Jf(k)-Jf(k-1))<g
        break;                               % 连续2次迭代,je变化量小于g,提前结束
    end
    
end
Jf = Jf(1:k);

% function [T,N,jf,M2] = FuzzyKMeans(X,M,b)
% 模糊 K-Means 聚类
% 参考文献
% [1] 边肇祺 编著. 模式识别[M]. 北京:清华大学出版社. 1999. p280
% [2] Richard O.Duda 著,李宏东 译. 模式分类[M]. 北京:机械工业出版社. 2003. p425-426
% 输入参数:
% X  - 样本点,每一列一个点
% M  - 聚类中心,每一列一个点
% b  - 参数b
%
% 输出参数:
% T  - 类别标签,行矢量
% N  - 每一类个数
% jf - 代价函数值
% M2 - 新聚类中心,每一列一个点

%--------------------------------------------------------------------------
% 结果显示

% figure;
% plot(Jf,'b.-'); xlabel('t'); ylabel('Je'); title('代价函数')
%[0.96,0.55,0.53]-[0.18,0.77,0.36]-[0.49,0.67,0.98]
% 类别标记
S = {'^', 'color',[1,0.55,0.53],...
    's', 'color',[0.18,0.77,0.36],...
    '+', 'color',[0.49,0.67,0.98],...
    'o', 'color',[1,0.5,0.3]};
figure; hold on; axis equal;
city=['深圳','东莞','广州','佛州']
for j = 1:c
    I = find(T==j); 
    plot(X(1,I),X(2,I),S{3 * j - 2},S{3 * j - 1},S{3 * j},'MarkerSize',7,'LineWidth',1.2);                       % 类别输出
    plot(M(1,j),M(2,j),'kx','MarkerSize',14,'LineWidth',3);       % 类别中心
end
title(['Fuzzy K-Mean Clustering, c = ',num2str(c)]); hold off;
